{"version":3,"sources":["utils/hooks/Base64.js","utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/chekedFetch.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","components/commons/formsCommons/WithSwal.js","utils/apis/tasksAPI.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/tasks/tasksUtils.js","components/tasks/crud/Task.js","utils/hooks/useDevPassword.js","components/tasks/AssignTasks.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/WithDevPassword.js","components/EStellaAutocomplete.js","components/notes/TagsList.js","components/notes/Note.js","components/notes/NotesList.js","components/commons/MarkdownEditor.js","utils/apis/NoteApi.js","components/notes/AddNote.js","utils/hooks/useDevMail.js","components/notes/NotesMenu.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/SingleMenu.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","components/applications/DevApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageDate.js","components/process/manage/Dates.js","components/process/manage/ManageProcess.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","components/notes/NotesDrawer.js","components/tasks/review/SingleTaskReview.js","components/tasks/review/TasksCarousel.js","components/tasks/review/ReviewTask.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/DevView.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["decodeBase64","base64","Buffer","toString","encodeBase64","string","constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","Promise","resolve","setTimeout","text","ok","HttpError","code","message","Error","checkedFetch","url","data","errorMessage","status","checkResponseStatusOrThrowError","jwtAPI","userId","refreshToken","refreshApiPath","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","localStorage","getItem","getRefreshToken","setItem","get","deleteAuthToken","removeItem","deleteRefreshToken","undefined","catch","Swal","fire","icon","window","history","pushState","urlPath","location","reload","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","useHistory","useState","loggedIn","setLoggedIn","logout","push","filterTypes","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","textDecoration","Typography","variant","Button","createTheme","danger","main","success","secondary","card","light","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","selected","idx","selectedStyle","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","overflowY","item","map","handleSelect","getListItems","OffersList","getData","onSelectedOffer","handleShortOfferSelect","Grid","container","border","padding","spacing","src","defaultProps","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","httpError","offersAPI","offerId","json","forCandidate","queryParam","surname","files","offerData","offerID","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","title","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","margin","xs","md","sm","Image1","alt","Image2","Image3","interviewAPI","interviewId","applicationId","MeetingFab","mainButtonStyles","onDefaultView","onWhiteboard","onTask","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","showLoading","result","Math","floor","isStatus2xx","close","swalResult","isConfirmed","err","fallbackTask","descriptionBase64","descriptionFileName","testsBase64","timeLimit","tasksApi","organizationId","tasksStageId","taskStageUUID","devPassword","organizationUUID","task","credentials","setReload","tasksIds","keyValue","tasks","ably","Realtime","process","uuid","TaskWrapper","propId","toSolveTask","submitLeftOffset","propFetchTasks","fetchTasks","useParams","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","NaN","_","outerMonacoWrapperStyle","codeCheckerBaseLink","solverId","absoluteOffset","settings","top","right","submit","left","sharingCodeFunctions","convertFileToBase64","file","reject","reader","FileReader","readAsDataURL","onload","onerror","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Uint8Array","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","paper","boxShadow","shadows","GenericFileViewer","handleClose","classes","txt","setTxt","fileName","indexOf","File","fileBase64","Modal","onClose","getViewer","getFirstLineFromTaskDescription","descriptionInBase64","firstLine","Task","tasksOperations","shouldDisplayMenu","menuAnchor","setMenuAnchor","Menu","keepMounted","taskOperation","action","useDevPassword","devPasswordKey","getDevPassword","sessionStorage","setDevPassword","getEncodedDevPassword","modal","AssignTasks","modalOptions","alreadyAssignedTasks","organizationTasks","assignKey","assignUUIDValue","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","transform","empty","actionTitle","newTasksIds","assignedTask","ModalButtons","Section","overflow","GridList","flexWrap","cols","GridListTile","TasksPassword","handleSubmit","setPassword","TextField","onChange","target","label","onKeyPress","preventDefault","useKeyPress","CardActions","WithDevPassword","WrappedComponent","wrappedProps","createPassword","params","EStellaAutocomplete","Autocomplete","options","onSelect","renderInput","TagsList","tags","deletable","onDelete","tag","Chip","makeTag","Note","note","author","whiteSpace","NotesList","notes","MarkdownEditor","handleChange","view","usableView","menu","html","renderHTML","NoteApi","paramId","note_body","dev_password","param","AddNote","onCancel","uuid_key","noteText","setNoteText","setTags","currentTag","setCurrentTag","devMailKey","getDevMail","setDevMail","useDevMail","doAddNote","devMail","gap","flexFlow","varient","preConfirm","getPopup","querySelector","showValidationMessage","NotesMenu","setTag","showAdd","setShowAdd","m","Set","flatMap","JitsiWrapper","admin","roomName","displayName","companyId","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","setTaskStageUUID","getTasksByInterviewUUID","client_id","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","AdminMeetingDrawer","openNotesModal","setOpenNotesModal","openTasksModal","setOpenTasksModal","closedView","List","flexDirection","ListItem","fontSize","input","inputAttributes","autocapitalize","showCancelButton","Drawer","clsx","NotesMenuWrapper","setNotes","AssignTasksWrapper","setOrganizationTasks","setAlreadyAssignedTasks","MeetingDisplayNameForm","setName","mt","mb","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","isFetching","setIsFetching","Fetched","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","paddingTop","paddingBottom","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","setFile","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","DialogActions","disabled","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","newFiles","oldFiles","concat","handleDeleteFile","ind","error","helperText","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","SingleMenu","buttons","menuName","anchor","setAnchor","button","OfferDetails","getButtons","entries","reduce","groups","group","mr","ml","component","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","fixedOffers","companyOptions","positionOptions","screen","calculateWidth","toggleDrawer","bottom","onFilterSubmitted","ActiveFilter","avatar","Filter","setFilters","handleFilterDelete","newFilters","reloadOffers","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","fetching","setFetching","setFixedOffers","setSort","handleFilterSubmitted","getOffers","UnauthenticatedPage","withUserAuth","permittedTypes","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","forDev","applicationData","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","FileViewerWrapper","undecodedFile","applicationsAPI","devMails","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","items","changeEndDate","date","preparedDate","this","prepareDate","changeStartDate","startProcess","getDate","getMonth","getFullYear","ApplicationDetails","isHR","isDev","rejectApplication","cancelButtonText","nextStage","nextStageRequiresDevs","devsMails","trim","doSetNextStage","nextStageIsOneOf","types","checkForNext","indexOfNextStage","findIndex","getDisabled","teleportToMO","offerName","applicationDate","seekerFiles","DevApplicationDetails","devApplication","openAssignTasks","setOpenAssignTasks","assignTask","EmptyApplicationsView","Image","ApplicationsView","getApplications","mailInBase64","selectedApplication","setSelectedApplication","setApplications","getStandardView","innerApplications","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","control","reset","rules","required","some","s","defaultValue","form","lg","onSkillDelete","OfferForm","mode","watch","trigger","updateOffer","formResult","parseInt","creatorId","autoComplete","pattern","multiline","minRows","maxRows","ManageStages","processId","setStages","possibleStages","setPossibleStages","finally","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","onFirstListChange","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageDate","processStartDate","Dates","endDate","toLocaleDateString","selectedEndDate","setSelectedEndDate","startDate","selectedStartDate","setSelectedStartDate","isProcessStarted","ManageProcess","setProcess","showHelp","ManageProcessInside","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","MeetingOrganizerWrapper","propType","paramType","outsideValues","setOutsideValues","userData","setUserData","onPickSlotByJobSeeker","slot","hosts","guest","meetingOrganizerBaseLink","outsideJwt","outerFunctions","drawerStyle","outsideMeetingValues","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","state","React","subPage","clone","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","NotesDrawer","SingleTaskReview","results","tests","language","readOnly","TasksCarousel","infiniteLoop","ReviewTask","setTasks","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","labelPlacement","Form","addTestCase","testCase","setTestCase","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testData","expectedResult","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","createTimeLimit","TasksList","createTask","DevView","ListItemIcon","ListItemText","createRoute","path","getRoutes","routes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ec9d44cf.chunk.js","sourcesContent":["\r\nexport const decodeBase64 = (base64) => new Buffer(base64, \"base64\").toString('ascii')\r\n\r\nexport const encodeBase64 = (string) => new Buffer(string).toString('base64')\r\n\r\n","export const constants = {\r\n    navbar_height: \"60px\"\r\n}","export const tokenPayloadSchema = {\r\n    firstName: (value) => typeof value === 'string',\r\n    lastName: (value) => typeof value === 'string',\r\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\r\n    mail: (value) => typeof value === 'string',\r\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\r\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\r\n    exp: (value) => typeof value === 'number' && value % 1 === 0\r\n}","// export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\r\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\r\n\r\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\r\n\r\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\r\n","\r\n\r\nexport const headers = {\r\n    'Content-Type': 'application/json'\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\nimport {headers} from \"./headers\";\r\n\r\nexport const loginAPI = {\r\n    jwtTokenKey: \"x-jwt\",\r\n    authTokenKey: \"x-auth-token\",\r\n    refreshTokenKey: \"x-refresh-token\",\r\n\r\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\r\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\r\n\r\n    login: function(login, password) {\r\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                mail: login,\r\n                password: password\r\n            })\r\n        }).then(response => {\r\n            jwtUtils.saveTokenFromResponse(response)\r\n            return response\r\n        })\r\n    },\r\n\r\n    registerUser: function(login, password, firstName, lastName) {\r\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                mail: login,\r\n                password: password\r\n            })\r\n        })\r\n    },\r\n\r\n    registerCompany: function(login, password, name) {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve({text: \"ok\", ok: true})\r\n            }, 2000)\r\n        })\r\n    }\r\n}","class HttpError extends Error {\r\n    constructor(code, message) {\r\n        super(message)\r\n        this.code = code\r\n    }\r\n}\r\n\r\nconst checkResponseStatusOrThrowError = (response, errorMessage) => {\r\n    const code = response.status\r\n    if(code < 200 || code > 299) {\r\n        throw new HttpError(code, errorMessage || \"Something went wrong\")\r\n    }\r\n}\r\n\r\nexport const checkedFetch = (url, data, errorMessage) => {\r\n    return fetch(url, data)\r\n        .then(response => {\r\n            checkResponseStatusOrThrowError(response, errorMessage)\r\n            return response\r\n        })\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\nimport {checkedFetch} from \"../chekedFetch\";\r\n\r\nexport const jwtAPI = {\r\n    refreshToken: (userId, refreshToken) =>\r\n        checkedFetch(\r\n            recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"x-jwt\": refreshToken\r\n                }\r\n            }\r\n        )\r\n}","import {validateSchema} from \"../schemas/validateSchema\";\r\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\r\nimport {loginAPI} from \"../apis/LoginAPI\";\r\nimport {jwtAPI} from \"../apis/JwtAPI\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const jwtUtils = {\r\n    jwtHeaderKey: \"x-jwt\",\r\n\r\n    getUser: () => {\r\n        const token = jwtUtils.getAuthToken()\r\n        const possiblyUser = jwtUtils.getPayload(token)\r\n\r\n        return jwtUtils.payloadToOptUser(possiblyUser)\r\n    },\r\n\r\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\r\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\r\n\r\n    saveTokenFromResponse: (response) => {\r\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\r\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\r\n    },\r\n\r\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\r\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\r\n\r\n    refreshApiPath: (userId) => {\r\n        if (userId !== undefined)\r\n            return `/api/users/${userId}/refreshToken`\r\n        else\r\n            return undefined\r\n    },\r\n\r\n    refreshToken: () => {\r\n        const userId = jwtUtils.getUser()?.userId\r\n        const refreshToken = jwtUtils.getRefreshToken()\r\n        if(userId && refreshToken)\r\n            return jwtAPI.refreshToken(userId, refreshToken)\r\n                .then(response => {\r\n                    localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\r\n                    localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey));\r\n                    return response;\r\n                })\r\n                .catch(() => {\r\n                    localStorage.removeItem(loginAPI.authTokenStorageKey)\r\n                    localStorage.removeItem(loginAPI.refreshTokenStorageKey)\r\n                    Swal.fire({\r\n                        text: \"Your session expired. We will take you to our login page!\",\r\n                        icon: \"warning\"\r\n                    })\r\n                    .then(() => {\r\n                        window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n    },\r\n\r\n    tokenSplitter: (token) => {\r\n        if(typeof token === \"string\") {\r\n            const parts = token.split('.')\r\n            if(parts.length === 3){\r\n                return parts\r\n            } else return null\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n\r\n    getHeader: (token) =>\r\n        jwtUtils.safeJsonRetrieve(\r\n            jwtUtils.tokenSplitter(token)?.[0]\r\n        ),\r\n\r\n    getPayload: (token) =>\r\n        jwtUtils.safeJsonRetrieve(\r\n            jwtUtils.tokenSplitter(token)?.[1]\r\n        ),\r\n\r\n    base64UrlToBase64: (base64Url) =>\r\n        base64Url?.replace('-', '+').replace('_', '/'),\r\n\r\n    decodeBase64Url: (base64Url) =>\r\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\r\n\r\n    safeJsonRetrieve: (base64Url) => {\r\n        if(typeof base64Url === \"string\"){\r\n            try {\r\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\r\n                return JSON.parse(decoded)\r\n            } catch {\r\n                return null\r\n            }\r\n        } else return null\r\n    },\r\n\r\n    payloadToOptUser: (payload) => {\r\n        if(validateSchema(payload, tokenPayloadSchema))\r\n            return {\r\n                userId: Number(payload.iss),\r\n                firstName: payload.firstName,\r\n                lastName: payload.lastName,\r\n                userType: payload.userType,\r\n                mail: payload.mail\r\n            }\r\n        else\r\n            return null\r\n    },\r\n\r\n    isTokenActive: (token) => {\r\n        const payload = jwtUtils.getPayload(token)\r\n        const issuedAt = payload?.iat\r\n        const expiresAt = payload?.exp\r\n        if(issuedAt && expiresAt){\r\n            const currentDate = Date.now()\r\n            return issuedAt <= currentDate && currentDate <= expiresAt\r\n        }\r\n        return null\r\n    }\r\n}\r\n","export const validateSchema = (obj, schema) => obj &&\r\n    Object\r\n        .keys(schema)\r\n        .every(\r\n                key => schema[key](obj[key])\r\n        )\r\n\r\n","import {jwtUtils} from \"../jwt/jwtUtils\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {loginAPI} from \"../apis/LoginAPI\";\r\n\r\nexport const useLoggedIn = () => {\r\n    const history = useHistory()\r\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\r\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\r\n        setLoggedIn(false)\r\n        history.push(\"/\")\r\n        window.location.reload()\r\n    }\r\n\r\n    const login = () => {\r\n        setLoggedIn(true)\r\n        window.location.reload()\r\n    }\r\n\r\n    return { loggedIn, login, logout }\r\n}","export const filterTypes = {\r\n    MIN_SALARY: \"Minumum Salary\",\r\n    MAX_SALARY: \"Maximum Salary\",\r\n    COMPANY_NAME: \"Company Name\",\r\n    POSITION_NAME: \"Position Name\",\r\n}\r\n\r\nconst compare = (a, b, name) => {\r\n    if(a[name] < b[name]) return 1\r\n    if(a[name] > b[name]) return -1\r\n    return 0\r\n}\r\nexport const offerSort = [\r\n    {\r\n        name: \"Highest Salary\",\r\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\r\n    },\r\n    {\r\n        name: \"Lowest Salary\",\r\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\r\n    },\r\n    {\r\n        name: \"Name\",\r\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\r\n    }\r\n]\r\n\r\nexport const userTypes = {\r\n    JOB_SEEKER: \"job_seeker\",\r\n    HR: \"hr\",\r\n    ORGANIZATION: \"organization\"\r\n}\r\n\r\nexport const userMenuTabs = {\r\n    PROFILE: \"profile\",\r\n    SETTINGS: \"settings\",\r\n    FILES: \"files\"\r\n}\r\n\r\nexport const applicationStatus = {\r\n    IN_PROGRESS: \"In progress\",\r\n    ACCEPTED: \"Accepted\",\r\n    REJECTED: \"Rejected\"\r\n}","import React, {useState} from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport {userTypes} from \"../../utils/Enums\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    purple0: {\r\n        backgroundColor: deepPurple[300],\r\n        color: theme.palette.getContrastText(deepPurple[300])\r\n    },\r\n    purple1: {\r\n        backgroundColor: deepPurple[200],\r\n        color: theme.palette.getContrastText(deepPurple[100])\r\n    },\r\n    pink0: {\r\n        backgroundColor: \"#b53387\",\r\n        color: theme.palette.getContrastText(\"#b53387\")\r\n    },\r\n    green0: {\r\n        backgroundColor: \"#0c4f06\",\r\n        color: theme.palette.getContrastText(\"#0c4f06\")\r\n    },\r\n    red0: {\r\n        backgroundColor: \"#de2618\",\r\n        color: theme.palette.getContrastText(\"#de2618\")\r\n    },\r\n    red1: {\r\n        backgroundColor: \"#9c0a00\",\r\n        color: theme.palette.getContrastText(\"#9c0a00\")\r\n    },\r\n    orange0: {\r\n        backgroundColor: deepOrange[500],\r\n        color: theme.palette.getContrastText(deepOrange[500])\r\n    },\r\n    orange1: {\r\n        backgroundColor: deepOrange[300],\r\n        color: theme.palette.getContrastText(deepOrange[300])\r\n    },\r\n    orange2: {\r\n        backgroundColor: deepOrange[200],\r\n        color: theme.palette.getContrastText(deepOrange[200])\r\n    },\r\n}))\r\n\r\nexport default function UserMenu(props) {\r\n    const styles = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [direction, setDirection] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const {logout} = useLoggedIn()\r\n\r\n    const user = jwtUtils.getUser()\r\n\r\n    const colors = Object.values(styles)\r\n\r\n    const stringToColor = (string) => {\r\n        let hash = 0;\r\n\r\n        for (let i = 0; i < string.length; i += 1) {\r\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\r\n        }\r\n\r\n        return colors[hash % colors.length];\r\n    }\r\n\r\n    const userAvatar = (user) => {\r\n        return {\r\n            className: stringToColor(user.firstName+user.lastName+user.mail),\r\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\r\n        };\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChoice = (direction) => {\r\n        setAnchorEl(null);\r\n        setDirection(direction);\r\n    };\r\n\r\n    const redirect = (direction) => {\r\n        return <Redirect to={direction} />\r\n    }\r\n\r\n    return user && <>\r\n        {direction ? <>\r\n            {redirect(direction)}\r\n            <UserMenu {...props} />\r\n        </> : <div style={props.style}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n                <IconButton style={props.style} onClick={handleClick}>\r\n                    <Avatar {...userAvatar(user)} />\r\n                </IconButton>\r\n            </Box>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <Paper>\r\n                        <MenuList\r\n                            id=\"user-menu\"\r\n                            open={Boolean(anchorEl)}\r\n                        >\r\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\r\n                                Company's offers\r\n                            </MenuItem>}\r\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\r\n                                Company's partners\r\n                            </MenuItem>}\r\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\r\n                                My offers\r\n                            </MenuItem>}\r\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\r\n                                Create offer\r\n                            </MenuItem>}\r\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\r\n                                My applications\r\n                            </MenuItem>}\r\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\r\n                            <MenuItem onClick={() => {\r\n                                handleChoice(\"/\")\r\n                                logout()\r\n                            }}>Logout</MenuItem>\r\n                        </MenuList>\r\n                    </Paper>\r\n                </ClickAwayListener>\r\n            </Popover>\r\n        </div>}\r\n    </>\r\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\r\nimport {constants} from \"../../utils/constants\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\r\nimport UserMenu from \"../userMenu/UserMenu\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {loggedIn} = useLoggedIn()\r\n    const theme = useTheme()\r\n\r\n    return (<AppBar position=\"sticky\" style={{\r\n        background: theme.palette.primary.dark,\r\n        height: `${constants.navbar_height}`,\r\n        zIndex: theme.zIndex.drawer + 1\r\n    }}>\r\n        <Toolbar>\r\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\r\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Typography variant=\"h6\">\r\n                        e-Stella\r\n                    </Typography>\r\n                </Link>\r\n            </div>\r\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\r\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\">All Offers</Button>\r\n                </Link>\r\n            </div>\r\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\r\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\r\n                </Link>\r\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\r\n                </Link>\r\n            </div>}\r\n        </Toolbar>\r\n    </AppBar>)\r\n}\r\n\r\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\r\n\r\nexport const theme = createTheme({\r\n    zIndex: {\r\n        drawer: 1000\r\n    },\r\n    status: {\r\n        danger: {\r\n            main: '#d32f2f'\r\n        },\r\n        success: {\r\n            main: '#388e3c'\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#4c4fae'\r\n        },\r\n        secondary: {\r\n            main: '#54C1FB'\r\n        },\r\n        background: {\r\n            main: '#ffffff',\r\n            dark: '#272848'\r\n        },\r\n        card: {\r\n            main: '#d7d7d7',\r\n            light: '#e5e5e5',\r\n            dark: '#d3d3d3',\r\n            background: '#ffffff'\r\n        },\r\n        focused: {\r\n            light: '#8ff4ff',\r\n            main: '#54C1FB',\r\n            dark: '#0091c8'\r\n        }\r\n    }\r\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes} from \"./Enums\";\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport const scrollToTop = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n}\r\n\r\nexport const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase())\r\n}\r\n\r\nexport const getFilterValueByType = (filters, filterType) =>\r\n    filters?.find(filter => filter.type === filterType)?.value\r\n\r\nconst createFilterFunction = (filter) => {\r\n    switch (filter.type) {\r\n        case filterTypes.MIN_SALARY:\r\n            return (arg) => arg.minSalary >= filter.value\r\n        case filterTypes.MAX_SALARY:\r\n            return (arg) => arg.maxSalary <= filter.value\r\n        case filterTypes.COMPANY_NAME:\r\n            if (filter.value) {\r\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\r\n            } else {\r\n                return () => true\r\n            }\r\n        case filterTypes.POSITION_NAME:\r\n            if (filter.value) {\r\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\r\n            } else {\r\n                return () => true\r\n            }\r\n        default:\r\n            return () => true\r\n    }\r\n}\r\n\r\nexport const filterOffers = (offers, filters) => {\r\n    let tmpOffers = offers\r\n    filters.forEach(filter => {\r\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\r\n    })\r\n    return tmpOffers\r\n}\r\n\r\nexport const getIconFromFilterType = (filter) => {\r\n    switch (filter.type) {\r\n        case filterTypes.MIN_SALARY:\r\n            return <MonetizationOnIcon id={`min-filter-icon`} />\r\n        case filterTypes.MAX_SALARY:\r\n            return <MonetizationOnIcon id={`max-filter-icon`} />\r\n        case filterTypes.COMPANY_NAME:\r\n            return <BusinessIcon id={`company-filter-icon`} />\r\n        case filterTypes.POSITION_NAME:\r\n            return <PersonIcon id={`position-filter-icon`} />\r\n        default:\r\n            return null\r\n    }\r\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ListElement = ({ data, selected, onClick, idx }) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\r\n\r\n    return(\r\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\r\n            <Card variant=\"outlined\" style={selectedStyle}>\r\n                <CardContent style={{marginBottom: \"1em\"}}>\r\n                    <Typography variant=\"h5\">\r\n                        {data.first}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <div style={{marginTop: \"1em\"}}>\r\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\r\n                            {data.second}\r\n                        </Typography>\r\n                        <Typography style={{float: \"right\"}}>\r\n                            {data.third}\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nListElement.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    selected: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    idx: PropTypes.number.isRequired\r\n}","import React, {useState} from \"react\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {scrollToTop} from \"../../../utils/functions\";\r\nimport {ListElement} from \"./ListElement\";\r\n\r\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\r\n\r\n    const [selectedIdx, setSelectedIdx] = useState(-1)\r\n\r\n    const handleSelect = (item, idx) => {\r\n        if(isSelectable) {\r\n            setSelectedIdx(idx)\r\n            propsHandleSelect(item, idx)\r\n            scrollToTop()\r\n        }\r\n    }\r\n\r\n    const getListItems = () => {\r\n        return listItems\r\n            ?.filter((item, idx) => limit ? idx < limit : true)\r\n            ?.map((item, idx) => \r\n                (\r\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\r\n                              selected={selectedIdx === idx} data={extractData(item)} /> \r\n                )\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\r\n            {getListItems()}\r\n        </div>\r\n    )\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport {scrollToTop} from '../../../utils/functions';\r\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\r\nimport React from \"react\";\r\nimport {Grid, Typography} from '@material-ui/core'\r\n\r\nexport const OffersList = (props) => {\r\n\r\n    const offers = props.offers\r\n\r\n    const getData = (offer) => {\r\n        return {\r\n            first: offer.name,\r\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\r\n            third: offer.position,\r\n            offer: offer\r\n        }\r\n    }\r\n\r\n    const handleShortOfferSelect = (offer) => {\r\n        if(props.onSelectedOffer) {\r\n            props.onSelectedOffer(offer)\r\n            scrollToTop()\r\n        }\r\n    }\r\n\r\n    const getView = () => offers.length > 0 ?\r\n    (<ListWithSelection\r\n        listItems={offers}\r\n        extractData={getData}\r\n        limit={props.limit}\r\n        propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\r\n        isSelectable={!!props.onSelectedOffer}\r\n    />)\r\n    : \r\n    (<Grid container style={{height: '80vh', border: \"1px solid #eee\", padding: '2em', width: '100%'}} spacing={2} direction=\"column\">\r\n        <Grid item>\r\n            <img src=\"https://thumbs.dreamstime.com/b/job-offer-application-letter-response-career-opportunity-business-proposition-recruitment-agreement-man-receives-employment-188064915.jpg\"        \r\n                width=\"80%\"\r\n            />\r\n        </Grid>\r\n        <Grid item>\r\n            <Typography variant=\"h4\" style={{marginBottom: '3px'}}>No open offers!</Typography>\r\n            <Typography color=\"textSecondary\"> We're sorry but curently there are no offers that you can apply to. </Typography>\r\n        </Grid>\r\n    </Grid>)\r\n\r\n\r\n    return getView() \r\n    \r\n}\r\n\r\nOffersList.propTypes = {\r\n    limit: PropTypes.number,\r\n    onSelectedOffer: PropTypes.func,\r\n    offers: PropTypes.array.isRequired\r\n}\r\n\r\nOffersList.defaultProps = {\r\n    limit: 3\r\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\r\nimport {loginAPI} from \"./apis/LoginAPI\";\r\nimport {checkedFetch} from \"./chekedFetch\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const authFetch = (url, data, errorMessage) => {\r\n    const authToken = jwtUtils.getAuthToken()\r\n    const dataHeaders = data?.headers\r\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\r\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\r\n    const authData = Object.assign(data || {}, {headers: newHeaders})\r\n    return checkedFetch(url, authData, errorMessage)\r\n        .catch(httpError => {\r\n            if(httpError.code === 401)\r\n                jwtUtils.refreshToken().then(() => {\r\n                    authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\r\n                    return checkedFetch(url, authData, errorMessage)\r\n                        .catch(httpError => {\r\n                            if(httpError.code === 401) {\r\n                                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\r\n                                localStorage.removeItem(loginAPI.authTokenStorageKey)\r\n                                Swal.fire({\r\n                                    text: \"Your session expired. We will take you to our login page!\",\r\n                                    icon: \"warning\"\r\n                                })\r\n                                .then(() => {\r\n                                    window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\r\n                                    window.location.reload()\r\n                                })\r\n                            } else {\r\n                                throw httpError\r\n                            }\r\n                        })\r\n                })\r\n            else {\r\n                throw httpError\r\n            }\r\n        })\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\r\nimport {headers} from \"./headers\";\r\nimport {authFetch} from \"../authFetch\";\r\nimport {checkedFetch} from \"../chekedFetch\";\r\n\r\nexport const offersAPI = {\r\n    getOfferById: function(offerId){\r\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\r\n            .then(response => response.json())\r\n    },\r\n\r\n    getAllOffers: function(forCandidate = false){\r\n        const queryParam = forCandidate ? \"?only_started=true\" : \"\"\r\n        return checkedFetch(recruitmentServiceBasicAPILink + \"/api/offers\" + queryParam)\r\n            .then(response => response.json())\r\n    },\r\n\r\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                firstName: name,\r\n                lastName: surname,\r\n                mail: email,\r\n                files: files\r\n            })\r\n        })\r\n    },\r\n\r\n    create: function (offerData) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify(offerData)\r\n        })\r\n    },\r\n\r\n    update: function (offerData) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\r\n            method: \"PUT\",\r\n            headers: headers,\r\n            body: JSON.stringify(offerData)\r\n        })\r\n    },\r\n\r\n    applyWithUser: function(offerID, files) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                files: files\r\n            })\r\n        })\r\n    },\r\n\r\n    getOffersFromHr() {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\r\n            method: \"GET\",\r\n            headers: headers\r\n        }).then(response => response.json())\r\n    },\r\n\r\n    getOffersFromOrganization() {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\r\n            method: \"GET\"\r\n        }).then(response => response.json())\r\n    },\r\n\r\n    deleteOffer(id) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: headers\r\n        })\r\n    }\r\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React from \"react\";\r\n\r\nconst CenteredCircularProgress = (props) =>\r\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\r\n        <CircularProgress {...props} />\r\n    </div>\r\n\r\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Image1 from '../../assets/landing_page_image1.png';\r\nimport Image2 from '../../assets/landing_page_image2.png';\r\nimport Image3 from '../../assets/landing_page_image3.png';\r\nimport {OffersList} from \"../offers/list/OffersList\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\r\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\r\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport {userTypes} from \"../../utils/Enums\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst LandingOffers = () => {\r\n    const history = useHistory()\r\n    const [offers, setOffers] = useState(null)\r\n\r\n    useEffect(() => {\r\n        offersAPI.getAllOffers(true)\r\n            .then(data => setOffers(data || []))\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get offers!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\r\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\r\n            Latest Offers\r\n        </Typography>\r\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\r\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\r\n                        limit={3}\r\n                        offers={offers}/>\r\n        </div>\r\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\r\n            See more!\r\n        </Button>\r\n    </>\r\n}\r\n\r\nconst LandingHrOffers = () => {\r\n    const history = useHistory()\r\n    const [offers, setOffers] = useState(null)\r\n\r\n    useEffect(() => {\r\n        return offersAPI\r\n            .getOffersFromHr()\r\n            .then(data => setOffers(data || []))\r\n            .catch(() => Swal.fire({\r\n                title: \"Error\",\r\n                text: \"We weren't able to get offers!\",\r\n                icon: \"error\"\r\n            }))\r\n    }, [])\r\n\r\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\r\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\r\n            Your recently created offers\r\n        </Typography>\r\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\r\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\r\n                        limit={3}\r\n                        offers={offers}/>\r\n        </div>\r\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\r\n            Go to your offers\r\n        </Button>\r\n    </>\r\n}\r\n\r\nconst LandingOrganizationOffers = () => {\r\n    const history = useHistory()\r\n    const [offers, setOffers] = useState(null)\r\n\r\n    useEffect(() =>\r\n        offersAPI\r\n            .getOffersFromOrganization()\r\n            .then(data => setOffers(data || []))\r\n            .catch(() => Swal.fire({\r\n                title: \"Error\",\r\n                text: \"We weren't able to get offers!\",\r\n                icon: \"error\"\r\n            }))\r\n    , [])\r\n\r\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\r\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\r\n            Your recently created offers\r\n        </Typography>\r\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\r\n            <OffersList limit={3}\r\n                        offers={offers}/>\r\n        </div>\r\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\r\n            Go to organization's offers\r\n        </Button>\r\n    </>\r\n}\r\n\r\nconst LandingList = () => {\r\n    const userType = jwtUtils.getUser()?.userType\r\n\r\n    switch (userType) {\r\n        case userTypes.HR:\r\n            return <LandingHrOffers />\r\n        case userTypes.ORGANIZATION:\r\n            return <LandingOrganizationOffers />\r\n        default:\r\n            return <LandingOffers />\r\n    }\r\n}\r\n\r\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\r\n    <Grid item xs={12} md={8}>\r\n        <Typography variant=\"h4\">\r\n            e-Stella - Everything you'll ever need\r\n        </Typography>\r\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\r\n                <Grid item>\r\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n    <Grid item xs={12} md={4}>\r\n        <LandingList />\r\n    </Grid>\r\n</Grid>\r\n","import {authFetch} from \"../authFetch\";\r\nimport {checkedFetch} from \"../chekedFetch\"\r\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\n\r\nexport const interviewAPI = {\r\n\r\n    getJobSeekerNameByInterviewId : (interviewId) => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/jobseeker/${interviewId}`).then(response => response.json()),\r\n\r\n    getNewestInterviewId: applicationId => {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}`, {}, \"Couldn't find interview for this application\")\r\n            .then(response => response.json())\r\n    },\r\n\r\n    getNewestInterview: applicationId => {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}/interview`, {}, \"Couldn't find interview for this application\")\r\n            .then(response => response.json())\r\n    },\r\n\r\n    getNotesByInterviewId: (interviewId, password) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?interview_note=${interviewId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-dev-password': password\r\n            }\r\n        }).then(response => response.json())\r\n    },\r\n\r\n    getInterviewObjectById: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/${interviewId}`)\r\n        .then(response => response.json()),\r\n\r\n    getTaskStageUUIDByInterviewId: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStage/byInterview/${interviewId}`)\r\n        .then(response => response.json())\r\n}","import {Action, Fab} from \"react-tiny-fab\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport {useTheme} from \"@material-ui/core\";\r\n\r\nexport const MeetingFab = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return(\r\n        <Fab\r\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\r\n            icon={<AddIcon />}\r\n            event={'click'}\r\n        >\r\n            <Action\r\n                text=\"Default View\"\r\n                onClick={props.onDefaultView}\r\n            >\r\n                <VoiceChatIcon />\r\n            </Action>\r\n            <Action\r\n                text=\"Whiteboard\"\r\n                onClick={props.onWhiteboard}\r\n            >\r\n                <DashboardIcon />\r\n            </Action>\r\n            <Action\r\n                text=\"Task\"\r\n                onClick={props.onTask}\r\n            >\r\n                <AssignmentIndIcon />\r\n            </Action>\r\n        </Fab>\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\n\r\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\r\n\r\nexport const withSwal = ({\r\n                             loadingTitle,\r\n                             promise,\r\n                             successSwalTitle,\r\n                             successSwalText,\r\n                             confirmButtonText,\r\n                             successFunction,\r\n                             errorSwalTitle,\r\n                             errorSwalText,\r\n                             errorConfirmButtonText\r\n                         }) => {\r\n    let swal = new Swal({\r\n        title: loadingTitle\r\n    })\r\n    Swal.showLoading()\r\n    promise()\r\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\r\n        .then(({status, result}) => {\r\n            if (!isStatus2xx(status)) {\r\n                throw Error(result.message || \"Something went wrong!\")\r\n            }\r\n            swal.close()\r\n            Swal.fire({\r\n                title: successSwalTitle,\r\n                text: successSwalText || \"\",\r\n                icon: \"success\",\r\n                confirmButtonText: confirmButtonText || \"OK\"\r\n            }).then(swalResult => {\r\n                if (swalResult.isConfirmed && successFunction) {\r\n                    successFunction(result)\r\n                }\r\n            })\r\n        })\r\n        .catch(err => {\r\n            swal.close()\r\n            Swal.fire({\r\n                title: errorSwalTitle,\r\n                text: errorSwalText || err,\r\n                icon: \"error\",\r\n                confirmButtonText: errorConfirmButtonText || \"OK\"\r\n            })\r\n        })\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport Swal from 'sweetalert2'\r\nimport {checkedFetch} from '../chekedFetch'\r\nimport {withSwal} from '../../components/commons/formsCommons/WithSwal'\r\n\r\n\r\nconst fallbackTask = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\r\n\r\nexport const tasksApi = {\r\n\r\n    getTask: (processId) => {\r\n        if(processId){\r\n            Swal.showLoading()\r\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\r\n                .then(response => {\r\n                    Swal.close() \r\n                    return response.json()\r\n                })\r\n                .catch(err => {\r\n                    Swal.close()\r\n                    return new Promise(resolve => resolve([fallbackTask]))\r\n                })\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                icon: 'error',\r\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\r\n            })\r\n            return new Promise(resolve => resolve([fallbackTask]))\r\n        }\r\n    },\r\n\r\n    getTasksByOrganization: (organizationId, password) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-dev-password': password\r\n            }\r\n        }).then(response => response.json())\r\n        .catch(err => {\r\n            Swal.close()\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: `We're sorry, but we couldn't fetch tasks from this organization.`\r\n            })\r\n        })\r\n    },\r\n\r\n    getTasks: (tasksStageId) => {\r\n        if (tasksStageId) {\r\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${tasksStageId}`)\r\n                .then(response => {\r\n                    Swal.close()\r\n                    return response.json()\r\n                })\r\n                .catch(err => {\r\n                    Swal.close()\r\n                    return new Promise(resolve => resolve([fallbackTask]))\r\n                })\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                icon: 'error',\r\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\r\n            })\r\n            return new Promise(resolve => resolve([fallbackTask]))\r\n        }\r\n    },\r\n\r\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\r\n\r\n    getNotesWithTasksByTaskUUID: (taskStageUUID, devPassword) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?task_note=${taskStageUUID}&with_tasks=true`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"X-Dev-Password\": devPassword\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n    },\r\n\r\n    getTasksFromOrganization: (organizationUUID, devPassword) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationUUID}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-dev-password': devPassword\r\n            }\r\n        }).then(response => response.json())\r\n    },\r\n\r\n    getTasksFromTaskStage: (taskStageUUID, devPassword) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${taskStageUUID}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-dev-password': devPassword\r\n            }\r\n        }).then(response => response.json())\r\n    },\r\n\r\n    updateTasks: (task, credentials, setReload) => {\r\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${credentials.organizationId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'x-dev-password': credentials.password,\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        })\r\n        withSwal({\r\n            loadingTitle: 'Updating Task',\r\n            promise,\r\n            successFunction: () => setReload(reload => !reload)\r\n        })\r\n    },\r\n\r\n    assignTasks: (tasksIds, password, setReload, key, keyValue) => {\r\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages?${key}=${keyValue}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({tasks: tasksIds}),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-dev-password': password\r\n            }\r\n        })\r\n        withSwal({\r\n            loadingTitle: 'Updating assigned tasks',\r\n            successSwalTitle: 'Task successfully assigned!',\r\n            promise,\r\n            successFunction: () => setReload(reload => !reload)\r\n        })\r\n    },\r\n\r\n    getTasksByInterviewId: (interviewId) => {\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?interview=${interviewId}`, {\r\n            method: 'GET'\r\n        }).then(response => response.json())\r\n    }\r\n\r\n}","import {Realtime} from \"ably/browser/static/ably-commonjs.js\"\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\r\nconst id = uuid()\r\n\r\nexport const useAbly = (channelName) => {\r\n\r\n    const channel = ably.channels.get(channelName)\r\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\r\n    const sub = (func) => channel.subscribe(func)\r\n\r\n    return { channel, pub, sub, clientId: id }\r\n\r\n}\r\n","import {CodeEditor} from 'e-stella-code-editor'\r\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {codeCheckerLink} from \"../../utils/apis/APILinks\";\r\nimport {useAbly} from \"../../utils/hooks/useAbly\";\r\n\r\nexport const TaskWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0, fetchTasks: propFetchTasks }) => {\r\n\r\n    let { taskStageUUID } = useParams()\r\n\r\n    if(!taskStageUUID) taskStageUUID = propId\r\n\r\n    const { pub, sub, clientId } = useAbly(`codeChanged/${taskStageUUID}`)\r\n\r\n    const fetchTasks = !!propFetchTasks ? propFetchTasks : toSolveTask ? () => tasksApi.getTasks(taskStageUUID || NaN) : () => new Promise(_ => {})\r\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\r\n\r\n    return (\r\n        <div>\r\n            <CodeEditor\r\n                codeCheckerBaseLink={codeCheckerLink}\r\n                fetchTasks={fetchTasks}\r\n                solverId={taskStageUUID}\r\n                absoluteOffset={{settings: { top: 3, right: 0 }, submit: {top: 3, left: submitLeftOffset}}}\r\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\r\n                sharingCodeFunctions={{ pub, sub, id: clientId }}\r\n             />\r\n        </div>\r\n    )\r\n}","export const convertFileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = err => reject(err)\r\n    })\r\n}\r\n\r\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteArrays = [];\r\n\r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    return new Blob(byteArrays, {type: contentType});\r\n}","import MarkdownIt from \"markdown-it\";\r\n\r\nconst mdParser = new MarkdownIt()\r\n\r\nexport const MarkdownViewer = ({ markdown }) => {\r\n\r\n    let parsed = mdParser.render(markdown)\r\n\r\n    return (\r\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\r\n    )\r\n}","import PropTypes from 'prop-types'\r\nimport {makeStyles, Modal} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {b64toBlob} from \"../../utils/apis/files\";\r\nimport {MarkdownViewer} from \"./MarkdownViewer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [txt, setTxt] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(file?.fileName?.indexOf('txt') !== -1) {\r\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\r\n                .then(result => setTxt(result))\r\n        }\r\n    }, [file])\r\n\r\n    const decodeFile = () => {\r\n        return atob(file.fileBase64)\r\n    }\r\n\r\n    const getViewer = () => {\r\n        switch (true) {\r\n            case file.fileName.indexOf('md') !== -1:\r\n                return <MarkdownViewer markdown={decodeFile()} />\r\n            case file?.fileName?.indexOf('pdf') !== -1:\r\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\r\n            case file?.fileName?.indexOf('txt') !== -1:\r\n                return txt\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal open={open}\r\n               onClose={handleClose}\r\n        >\r\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\r\n                {open && getViewer()}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nGenericFileViewer.propTypes = {\r\n    file: PropTypes.shape({\r\n        fileName: PropTypes.string.isRequired,\r\n        fileBase64: PropTypes.string.isRequired\r\n    })\r\n}","import {decodeBase64} from \"../../utils/hooks/Base64\"\r\n\r\nexport const getFirstLineFromTaskDescription = (descriptionInBase64) => {\r\n    const description = decodeBase64(descriptionInBase64)\r\n\r\n    const firstLine = description.split('\\n')[0]\r\n\r\n    return JSON.stringify(firstLine).replace( /\\W/g , '')\r\n}","import {Button, Card, CardContent, Divider, IconButton, Menu, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\r\nimport {getFirstLineFromTaskDescription} from \"../tasksUtils\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nexport const Task = ({task, tasksOperations, shouldDisplayMenu}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [menuAnchor, setMenuAnchor] = useState(null)\r\n\r\n    const menuClose = () => {\r\n        setMenuAnchor(null)\r\n    }\r\n\r\n    return (\r\n        <Card style={{padding: '1em'}}>\r\n        {   shouldDisplayMenu &&\r\n            <div style={{float: 'right'}}>\r\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\r\n                    <MoreHorizIcon/>\r\n                </IconButton>\r\n            </div>\r\n        }\r\n            <CardContent>\r\n                <Typography variant=\"h5\">{ getFirstLineFromTaskDescription(task.descriptionBase64) }</Typography>\r\n                <Typography variant=\"subtitle\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\r\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\r\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\r\n                                   open={open} handleClose={() => setOpen(false)}/>\r\n            </CardContent>\r\n\r\n            <Menu\r\n                anchorEl={menuAnchor}\r\n                keepMounted\r\n                open={!!menuAnchor}\r\n                onClose={menuClose}\r\n            >\r\n                {tasksOperations.map(taskOperation => <Button onClick={taskOperation.action}>{taskOperation.title}</Button>)}\r\n            </Menu>\r\n        </Card>\r\n    )\r\n}","import {encodeBase64} from './Base64'\r\n\r\nexport const useDevPassword = () => {\r\n\r\n    const devPasswordKey = \"devPassword\"\r\n\r\n    const setDevPassword = (password) => sessionStorage.setItem(devPasswordKey, password)\r\n\r\n    const getDevPassword = () => sessionStorage.getItem(devPasswordKey)\r\n\r\n    const getEncodedDevPassword = () => {\r\n        const password = getDevPassword()\r\n        return password ? encodeBase64(password) : ''\r\n    }\r\n\r\n    return {getDevPassword, setDevPassword, getEncodedDevPassword}\r\n\r\n}","import {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Divider, Grid, GridList, GridListTile, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {Task} from './crud/Task'\r\nimport {tasksApi} from '../../utils/apis/tasksAPI'\r\nimport {useDevPassword} from '../../utils/hooks/useDevPassword'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: '50%',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n\r\nexport const AssignTasks = ({ modalOptions, alreadyAssignedTasks, organizationTasks, setReload, assignKey, assignUUIDValue }) => {\r\n\r\n    const classes = useStyles()\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n\r\n    const onAssign = (task) => {\r\n        const tasksIds = alreadyAssignedTasks.map(assignedTask => assignedTask.id)\r\n        tasksApi.assignTasks([...tasksIds, task.id], getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\r\n    }\r\n\r\n    const onDeassign = (task) => {\r\n        const newTasksIds = alreadyAssignedTasks.filter(assignedTask => assignedTask.id !== task.id).map(task => task.id)\r\n        tasksApi.assignTasks(newTasksIds, getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={modalOptions.open}\r\n            onClose={modalOptions.onClose}\r\n            className={classes.modal}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n            style={{zIndex: 1000}}\r\n        >\r\n            <Fade in={modalOptions.open}>\r\n                <div className={classes.paper} style={getModalStyle()}>\r\n                    \r\n                    <Section title=\"Tasks you've already assigned:\" tasks={alreadyAssignedTasks} empty=\"No one has assigned any tasks for this application\" actionTitle=\"Deassign\" action={onDeassign} />\r\n                    <Divider style={{margin: '1em 0'}} />\r\n                    <Section title=\"Tasks you can assign:\" tasks={organizationTasks} empty=\"Your organization doesn't have any task.\" actionTitle=\"Assign\" action={onAssign} />\r\n\r\n                    <ModalButtons handleClose={modalOptions.handleClose} />\r\n                </div>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nAssignTasks.propTypes = {\r\n    modalOptions: PropTypes.exact({\r\n        open: PropTypes.bool.isRequired,\r\n        handleClose: PropTypes.func.isRequired\r\n    })\r\n}\r\n\r\nconst ModalButtons = ({ handleClose }) => {\r\n\r\n    return (<Grid container direction=\"row\">\r\n                <Grid item xs={5}>\r\n                    <Typography color=\"textSecondary\">To assign task, expand menu and click \"Assign\"</Typography>\r\n                </Grid>\r\n                <Grid item xs={2} />\r\n                <Grid item xs={5}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClose} fullWidth>Job Done!</Button>\r\n                </Grid>\r\n            </Grid>)\r\n}\r\n\r\nconst Section = ({ title, tasks, empty, action, actionTitle }) => {\r\n\r\n    return (<div style={{margin: '1em 0', overflow: 'hidden', width: '100%'}}>\r\n        <Typography variant=\"h6\" color=\"textSecondary\" style={{marginBottom: '5px'}}>{title}</Typography>\r\n            {\r\n                tasks?.length > 0 ?\r\n                    <GridList style={{flexWrap: 'nowrap'}} cols={2.5}>\r\n                        {tasks.map((task, idx) => <GridListTile key={task}><Task task={task} tasksOperations={[{ title: actionTitle, action: () => action(task) }]} shouldDisplayMenu /></GridListTile>)}\r\n                    </GridList> :\r\n                    <Typography>{empty}</Typography>\r\n            }\r\n    </div>)\r\n}","export const useKeyPress = (key, event, action) => {\r\n    if(event.key === key) {\r\n        action()\r\n        event.preventDefault()\r\n    }\r\n}\r\n\r\nexport const keys = {\r\n    Enter: \"Enter\"\r\n}","import {useState} from \"react\";\r\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\r\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\r\n\r\nexport const TasksPassword = ({ handleSubmit, text }) => {\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleKeyPress = (event) => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\r\n            <CardContent style={{marginBottom: '1em'}}>\r\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\r\n                    <Typography variant=\"h6\">\r\n                        {text ?? 'We need to validate, who you are, so please, provide password from your mail:'}\r\n                    </Typography>\r\n                </div>\r\n                <TextField\r\n                    value={password}\r\n                    onChange={({target}) => setPassword(target.value)}\r\n                    variant=\"outlined\"\r\n                    label=\"Password from email\"\r\n                    fullWidth\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </CardContent>\r\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\r\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Go!\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {useState} from 'react';\r\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\r\nimport {useParams} from 'react-router-dom'\r\nimport {TasksPassword} from './TasksPassword';\r\n\r\nexport const WithDevPassword = ({ WrappedComponent, wrappedProps, createPassword, text }) => {\r\n\r\n    const params = useParams()\r\n    \r\n    const [password, setPassword] = useState(\"\")\r\n    const { setDevPassword, getDevPassword } = useDevPassword()\r\n\r\n    const handleSubmit = (password) => {\r\n        setDevPassword(createPassword(params.id, password))\r\n        setPassword(password)\r\n    }\r\n\r\n    return !!password || getDevPassword() ? <WrappedComponent {...wrappedProps} id={params.id} {...params} /> : <TasksPassword handleSubmit={handleSubmit} text={text}/>\r\n} \r\n\r\n","import PropTypes from 'prop-types';\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nexport const EStellaAutocomplete = (props) => {\r\n\r\n    const handleChange = ({ target }) => {\r\n        props.onChange(target.value)\r\n    }\r\n\r\n    return (\r\n        <Autocomplete\r\n            options={props.options}\r\n            onSelect={handleChange}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\r\n        />\r\n    )\r\n}\r\n\r\nEStellaAutocomplete.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}","import {Chip} from '@material-ui/core';\r\n\r\nexport const TagsList = ({ tags, deletable = false, onDelete = () => {} }) => {\r\n\r\n    const makeTag = (tag, idx) => {\r\n        const props = deletable ? {onDelete: () => onDelete(tag)} : {}\r\n        return (<Chip style={{margin: '10px'}} key={idx} label={tag} variant=\"outlined\" color=\"primary\" {...props} />)\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', overflow: 'scroll'}}>\r\n            {tags.map((tag, idx) => makeTag(tag, idx))}\r\n        </div>\r\n    )\r\n}","import {Card, CardContent, Divider, Typography} from '@material-ui/core';\r\nimport {decodeBase64} from '../../utils/hooks/Base64'\r\nimport {TagsList} from './TagsList'\r\n\r\nexport const Note = ({ note }) => {\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{padding: '2em', width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\r\n            <Typography variant=\"h6\" color=\"textSecondary\">{note.author}</Typography>\r\n            <TagsList tags={note.tags} />\r\n            <Divider />\r\n            <CardContent>\r\n                <Typography style={{whiteSpace:'pre-wrap'}}>{decodeBase64(note.text)}</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import {Grid} from '@material-ui/core';\r\nimport {Note} from './Note';\r\n\r\nexport const NotesList = ({notes}) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            {notes.map((note, idx) => (\r\n                <Grid item xs={12} style={{margin: '1em'}}>\r\n                    <Note note={note} key={idx} />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\nconst mdParser = new MarkdownIt()\r\n\r\nexport const MarkdownEditor = ({ style, handleChange, view }) => {\r\n\r\n    const usableView = {menu: true, html: true, md: true, ...view}\r\n\r\n    return (\r\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} view={usableView} />\r\n    )\r\n}\r\n","import {checkedFetch} from '../chekedFetch'\r\nimport {recruitmentServiceBasicAPILink} from './APILinks'\r\n\r\nexport const NoteApi = {\r\n\r\n    addNote: ({ key, paramId, note_body, dev_password }) => {\r\n        const param = key && paramId ? `?${key}=${paramId}` : ''\r\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\"notes\": [note_body]}),\r\n            headers: {\r\n                'x-dev-password': dev_password,\r\n                'accept': 'application/json',\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n}","import {Button, Card, CardActions, Divider, TextField, Typography, useTheme} from '@material-ui/core'\r\nimport {MarkdownEditor} from '../commons/MarkdownEditor'\r\nimport {useState} from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {TagsList} from './TagsList'\r\nimport '../../App.css';\r\nimport {useDevMail} from '../../utils/hooks/useDevMail';\r\nimport {encodeBase64} from '../../utils/hooks/Base64';\r\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\r\nimport {NoteApi} from '../../utils/apis/NoteApi';\r\nimport Swal from 'sweetalert2'\r\nimport {withSwal} from '../commons/formsCommons/WithSwal'\r\n\r\nexport const AddNote = ({ onCancel, uuid, uuid_key, setReload }) => {\r\n\r\n    const theme = useTheme()\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n\r\n    const [noteText, setNoteText] = useState('')\r\n    const [tags, setTags] = useState([])\r\n    const [currentTag, setCurrentTag] = useState('')\r\n\r\n    const {getDevMail, setDevMail} = useDevMail()\r\n\r\n    const handleNoteTextChange = ({html, text}) => {\r\n        setNoteText(text)\r\n    }\r\n\r\n    const handleAddCurrentTag = () => {\r\n        setTags([...tags, currentTag])\r\n        setCurrentTag('')\r\n    }\r\n\r\n    const deleteTag = (tag) => {\r\n        setTags(tags.filter(item => item != tag))\r\n    }\r\n\r\n    const doAddNote = (devMail) => {\r\n        withSwal({\r\n            loadingTitle: 'Adding Note',\r\n            promise: () =>\r\n                NoteApi.addNote({\r\n                    key: uuid_key,\r\n                    paramId: uuid,\r\n                    note_body: {\r\n                        author: devMail,\r\n                        tags: tags,\r\n                        fileBase64: encodeBase64(noteText)\r\n                    },\r\n                    dev_password: getEncodedDevPassword()\r\n                }),\r\n            successSwalTitle: 'Note successfully added',\r\n            successFunction: () => {\r\n                setReload?.(reload => !reload)\r\n            }\r\n        })\r\n        setTags([])\r\n        setNoteText('')\r\n        onCancel()\r\n    }\r\n\r\n    const addNote = () => {\r\n        const devMail = getDevMail()\r\n        if (!devMail) {\r\n            Swal.fire({\r\n                title: \"Missing informations!\",\r\n                html: 'Please, provide your mail, so everyone knows, who you are.<br /><input type=\"text\" id=\"mail\" class=\"swal2-input\" placeholder=\"Mail\">',\r\n                icon: 'warning',\r\n                preConfirm: () => {\r\n                    const mail = Swal.getPopup().querySelector('#mail').value\r\n                    if (!mail) {\r\n                        Swal.showValidationMessage(`Please enter your mail`)\r\n                    } else {\r\n                        setDevMail(mail)\r\n                    }\r\n                    return { mail }\r\n                }\r\n            }).then(result => {\r\n                doAddNote(result.value.mail)\r\n            })\r\n        } else {\r\n            doAddNote(devMail)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{marginLeft: 'auto', marginRight: 'auto', width: '80%', marginTop: '1em', padding: '1em', textAlign: 'left'}} variant='outlined'>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between', alignItems: 'base-line'}}>\r\n                <Typography style={{marginBottom: '10px'}}>Tags:</Typography>\r\n                <TagsList tags={tags} deletable onDelete={deleteTag} />\r\n            </div>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>\r\n                <TextField label=\"Add Tag\" variant=\"outlined\" value={currentTag} style={{width: '90%'}} onChange={({target}) => setCurrentTag(target.value)} />\r\n                <Button onClick={handleAddCurrentTag}><AddCircleOutlineIcon color=\"action\" /></Button>\r\n            </div>\r\n\r\n            <Divider style={{margin: '1em 0'}} />\r\n\r\n            <Typography>Note:</Typography>\r\n            <MarkdownEditor handleChange={handleNoteTextChange} style={{height: '100px'}} view={{menu: false, html: false}}/>\r\n            \r\n            <CardActions>\r\n                <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', justifyContent: 'space-between', width: '100%'}}> \r\n                    <Button size=\"small\" onClick={onCancel} style={{ border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main, width: '40%' }} varient=\"outline\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={addNote} size=\"small\" style={{ background: theme.palette.secondary.dark, color: theme.palette.background.main, width: '40%' }} variant=\"contained\">\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","export const useDevMail = () => {\r\n\r\n    const devMailKey = \"devMail\"\r\n\r\n    const setDevMail = (mail) => sessionStorage.setItem(devMailKey, mail)\r\n\r\n    const getDevMail = () => sessionStorage.getItem(devMailKey)\r\n\r\n    return {getDevMail, setDevMail}\r\n\r\n}","import {constants} from \"../../utils/constants\";\r\nimport {Box, Button, Divider, Grid, Typography} from '@material-ui/core'\r\nimport {EStellaAutocomplete} from \"../EStellaAutocomplete\";\r\nimport {useState} from 'react';\r\nimport {NotesList} from './NotesList'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {AddNote} from './AddNote'\r\n\r\n\r\nexport const NotesMenu = ({ notes, uuid, uuid_key, reload, setReload }) => {\r\n\r\n    const [tag, setTag] = useState('')\r\n    const [showAdd, setShowAdd] = useState(false)\r\n\r\n    const getDistinctTags = () => new Array(...new Set(notes.flatMap(note => note.tags)))\r\n\r\n    const getNotes = () => tag ? notes.filter(note => note.tags.includes(tag)) : notes\r\n\r\n    const addNote = () => {\r\n        setShowAdd(true)\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: `calc(${constants.navbar_height} + 3em)`, textAlign: 'center'}}>\r\n            \r\n            <Grid container direction=\"row\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h5\">\r\n                        Notes\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Button onClick={addNote}><AddCircleOutlineIcon color=\"action\" /></Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            { showAdd && <AddNote onCancel={() => setShowAdd(false)} uuid={uuid} uuid_key={uuid_key} setReload={setReload} /> }\r\n\r\n            <Divider style={{marginTop: '1em'}} />\r\n\r\n            <Box m={2}>\r\n                <EStellaAutocomplete options={getDistinctTags()} label={\"Search for tags\"} onChange={(value) => setTag(value)} />\r\n            </Box>\r\n\r\n            {notes?.length > 0 ? <NotesList notes={getNotes()} /> : 'Oh no, there are no notes yet!' }\r\n        </div>\r\n    )\r\n}","import {JitsiComponent} from \"e-stella-jitsi\";\r\nimport {MeetingFab} from \"./MeetingFab\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Whiteboard} from \"e-stella-whiteboard\";\r\nimport {TaskWrapper} from \"../../tasks/TaskWrapper\";\r\nimport {AssignTasks} from \"../../tasks/AssignTasks\";\r\nimport {WithDevPassword} from \"../../tasks/WithDevPassword\"\r\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\r\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {NotesMenu} from '../../notes/NotesMenu';\r\nimport {Button, Divider, Drawer, List, ListItem} from '@material-ui/core'\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\r\nimport {constants} from '../../../utils/constants'\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const JitsiWrapper = ({ admin, roomName, displayName, interviewId, companyId }) => {\r\n\r\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\r\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\r\n    const [actionComponent, setActionComponent] = useState(null)\r\n    const [taskStageUUID, setTaskStageUUID] = useState(null)\r\n\r\n    useEffect(() => {\r\n        interviewAPI.getTaskStageUUIDByInterviewId(interviewId)\r\n            .then(data => setTaskStageUUID(data.taskStageUUID))\r\n    }, [interviewId, companyId])\r\n\r\n    const getWhiteboardCode = () => {\r\n        if (roomName.length < 15) return 'abcdefghijklmnopqrst'\r\n        return roomName\r\n    }\r\n    const addWhiteboard = () => {\r\n        setJitsiWidth('20%')\r\n        setJitsiHeight('calc(100vh - 60px)')\r\n        setActionComponent(\r\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\r\n                <Whiteboard\r\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\r\n                    code={getWhiteboardCode()}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const defaultView = () => {\r\n        setJitsiHeight('calc(100vh-60px)')\r\n        setJitsiWidth('100%')\r\n        setActionComponent(null)\r\n    }\r\n\r\n    const showTask = () => {\r\n        setJitsiWidth('20%')\r\n        setActionComponent(\r\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\r\n                <TaskWrapper fetchTasks={getTasksByInterviewUUID} submitLeftOffset={'25%'} id={taskStageUUID}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getTasksByInterviewUUID = () => tasksApi.getTasksByInterviewId(interviewId)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                admin &&\r\n                    <AdminMeetingDrawer interviewId={interviewId} companyId={companyId} />\r\n            }\r\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\r\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\r\n                <JitsiComponent admin={admin} roomName={roomName} displayName={displayName}/>\r\n            </div>\r\n            {actionComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst drawerWidth = 600;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  }\r\n}));\r\n\r\nconst AdminMeetingDrawer = ({ interviewId, companyId }) => {\r\n\r\n    const [openNotesModal, setOpenNotesModal] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n    const [openTasksModal, setOpenTasksModal] = useState(false)\r\n\r\n    const { getDevPassword, setDevPassword } = useDevPassword()\r\n\r\n    const classes = useStyles()\r\n    \r\n    const getNotesView = () => (\r\n        <WithDevPassword\r\n            WrappedComponent={NotesMenuWrapper}\r\n            wrappedProps={{\r\n                reload, setReload, interviewId\r\n            }}\r\n            createPassword={(id, password) => `${companyId}:${password}`}\r\n            text=\"Insert password\"\r\n        />\r\n    )\r\n\r\n    const doOpenTasksModal = () => {\r\n        if (getDevPassword()) {\r\n            setOpenTasksModal(true)\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Provide your password from mail!',\r\n                input: 'text',\r\n                inputAttributes: {\r\n                    autocapitalize: 'off'\r\n                },\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Submit'\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    setDevPassword(`${companyId}:${result.value}`)\r\n                    setOpenTasksModal(true)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const closedView = (\r\n            <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`, display: 'flex', flexDirection: 'column'}}>\r\n                <ListItem>\r\n                    <Button onClick={() => setOpenNotesModal(true)}>\r\n                        <NoteAddIcon fontSize=\"large\" color=\"action\"/>\r\n                    </Button>\r\n                </ListItem>\r\n                    <Divider style={{margin: '1em 0'}} />\r\n                <ListItem>\r\n                    <Button onClick={() => doOpenTasksModal()}>\r\n                        <AssignmentIcon fontSize=\"large\" color=\"action\" />\r\n                    </Button>\r\n                </ListItem>\r\n            </List>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {openNotesModal && (\r\n                <Button onClick={() => setOpenNotesModal(false)} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\r\n                    <CloseIcon size=\"large\" color=\"action\" />\r\n                </Button>\r\n            )}\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: openNotesModal,\r\n                    [classes.drawerClose]: !openNotesModal,\r\n                    })}\r\n                    classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: openNotesModal,\r\n                        [classes.drawerClose]: !openNotesModal,\r\n                    }),\r\n                    }}\r\n            >\r\n                {openNotesModal ? getNotesView() : closedView}\r\n                <AssignTasksWrapper openTasksModal={openTasksModal} setOpenTasksModal={setOpenTasksModal} interviewId={interviewId} organizationId={companyId} reload={reload} setReload={setReload} />\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NotesMenuWrapper = ({reload, setReload, interviewId}) => {\r\n\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n    const [notes, setNotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        interviewAPI.getNotesByInterviewId(interviewId, getEncodedDevPassword())\r\n            .then(data => setNotes(data.notes))\r\n    }, [interviewId, reload])\r\n\r\n    return (\r\n        <NotesMenu\r\n            notes={notes}\r\n            uuid={interviewId}\r\n            uuid_key=\"interview_note\"\r\n            reload={reload}\r\n            setReload={setReload}\r\n        />\r\n    )\r\n}\r\n\r\nconst AssignTasksWrapper = ({openTasksModal, setOpenTasksModal, interviewId, organizationId, reload, setReload}) => {\r\n\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n    const devPassword = getEncodedDevPassword()\r\n    const [organizationTasks, setOrganizationTasks] = useState([])\r\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(devPassword) {\r\n        tasksApi.getTasksFromOrganization(organizationId, devPassword)\r\n            .then(data => setOrganizationTasks(data))\r\n        tasksApi.getTasksByInterviewId(interviewId)\r\n            .then(data => setAlreadyAssignedTasks(data))\r\n        }\r\n    }, [reload, organizationId, interviewId])\r\n\r\n    return (\r\n        <AssignTasks\r\n            modalOptions={{\r\n                open: openTasksModal,\r\n                handleClose: () => setOpenTasksModal(false)\r\n            }}\r\n            alreadyAssignedTasks={alreadyAssignedTasks}\r\n            organizationTasks={organizationTasks}\r\n            setReload={setReload}\r\n            assignKey=\"interview\"\r\n            assignUUIDValue={interviewId}\r\n        />\r\n    )\r\n}","import {useState} from \"react\";\r\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\r\n\r\nexport const MeetingDisplayNameForm = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const handleClick = () => {\r\n        props.onSubmit(name)\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\r\n                <Typography variant=\"h4\">\r\n                    One more step...\r\n                </Typography>\r\n            </Box>\r\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\r\n                <Typography variant=\"h5\">\r\n                    How should we call you?\r\n                </Typography>\r\n            </Box>\r\n            <Box mt={5} m={5}>\r\n                <TextField\r\n                    value={name}\r\n                    onChange={({target}) => setName(target.value)}\r\n                    label=\"Your name\"\r\n                />\r\n            </Box>\r\n            <Box m={5}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\r\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\r\nimport {useState} from \"react\";\r\n\r\nexport const MeetingDisplayName = ({ roomName, interviewId, companyId }) => {\r\n\r\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\r\n        shouldDisplay: true,\r\n        name: \"\"\r\n    })\r\n\r\n    const getAdminDisplayer = () => {\r\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\r\n            <JitsiWrapper admin={true} roomName={roomName} displayName={shouldDisplayForm.name} interviewId={interviewId} companyId={companyId}/>\r\n    }\r\n\r\n    const onNameFormSubmit = (name) => {\r\n        setShouldDisplayForm({\r\n            shouldDisplay: false,\r\n            name: name\r\n        })\r\n    }\r\n\r\n    return getAdminDisplayer()\r\n}","import {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\r\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\r\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport const Meeting = () => {\r\n    let { interviewId, companyId } = useParams()\r\n    const [name, setName] = useState(null)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(companyId === undefined) {\r\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\r\n                .then(data => {\r\n                    setName(`${data?.firstName || \"\"} ${data?.lastName || \"\"}`)\r\n                    setIsFetching(false)\r\n                })\r\n        } else {\r\n            setIsFetching(false)\r\n        }\r\n    }, [companyId, interviewId])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isFetching ? <CircularProgress /> :\r\n                <Fetched name={name} interviewId={interviewId} companyId={companyId} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Fetched = ({ name, interviewId, companyId }) => {\r\n    return (\r\n        name === null ?\r\n            <MeetingDisplayName roomName={`${interviewId}`} interviewId={interviewId} companyId={companyId}/>\r\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"} interviewId={interviewId}/>\r\n    )\r\n}","import {useDropzone} from \"react-dropzone\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\n\r\nconst FilesDropzone = ({onDrop}) => {\r\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\r\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\r\n    return <Paper style={{\r\n        padding: \"2em\",\r\n        paddingTop: \"4em\",\r\n        paddingBottom: \"4em\",\r\n        backgroundColor: color,\r\n        justifyContent: \"center\",\r\n        display: \"flex\"\r\n    }} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        {\r\n            isDragActive ?\r\n                <p>Drop files here...</p> :\r\n                <p>Drag and drop files here, or click to select them</p>\r\n        }\r\n    </Paper>\r\n}\r\n\r\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\nexport const jobSeekerAPI = {\r\n\r\n    getJobSeeker: function (id) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\r\n            method: \"GET\"\r\n        })\r\n        .then(response => response.json())\r\n    },\r\n\r\n    getFiles: function() {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\r\n            method: \"GET\"\r\n        })\r\n        .then(response => response.json())\r\n    },\r\n\r\n    insertFiles: function(files) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({files: files})\r\n        })\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\r\nimport {validateEmail} from \"../../../utils/functions\";\r\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\r\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    }\r\n}));\r\n\r\nfunction _arrayBufferToBase64( buffer ) {\r\n    let binary = '';\r\n    const bytes = new Uint8Array(buffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n}\r\n\r\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\r\n    const [file, setFile] = useState(null)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleChange = (event) => {\r\n        setFile(event.target.value)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setFile(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleSave = () => {\r\n        onSave(file)\r\n        setFile(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Select file to attach</DialogTitle>\r\n                <DialogContent>\r\n                    <form>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-dialog-select-label\"\r\n                                id=\"demo-dialog-select\"\r\n                                value={file}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value={null}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst FileCard = ({file, index, handleDelete}) => {\r\n    return <Paper style={{\r\n        padding: \"5px\",\r\n        paddingLeft: \"1em\",\r\n        backgroundColor: \"primary\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    }}>\r\n        {file.fileName}\r\n        <div>\r\n            <IconButton\r\n                onClick={() => handleDelete(index)}\r\n            >\r\n                <DeleteForeverOutlined/>\r\n            </IconButton>\r\n        </div>\r\n    </Paper>\r\n}\r\n\r\nexport const ApplyForm = () => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const {loggedIn} = useLoggedIn()\r\n    const user = jwtUtils.getUser()\r\n\r\n    const [name, setName] = useState(user?.firstName || \"\")\r\n    const [surname, setSurname] = useState(user?.lastName || \"\")\r\n    const [email, setEmail] = useState(user?.mail || \"\")\r\n    const [files, setFiles] = useState([])\r\n    const [loadedFiles, setLoadedFiles] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [shouldValidateField, setShouldValidateField] = useState({\r\n        name: false,\r\n        surname: false,\r\n        email: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(loggedIn)\r\n            jobSeekerAPI.getFiles().then(files => {\r\n                setLoadedFiles(files)\r\n            })\r\n    }, [])\r\n\r\n    const apply = () => {\r\n        if (validate()) {\r\n            if (files === []) {\r\n                Swal.fire({\r\n                    title: \"Warning\",\r\n                    text: \"You're not including any CV file, are you sure about it?\",\r\n                    icon: \"warning\",\r\n                    showDenyButton: true,\r\n                    confirmButtonText: \"Yes, I'm sure\",\r\n                    denyButtonText: \"No, let me insert my CV\"\r\n                }).then(result => {\r\n                    if (result.isConfirmed) {\r\n                        validatedApply([])\r\n                    } else if (result.isDenied) {\r\n                        Swal.close()\r\n                    }\r\n                })\r\n            } else {\r\n                validatedApply(files)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                title: \"Error alert!\",\r\n                text: \"Check if all fields are filled correctly\",\r\n                icon: \"error\",\r\n                confirmButtonText: \"OK\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const validatedApply = (files) => {\r\n        withSwal({\r\n            loadingTitle: \"Applying\",\r\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully applied for this offer!\",\r\n            errorSwalTitle: \"Something went wrong\",\r\n            errorSwalText: \"We couldn't process your application for this offer\",\r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\r\n    }\r\n\r\n\r\n    const validateName = (name) => {\r\n        return name !== \"\"\r\n    }\r\n    const validateSurname = (surname) => {\r\n        return surname !== \"\"\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        Promise.all(acceptedFiles.map(value =>\r\n            value.arrayBuffer().then(\r\n                arrayBuffer => { return {\r\n                    fileName: value.name,\r\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\r\n                }}\r\n            )\r\n        )).then(newFiles => {\r\n            setFiles(oldFiles => oldFiles.concat(newFiles))\r\n        })\r\n    }, [])\r\n\r\n    const handleDeleteFile = (index) => {\r\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onAttachFile = (newFile) => {\r\n        setFiles(oldFiles => oldFiles.concat([newFile]))\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={({target}) => {\r\n                        setName(target.value)\r\n                        setShouldValidateField({...shouldValidateField, name: true})\r\n                    }}\r\n                    error={!validateName(name) && shouldValidateField.name}\r\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\r\n                    disabled={loggedIn}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Surname\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={surname}\r\n                    onChange={({target}) => {\r\n                        setSurname(target.value)\r\n                        setShouldValidateField({...shouldValidateField, surname: true})\r\n                    }}\r\n                    error={!validateSurname(surname) && shouldValidateField.surname}\r\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\r\n                    disabled={loggedIn}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"E-mail address\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    onChange={({target}) => {\r\n                        setEmail(target.value)\r\n                        setShouldValidateField({...shouldValidateField, email: true})\r\n                    }}\r\n                    error={!validateEmail(email) && shouldValidateField.email}\r\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\r\n                    disabled={loggedIn}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\r\n                <FilesDropzone onDrop={onDrop} />\r\n            </Grid>\r\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\r\n                <Button style={{height: \"100%\"}}\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClickOpen}\r\n                        fullWidth>\r\n                    Attach saved file\r\n                </Button>\r\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\r\n            </Grid>}\r\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\r\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\r\n            </Grid>)}\r\n            <Grid item xs={12}>\r\n                <Divider />\r\n            </Grid>\r\n            <Grid item md={9} xs={false} />\r\n            <Grid item md={3} xs={12}>\r\n                <Button variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        onClick={apply}\r\n                        fullWidth>\r\n                    Apply\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {Box, useTheme} from \"@material-ui/core\";\r\n\r\nexport const SkillIndicator = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const fullCircleStyle = {\r\n        backgroundColor: theme.palette.focused.dark,\r\n    }\r\n\r\n    const emptyCircleStyle = {\r\n        borderRadius: \"50%\",\r\n        width: \"15px\",\r\n        height: \"15px\",\r\n        border: `1px solid ${theme.palette.focused.dark}`,\r\n    }\r\n\r\n    return(\r\n        <Box m={1}>\r\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\r\n        </Box>\r\n    )\r\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\nimport {SkillIndicator} from \"./SkillIndicator\";\r\n\r\nexport const OfferSkill = ({ name, skillLevel }) => {\r\n\r\n    const enumerateSkillLevel = () => {\r\n        switch (skillLevel) {\r\n            case 'NICE_TO_HAVE': return 1\r\n            case 'JUNIOR': return 2\r\n            case 'REGULAR': return 3\r\n            case 'ADVANCED': return 4\r\n            default: return 5\r\n        }\r\n    }\r\n\r\n    const theme = useTheme()\r\n\r\n    const getDotsOnSkillLevel = () => {\r\n        const skills = []\r\n        const enumerated = enumerateSkillLevel()\r\n        for(let i=0; i<5; i++){\r\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\r\n        }\r\n        return skills\r\n    }\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Card style={{backgroundColor: theme.palette.card.light}}>\r\n                <CardContent>\r\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\r\n                        {getDotsOnSkillLevel()}\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {name}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box m={1}>\r\n                        <Typography color=\"textSecondary\">\r\n                            {skillLevel}\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import {Card, useTheme} from \"@material-ui/core\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport React from \"react\";\r\n\r\nexport const ListElementDetails = ({cardContent}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return <div>\r\n        <Card variant=\"outlined\"\r\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\r\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\r\n            {cardContent}\r\n        </Card>\r\n    </div>\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Typography} from '@material-ui/core'\r\n\r\n\r\nexport const SingleMenu = ({ buttons, menuName, offer, history }) => {\r\n\r\n    const [anchor, setAnchor] = useState(null)\r\n\r\n    const handleClick = (event) => {\r\n        setAnchor(event.currentTarget)\r\n    } \r\n\r\n    const handleClose = () => {\r\n        setAnchor(null)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick} variant=\"outlined\" color=\"primary\">{ menuName }</Button>\r\n    \r\n            <Menu\r\n                anchorEl={anchor}\r\n                keepMounted\r\n                open={!!anchor}\r\n                onClose={handleClose}\r\n            >\r\n                {buttons.map(button => (<MenuItem key={button.text}>\r\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\r\n                                <Typography>\r\n                                    {button.text}\r\n                                </Typography>\r\n                            </Button>\r\n                            </MenuItem>))}\r\n            </Menu>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import {useHistory} from \"react-router-dom\";\r\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {OfferSkill} from \"./OfferSkill\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\r\nimport {SingleMenu} from './SingleMenu.js'\r\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\r\n\r\nexport const OfferDetails = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const offer = props.offer\r\n\r\n    const groups = (buttons) => buttons.reduce((groups, item) => {\r\n        const group = (groups[item.menu] || []);\r\n        group.push(item);\r\n        groups[item.menu] = group;\r\n        return groups;\r\n      }, {});\r\n\r\n    const getButtons = () => {\r\n        const user = jwtUtils.getUser()\r\n\r\n        if (user?.userType == \"hr\" || user?.userType == \"organization\") {\r\n            return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\r\n                        {\r\n                        Object.entries(groups(props.buttons)).map(([menu, buttons]) => {\r\n                            return <Box key={menu} mr={1} ml={1}>\r\n                                <SingleMenu menuName={menu} buttons={buttons} offer={offer} history={history} />\r\n                            </Box>\r\n                            })\r\n                        }\r\n                    </div>)\r\n        }\r\n\r\n        return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\r\n            {props.buttons.map(button => {\r\n            return <Box key={button.text} mr={1} ml={1}>\r\n                <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\r\n                    <Typography>\r\n                        {button.text}\r\n                    </Typography>\r\n                </Button>\r\n            </Box>})}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getCardContent = () => {\r\n        return (<CardContent>\r\n            <Box mb={12}>\r\n                <div style={{float: \"left\"}}>\r\n                    <Box>\r\n                        <Typography variant=\"h4\" component=\"h2\">\r\n                            {offer.name}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                            {offer.organization?.name}\r\n                        </Typography>\r\n                    </Box>\r\n                </div>\r\n                {getButtons()}\r\n            </Box>\r\n            <Divider/>\r\n            <Box style={{width: \"100%\"}}>\r\n                <Box mt={1}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            {offer.position}\r\n                        </Typography>\r\n                    </div>\r\n                </Box>\r\n                <Box>\r\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\r\n                        <div>\r\n                            <Typography variant=\"h6\">\r\n                                {offer.minSalary} - {offer.maxSalary}\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{float: 'right'}}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                {offer.localization}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n            <Box mt={8} mb={4}>\r\n                <Grid container>\r\n                    {offer.skills.map((skill, idx) =>\r\n                        <Grid key={idx} item><OfferSkill key={idx}\r\n                                                         name={skill.name}\r\n                                                         skillLevel={skill.level}/></Grid>)}\r\n                </Grid>\r\n            </Box>\r\n            <Divider/>\r\n            <Box m={2} p={2}>\r\n                {offer.description}\r\n            </Box>\r\n        </CardContent>)\r\n    }\r\n\r\n    return (\r\n        <ListElementDetails cardContent={getCardContent()}/>\r\n    )\r\n}\r\n\r\nOfferDetails.propTypes = {\r\n    offer: PropTypes.object.isRequired,\r\n    buttons: PropTypes.array\r\n}\r\n\r\nOfferDetails.defaultProps = {\r\n    buttons: [{\r\n        text: \"Apply\",\r\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`),\r\n        menu: \"Apply menu\",\r\n        style: {color: 'primary', variant: 'contained'}\r\n    }]\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PickUpOffer = () =>\r\n    <div>\r\n        Pick up offer\r\n    </div>","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const EStellaSlider = (props) => {\r\n\r\n    const getValue = (event, value) => {\r\n        return event.target.value === '' ? value : Number(event.target.value)\r\n    }\r\n\r\n    const value = props.value\r\n    const setValue = props.onValueChanged\r\n    const getMaxValue = (event) => getValue(event, props.max)\r\n    const getMinValue = (event) => getValue(event, props.min)\r\n\r\n    const handleInputBlur = () => {\r\n        if(value[0] < props.min) setValue([props.min, value[1]])\r\n        if(value[1] > props.max) setValue([value[0], props.max])\r\n    }\r\n\r\n    return (\r\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n            <Typography>\r\n                {props.label}\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                onChange={(event, newValue) => setValue(newValue)}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={() => `${value}`}\r\n                max={props.max}\r\n                min={props.min}\r\n                step={props.step}\r\n            />\r\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        value={value[0]}\r\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\r\n                        onBlur={handleInputBlur}\r\n                        min={props.min}\r\n                        max={value[1]}\r\n                        type=\"number\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4} />\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        value={value[1]}\r\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\r\n                        onBlur={handleInputBlur}\r\n                        min={value[0]}\r\n                        max={props.max}\r\n                        type=\"number\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nEStellaSlider.propTypes = {\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    step: PropTypes.number,\r\n    value: PropTypes.array.isRequired,\r\n    onValueChanged: PropTypes.func.isRequired\r\n}\r\n\r\nEStellaSlider.defaultProps = {\r\n    min: 0,\r\n    max: 100,\r\n    step: 10\r\n}\r\n","import {Box, Button, Grid} from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PropTypes from 'prop-types';\r\nimport {EStellaSlider} from \"./EStellaSlider\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {filterTypes} from \"../../../utils/Enums\";\r\nimport {getFilterValueByType} from \"../../../utils/functions\";\r\nimport {EStellaAutocomplete} from '../../EStellaAutocomplete'\r\n\r\nexport const InDrawerFilter = (props) => {\r\n\r\n    const [sliderValue, setSliderValue] = useState([0, 100])\r\n    const [companyValue, setCompanyValue] = useState(\"\")\r\n    const [positionValue, setPositionValue] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setSliderValue([\r\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\r\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\r\n        ])\r\n    }, [])\r\n\r\n    const createFilters = () => {\r\n        return [\r\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\r\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\r\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\r\n            {type: filterTypes.POSITION_NAME, value: positionValue}\r\n        ]\r\n    }\r\n\r\n    const calculateWidth = () => {\r\n        const width = window.screen.width\r\n        if (width < 700) {\r\n            return 0.6 * width\r\n        } else {\r\n            return 0.3 * width\r\n        }\r\n    }\r\n\r\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\r\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\r\n\r\n    const handleFilterSubmit = () => {\r\n        props.toggleDrawer()\r\n        props.onFilterSubmitted(createFilters())\r\n    }\r\n\r\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\r\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\r\n\r\n    return (\r\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\r\n            <Grid container spacing={2} direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={10}/>\r\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\r\n                            fontSize=\"large\"/></Button></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\r\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box m={1} p={1}>\r\n                        <EStellaAutocomplete options={companyOptions}  label=\"Company Name\" value={companyValue}\r\n                            onChange={(value) => setCompanyValue(value)}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box m={1} p={1}>\r\n                        <EStellaAutocomplete options={positionOptions}  label=\"Position\" value={positionValue}\r\n                                            onChange={(value) => setPositionValue(value)}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={false} md={8} />\r\n                        <Grid item xs={12} md={4}>\r\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\r\n                                Filter\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nInDrawerFilter.propTypes = {\r\n    toggleDrawer: PropTypes.func.isRequired,\r\n    offers: PropTypes.array.isRequired,\r\n    onFilterSubmitted: PropTypes.func.isRequired,\r\n    filters: PropTypes.array, // - state of previous drawer,\r\n    fixedOffers: PropTypes.array.isRequired\r\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getIconFromFilterType} from \"../../../utils/functions\";\r\n\r\nexport const ActiveFilter = (props) => {\r\n\r\n    return (\r\n        <Grid item>\r\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\r\n                {getIconFromFilterType(props.filter)}\r\n            </Avatar>} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nActiveFilter.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    filter: PropTypes.object.isRequired\r\n}\r\n\r\nActiveFilter.defaultProps = {\r\n    color: \"primary\"\r\n}","import FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {InDrawerFilter} from \"./InDrawerFilter\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ActiveFilter} from \"./ActiveFilter\";\r\n\r\nexport const Filter = (props) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [filters, setFilters] = useState([])\r\n\r\n    const handleFilterSubmitted = (filters) => {\r\n        setFilters(filters)\r\n        props.onFilterSubmitted(filters)\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const getFiltersAsActiveFilters = () => {\r\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\r\n            handleDelete={() => handleFilterDelete(filter.type)}\r\n            label={`${filter.type}: ${filter.value}`}\r\n            filter={filter}/></Grid> : null)\r\n    }\r\n\r\n    const handleFilterDelete = (filterType) => {\r\n        const newFilters = filters.filter(filter => filter.type !== filterType)\r\n        setFilters(newFilters)\r\n        props.reloadOffers(newFilters)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item>\r\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\r\n                </Grid>\r\n                {getFiltersAsActiveFilters()}\r\n            </Grid>\r\n\r\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\r\n                    transitionDuration={700}>\r\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\r\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\r\n                                fixedOffers={props.fixedOffers}/>\r\n            </Drawer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    offers: PropTypes.array.isRequired,\r\n    onFilterSubmitted: PropTypes.func.isRequired,\r\n    fixedOffers: PropTypes.array.isRequired,\r\n    reloadOffers: PropTypes.func.isRequired\r\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useState} from \"react\";\r\nimport {offerSort} from \"../../../utils/Enums\";\r\n\r\nexport const Sorter = ({label, onSort}) => {\r\n\r\n    const [element, setElement] = useState(null)\r\n\r\n    const openList = (event) => setElement(event.currentTarget)\r\n\r\n    const handleClose = () => setElement(null)\r\n\r\n    const open = Boolean(element)\r\n\r\n    const handleItemClick = (sort) => {\r\n        onSort(sort)\r\n        handleClose()\r\n    }\r\n\r\n    const getListItems = () => {\r\n        return offerSort\r\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Chip label={label}\r\n                  variant=\"outlined\"\r\n                  onClick={openList}\r\n                  clickable\r\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\r\n            />\r\n            <Popover open={open}\r\n                 anchorEl={element}\r\n                 onClose={handleClose}\r\n                 anchorOrigin={{\r\n                     vertical: 'bottom',\r\n                     horizontal: 'center',\r\n                 }}\r\n                 transformOrigin={{\r\n                     vertical: 'top',\r\n                     horizontal: 'center',\r\n                 }}\r\n            >\r\n                <List>\r\n                    {getListItems()}\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nSorter.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    onSort: PropTypes.func.isRequired\r\n}","import {useState} from \"react\";\r\nimport {Sorter} from \"./Sorter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SorterWrapper = ({ onSort }) => {\r\n    const [label, setLabel] = useState(\"Sort Offers\")\r\n\r\n    const handleOnSort = (elem) => {\r\n        setLabel(elem.name)\r\n        onSort(elem)\r\n    }\r\n\r\n    return (\r\n        <Sorter label={label} onSort={handleOnSort} />\r\n    )\r\n}\r\n\r\nSorter.propTypes = {\r\n    onSort: PropTypes.func.isRequired\r\n}","import {Grid} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nexport const ColumnAndDetailsLayout = ({details, list}) => {\r\n\r\n    return (\r\n        <div style={{marginTop: \"15px\"}}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={8}>\r\n                    {details}\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    {list}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nColumnAndDetailsLayout.propTypes = {\r\n    details: PropTypes.any.isRequired,  //component representing details of list item\r\n    list: PropTypes.any.isRequired      //component representing list of items\r\n}","import {Divider} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\r\n                <div style={{alignItems: \"flex-start\"}}>\r\n                    {filter}\r\n                </div>\r\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\r\n                    {sorter}\r\n                </div>\r\n            </div>\r\n            <Divider/>\r\n            {view}\r\n        </div>\r\n    )\r\n}\r\n\r\nStandardViewAndFilterLayout.propTypes = {\r\n    filter: PropTypes.any,   //component representing filter with its view and logic\r\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\r\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\r\n}","import {OffersList} from \"./OffersList\";\r\nimport {OfferDetails} from \"../details/OffersDetails\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {PickUpOffer} from \"./PickUpOffer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {Filter} from \"../filter/Filter\";\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\r\nimport {filterOffers} from \"../../../utils/functions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\r\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\r\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\r\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const OffersView = (props) => {\r\n\r\n    const [selectedOffer, setSelectedOffer] = useState(null)\r\n    const [offers, setOffers] = useState([])\r\n    const [fetchError, setFetchError] = useState(false)\r\n    const [fetching, setFetching] = useState(true)\r\n    const {id} = useParams()\r\n    const [fixedOffers, setFixedOffers] = useState([])\r\n    const [sort, setSort] = useState({apply: (offers) => offers})\r\n\r\n    const handleFilterSubmitted = (filters) => {\r\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            offersAPI.getOfferById(id)\r\n                .then(data => setSelectedOffer(data))\r\n                .catch(() => {\r\n                    Swal.fire({\r\n                        title: \"Error\",\r\n                        text: \"We weren't able to get this offer's details!\",\r\n                        icon: \"error\"\r\n                    })\r\n                })\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        props.getOffers()\r\n            .then(data => {\r\n                setOffers(data || [])\r\n                setFixedOffers(data || [])\r\n                setFetching(false)\r\n            })\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\r\n                    icon: \"error\"\r\n                }).then(() => {\r\n                    setFetching(false)\r\n                    setFetchError(true)\r\n                })\r\n            })\r\n    }, [props])\r\n\r\n    const handleSort = (sort) => {\r\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\r\n        * probably the case\r\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\r\n        setSort(sort)\r\n        setOffers(offers => ([...sort.apply(offers)]))\r\n    }\r\n\r\n    const layoutInternalView = () =>\r\n        selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\r\n\r\n    const offersList = () =>\r\n        <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\r\n\r\n    return fetchError ? <Redirect to=\"/\" /> : (fetching ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\r\n            filter={<Filter offers={offers}\r\n                            onFilterSubmitted={handleFilterSubmitted}\r\n                            fixedOffers={fixedOffers}\r\n                            reloadOffers={handleFilterSubmitted} />}\r\n            sorter={<SorterWrapper onSort={handleSort} />}\r\n            view={<ColumnAndDetailsLayout details={layoutInternalView()} list={offersList()} />}\r\n        />)\r\n}\r\n\r\nOffersView.propTypes = {\r\n    getOffers: PropTypes.func.isRequired,\r\n}\r\n","import {useEffect} from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const UnauthenticatedPage = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        Swal.fire({\r\n            title: \"Unauthenticated\",\r\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\r\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\r\n            icon: \"error\"\r\n        }).then(() => {\r\n            history.push('/')\r\n        })\r\n    }, [history])\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\r\n    const user = jwtUtils.getUser()\r\n\r\n    return (\r\n        <>\r\n            {\r\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nwithUserAuth.propTypes = {\r\n    permittedTypes: PropTypes.array.isRequired,\r\n    WrappedComponent: PropTypes.any.isRequired\r\n}\r\n\r\nwithUserAuth.defaultProps = {\r\n    wrappedProps: {}\r\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\r\n\r\nexport const hrOfferButtons = (theme) => [\r\n    {\r\n        text: \"Edit process\",\r\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\r\n        style: {\r\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\r\n            variant: \"contained\"\r\n        },\r\n        menu: \"Offer Menu\"\r\n    },\r\n    {\r\n        text: \"Edit offer\",\r\n        action: (offer, history) => {\r\n            history.push(`/hr/offers/edit/${offer.id}`)\r\n        },\r\n        menu: \"Offer Menu\"\r\n    },\r\n    {\r\n        text: \"Delete offer\",\r\n        action: (offer, history) => {\r\n            withSwal({\r\n                loadingTitle: \"Deleting offer\",\r\n                promise: () => offersAPI.deleteOffer(offer.id),\r\n                successSwalTitle: \"Successfully deleted\",\r\n                successSwalText: \"Offer has been deleted\",\r\n                confirmButtonText: \"Ok\",\r\n                successFunction: () => history.go(0),\r\n                errorSwalTitle: \"Offer not deleted\",\r\n                errorSwalText: \"We couldn't delete your offer\",\r\n                errorConfirmButtonText: \"Ok\"\r\n            })\r\n        },\r\n        style: {\r\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\r\n            variant: \"outlined\"\r\n        },\r\n        menu: \"Offer Menu\"\r\n    },\r\n    {\r\n        text: \"Applications\",\r\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\r\n        style: {\r\n            color: \"primary\",\r\n            variant: \"contained\"\r\n        },\r\n        menu: \"Applications Menu\"\r\n    }\r\n\r\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\r\nimport {scrollToTop} from \"../../utils/functions\";\r\n\r\nexport const ApplicationsList = ({applications, onSelectedApplication, forDev=false}) => {\r\n\r\n    const extractData = (applicationData) => {\r\n\r\n        const application = forDev ? applicationData.application : applicationData\r\n\r\n        return {\r\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\r\n            second: application.stage.type,\r\n            third: application.status,\r\n            application: applicationData\r\n        }\r\n    }\r\n\r\n    const handleSelect = (application, idx) => {\r\n        onSelectedApplication(application)\r\n        scrollToTop()\r\n    }\r\n\r\n    return (\r\n        <ListWithSelection\r\n            listItems={applications}\r\n            extractData={extractData}\r\n            limit={NaN}\r\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\r\n            isSelectable={!!onSelectedApplication}\r\n        />\r\n    )\r\n}","import DescriptionIcon from '@material-ui/icons/Description';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nexport const ProcessStage = {\r\n    APPLIED: {\r\n        name: \"Applied\",\r\n        description: \"\",\r\n        icon: <DescriptionIcon />\r\n    },\r\n    HR_INTERVIEW: {\r\n        name: \"Hr Interview\",\r\n        description: \"\",\r\n        icon: <AssignmentIndIcon />\r\n    },\r\n    TASK: {\r\n        name: \"Task\",\r\n        description: \"\",\r\n        icon: <AssignmentTurnedInIcon />\r\n    },\r\n    QUIZ: {\r\n        name: \"Quiz\",\r\n        description: \"\",\r\n        icon: <ContactSupportIcon />\r\n    },\r\n    TECHNICAL_INTERVIEW: {\r\n        name: \"Technical Interview\",\r\n        description: \"\",\r\n        icon: <ComputerIcon />\r\n    },\r\n    ENDED: {\r\n        name: \"The end\",\r\n        description: \"\",\r\n        icon: <CancelIcon />\r\n    },\r\n}","import {\r\n    Timeline,\r\n    TimelineConnector,\r\n    TimelineContent,\r\n    TimelineDot,\r\n    TimelineItem,\r\n    TimelineSeparator\r\n} from \"@material-ui/lab\";\r\nimport {ProcessStage} from \"../../utils/procesStages\";\r\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\r\nimport {applicationStatus} from \"../../utils/Enums\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '6px 16px',\r\n    },\r\n    secondaryTail: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n}));\r\n\r\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\r\n\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n\r\n    let isBeforeCurrent = true\r\n\r\n    const getTimelineContent = (stage) => (\r\n        <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n                {stage.name}\r\n            </Typography>\r\n            <Typography>{stage.description}</Typography>\r\n        </Paper>\r\n    )\r\n\r\n    const getDotColor = stageId => {\r\n        if (stageId === currentStageId) {\r\n            isBeforeCurrent = false\r\n            return theme.palette.primary.main\r\n        }\r\n        if (isBeforeCurrent) return theme.status.success.main\r\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\r\n            return theme.status.danger.main\r\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\r\n            return theme.palette.secondary.light\r\n        } else return \"grey\"\r\n    }\r\n\r\n    const getTimelineItem = (key, displayConnector) => {\r\n        const parts = key.split(\".\")\r\n        const stage = ProcessStage[parts[0]]\r\n        const stageId = Number(parts[1])\r\n        return (\r\n            <TimelineItem key={key}>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\r\n                        {stage.icon}\r\n                    </TimelineDot>\r\n                    {displayConnector ? <TimelineConnector /> : null}\r\n                </TimelineSeparator>\r\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\r\n            </TimelineItem>\r\n        )\r\n    }\r\n\r\n    const getTimelineItems = () => {\r\n        return stages\r\n            .map((item, idx) => {\r\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\r\n        })\r\n    }\r\n\r\n    return <Timeline align=\"alternate\">\r\n        {getTimelineItems()}\r\n    </Timeline>\r\n}","import React, {useState} from 'react'\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\r\n\r\nexport const FileViewerWrapper = ({undecodedFile}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleOpen = () => setOpen(true)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return (\r\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\r\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\r\n            <Grid item xs={6}>\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\r\n                    View File\r\n                </Button>\r\n            </Grid>\r\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\r\n        </Grid>\r\n    )\r\n}","import {checkedFetch} from \"../chekedFetch\";\r\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\nexport const applicationsAPI = {\r\n    getApplicationsByOfferId: function(offerId) {\r\n        return checkedFetch(\r\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\r\n            {method: \"GET\"}\r\n        ).then(response => response.json())\r\n    },\r\n\r\n    getApplicationsByJobSeeker: function() {\r\n        return authFetch(\r\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\r\n            {method: \"GET\"}\r\n        ).then(response => response.json())\r\n    },\r\n\r\n    rejectApplication: function(applicationId) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\r\n    },\r\n\r\n    nextStage: function(applicationId, devMails) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\"devs\": devMails}),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n    },\r\n\r\n    getApplicationsForDev: function(organizationId, devMail, devPassword) {\r\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/applications/forDev/${devMail}`, {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-dev-password': devPassword\r\n            }}).then(response => response.json())\r\n        }\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {authFetch} from \"../authFetch\";\r\nimport {checkedFetch} from \"../chekedFetch\";\r\n\r\nexport const processAPI = {\r\n\r\n    getProcessById: function (id) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => response.json())\r\n    },\r\n\r\n    getAllPossibleStages: function() {\r\n        return checkedFetch(recruitmentServiceBasicAPILink + '/api/process/stages')\r\n            .then(response => response.json())\r\n    },\r\n\r\n    updateProcessStages: function(id, items) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                stages: items\r\n            })\r\n        })\r\n    },\r\n\r\n    changeEndDate: function(id, date) {\r\n        const preparedDate = this.prepareDate(date)\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                date: preparedDate\r\n            })\r\n        })\r\n    },\r\n\r\n    changeStartDate: function(id, date) {\r\n        const preparedDate = this.prepareDate(date)\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start_date`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                date: preparedDate\r\n            })\r\n        })\r\n    },\r\n\r\n    startProcess: (id) => {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    },\r\n\r\n    prepareDate: function(date) {\r\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\r\n    }\r\n\r\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\r\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\r\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\r\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\r\nimport Swal from \"sweetalert2\";\r\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {validateEmail} from \"../../utils/functions\";\r\n\r\nexport const ApplicationDetails = ({application, isHR, reload, isDev}) => {\r\n\r\n    const theme = useTheme()\r\n    const history = useHistory()\r\n\r\n    const getSeekerFiles = () => {\r\n        return application.seekerFiles\r\n            .map((file, idx) => (\r\n                <Grid item key={idx} xs={12} md={6}>\r\n                    <FileViewerWrapper undecodedFile={file}/>\r\n                </Grid>))\r\n    }\r\n\r\n    const rejectApplication = () => {\r\n        Swal.fire({\r\n            title: \"Do you really want to reject this application?\",\r\n            text: \"This operation cannot be undone\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Reject Application\",\r\n            cancelButtonText: \"Abort!\",\r\n            icon: \"question\"\r\n        }).then(result => {\r\n            if(result.isConfirmed) {\r\n                withSwal({\r\n                    loadingTitle: \"Rejecting Application\",\r\n                    promise: () => applicationsAPI.rejectApplication(application.id),\r\n                    successFunction: () => reload(),\r\n                    successSwalText: \"Application rejected successfully\"\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"You've cancelled this operation\",\r\n                    text: \"Application isn't rejected\",\r\n                    icon: \"success\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const nextStage = () => {\r\n        if ( nextStageRequiresDevs() ) {\r\n            const devMails = []\r\n            Swal.fire({\r\n                title: \"We need more info\",\r\n                icon: \"warning\",\r\n                text: 'Next stage of this appliaction requires people with technical knowledge. Please, insert their mails here, splitting them with commas (,)',\r\n                input: \"text\",\r\n                preConfirm: (devsMails) => {\r\n                    if (devsMails) {\r\n                        devsMails.split(\",\")\r\n                            .map(mail => mail.trim())\r\n                            .forEach(mail => devMails.push(mail))\r\n                        devMails.forEach(mail => {\r\n                            if(!validateEmail(mail)) {\r\n                                Swal.showValidationMessage(`${mail} is not a valid email`)\r\n                                devMails.length = 0\r\n                            } \r\n                        })\r\n                    } else {\r\n                        Swal.showValidationMessage(\"Please, add mails of such people, as you won't be able to change it later.\")\r\n                    }\r\n                }\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    doSetNextStage(devMails)\r\n                }\r\n            })\r\n        } else {\r\n            doSetNextStage([])\r\n        }\r\n    }\r\n\r\n    const doSetNextStage = (devMails) => {\r\n        withSwal({\r\n            loadingTitle: \"Setting next stage of Application\",\r\n            promise: () => applicationsAPI.nextStage(application.id, devMails),\r\n            successFunction: () => reload(),\r\n            successSwalTitle: \"Next stage set successfully\"\r\n        })\r\n    }\r\n\r\n    const nextStageRequiresDevs = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"TASK\"], true)\r\n\r\n    const stageRequiresMeeting = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"HR_INTERVIEW\"])\r\n\r\n    const nextStageIsOneOf = (types, checkForNext) => {\r\n        let indexOfNextStage = application?.stages?.findIndex(stage => stage.id === application.stage.id)\r\n        if (checkForNext) indexOfNextStage += 1\r\n        return types.includes(application?.stages[indexOfNextStage]?.type)\r\n    }\r\n\r\n    const getDisabled = () => {\r\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\r\n    }\r\n\r\n    const getRejectButtonStyle = () =>\r\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\r\n\r\n    const teleportToMO = () =>\r\n        isHR ? history.push(`/meeting/organizer/${application.id}`) : history.push(`/meeting/job_seeker/${application.id}`)\r\n\r\n    const getCardContent = () => {\r\n        return (<CardContent>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography\r\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}><Divider/></Grid>\r\n                        <Grid item xs={8}>\r\n                            {\r\n                                application.seekerFiles.length === 0 ?\r\n                                    <Typography>{ isHR || isDev ? 'Candidate' : 'You' } didn't supply any files.</Typography> :\r\n                                    <Grid container direction=\"row\" spacing={4}>\r\n                                        {getSeekerFiles()}\r\n                                    </Grid>\r\n                            }\r\n                        </Grid>\r\n                        {\r\n                            stageRequiresMeeting() && !getDisabled() && !isDev &&\r\n                                (<Grid item xs={4}><Button color=\"secondary\" variant=\"outlined\" onClick={teleportToMO}>Plan meeting</Button></Grid>)\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            {/*  Notes about candidate in future  */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        {\r\n                            isHR && !isDev &&\r\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\r\n                                    Reject Application\r\n                                </Button>\r\n                                <Box m={1}/>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\r\n                                    Next Stage\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\r\n                                                 status={application.status}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>)\r\n    }\r\n\r\n    return (\r\n        <ListElementDetails cardContent={getCardContent()}/>\r\n    )\r\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\r\nimport {Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\r\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\r\nimport {useEffect, useState} from 'react'\r\nimport {AssignTasks} from \"../tasks/AssignTasks\";\r\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\r\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\r\n\r\nexport const DevApplicationDetails = ({devApplication}) => {\r\n\r\n    const application = devApplication?.application\r\n\r\n    const { getEncodedDevPassword } = useDevPassword()\r\n    const devPassword = getEncodedDevPassword()\r\n\r\n    const [openAssignTasks, setOpenAssignTasks] = useState(false)\r\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\r\n    const [organizationTasks, setOrganizationTasks] = useState([])\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const getSeekerFiles = () => {\r\n        return application.seekerFiles\r\n            .map((file, idx) => (\r\n                <Grid item key={idx} xs={12} md={6}>\r\n                    <FileViewerWrapper undecodedFile={file}/>\r\n                </Grid>))\r\n    }\r\n\r\n    useEffect(() => {\r\n        tasksApi.getTasksFromOrganization(devApplication.organizationUUID, devPassword)\r\n            .then(data => setOrganizationTasks(data))\r\n        tasksApi.getTasksFromTaskStage(devApplication.taskStageUUID, devPassword)\r\n            .then(data => setAlreadyAssignedTasks(data))\r\n    }, [devApplication, reload])\r\n\r\n    const assignTask = () => {\r\n        setOpenAssignTasks(true)\r\n    }\r\n\r\n    const getCardContent = () => {\r\n        return (<CardContent>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography\r\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName || devApplication?.position}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}><Divider/></Grid>\r\n                        <Grid item xs={8}>\r\n                            {\r\n                                application.seekerFiles.length === 0 ?\r\n                                    <Typography>Candidate didn't supply any files.</Typography> :\r\n                                    <Grid container direction=\"row\" spacing={4}>\r\n                                        {getSeekerFiles()}\r\n                                    </Grid>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n{/*                         UNCOMMENT AFTER MERGE WITH NOTES - ES-231 I THINK SO\r\n                            <div style={{display: 'flex', gap: '1em', flexFlow: 'row wrap'}}>\r\n                            {\r\n                                notes.map(note => <SingleNote note={note} />)\r\n                            }\r\n                            </div>\r\n                             */}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={assignTask}>Assign Task</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ListElementDetails cardContent={getCardContent()}/>\r\n            <AssignTasks\r\n                modalOptions={{open: openAssignTasks, handleClose: () => setOpenAssignTasks(false)}}\r\n                alreadyAssignedTasks={alreadyAssignedTasks}\r\n                organizationTasks={organizationTasks}\r\n                setReload={setReload}\r\n                assignKey=\"taskStage\"\r\n                assignUUIDValue={devApplication.taskStageUUID}\r\n            />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\r\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const EmptyApplicationsView = ({isHR, isDev}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const handleApply = () => {\r\n        history.push('/offers')\r\n    }\r\n\r\n    const handleBackToOffers = () => {\r\n        history.push('/hr/offers')\r\n    }\r\n\r\n    return (\r\n        <Box m={4}>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={12} sm={5}>\r\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\r\n                </Grid>\r\n                <Grid item xs={false} sm={2}/>\r\n                <Grid item xs={12} sm={5}>\r\n                    <Grid container spacing={6}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" color=\"textPrimary\">\r\n                                Oops... We couldn't find\r\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {\r\n                                !isDev &&\r\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\r\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\r\n                                    </Button>\r\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\r\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\r\n                                    </Button>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import {Redirect, useParams} from \"react-router-dom\";\r\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\r\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\r\nimport {ApplicationsList} from \"./ApplicationsList\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ApplicationDetails} from \"./ApplicationDetails\";\r\nimport {DevApplicationDetails} from './DevApplicationDetails';\r\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\r\nimport Swal from \"sweetalert2\";\r\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\r\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\r\n\r\nexport const ApplicationsView = ({getApplications, isHR, isDev, mailInBase64}) => {\r\n\r\n    const {id} = useParams()\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n\r\n    const devPassword = getEncodedDevPassword()\r\n\r\n    const [selectedApplication, setSelectedApplication] = useState(null)\r\n    const [applications, setApplications] = useState([])\r\n    const [fetching, setFetching] = useState(false)\r\n    const [fetchError, setFetchError] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const text = isDev ? `We weren't able to get this offer's applications! You will be redirected to main page.` : isHR ? `We weren't able to get this offer's applications! You will be redirected to your offers.` : `We weren't able to get your applications!`\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getApplications(id, mailInBase64, devPassword)\r\n            .then(data => {\r\n                const applications = isDev ? data.filter(application => application.application.status !== \"REJECTED\") : data\r\n                setApplications(applications)\r\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\r\n                setFetching(false)\r\n            }).catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: text,\r\n                    icon: \"error\"\r\n                }).then(() => {\r\n                    setFetchError(true)\r\n                    setFetching(false)\r\n                })\r\n            })\r\n    }, [setApplications, getApplications, id, reload])\r\n\r\n    const getStandardView = (innerApplications, WrappedComponent = ApplicationDetails, wrappedProps = {application: selectedApplication, isHR, reload: () => setReload(!reload), isDev}, forDev=false) => (\r\n        <StandardViewAndFilterLayout\r\n            filter={null}\r\n            sorter={null}\r\n            view={\r\n                <ColumnAndDetailsLayout\r\n                    details={selectedApplication ?\r\n                        <WrappedComponent {...wrappedProps}  /> :\r\n                        <div>Select application</div>}\r\n                    list={<ApplicationsList\r\n                        forDev={forDev}\r\n                        applications={innerApplications}\r\n                        onSelectedApplication={selected => setSelectedApplication(selected)}\r\n                    />}\r\n                />\r\n            }\r\n        />\r\n    )\r\n\r\n    const getDevView = () => getStandardView(applications.map(application => {\r\n        return {\r\n            ...application,\r\n            organizationUUID: id\r\n        }\r\n    }), DevApplicationDetails, {devApplication: selectedApplication, isDev, reload: () => setReload(!reload)}, true)\r\n\r\n    const getView = () => isDev ? getDevView() : getStandardView(applications)\r\n\r\n    return fetchError ? <Redirect to={isHR ? '/hr/offers' : '/'} />\r\n        : (fetching ? <CenteredCircularProgress size={80} />\r\n            : (applications?.length !== 0 && applications !== undefined ?\r\n                getView()\r\n                 : <EmptyApplicationsView isHR={isHR} isDev={isDev} />\r\n            )\r\n        )\r\n}","import {Grid, TextField} from \"@material-ui/core\"\r\nimport {Controller} from \"react-hook-form\"\r\nimport React from \"react\";\r\n\r\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\r\n    <Controller\r\n        {...props}\r\n        render={({field, fieldState}) => \r\n            <TextField \r\n                {...field}\r\n                {...props.additionalTextFieldProps} \r\n                variant=\"outlined\"  \r\n                error={fieldState.error != null} \r\n                fullWidth\r\n                helperText={fieldState.error?.message || \" \"} />\r\n        } />\r\n</Grid>","import {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@material-ui/core\"\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {Controller, useForm} from \"react-hook-form\"\r\nimport {OfferSkill} from \"../details/OfferSkill\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        height: '97%'\r\n    }\r\n}))\r\n\r\nexport const OfferFormSkillList = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const defaultFormState = {name: \"\", level: \"\"}\r\n    const skills = props.value || []\r\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\r\n\r\n    const onSkillAdd = (data) => {\r\n        props.onChange(skills.concat([data]))\r\n        reset()\r\n    }\r\n\r\n    const onSkillDelete = (idx) => {\r\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\r\n    }\r\n\r\n    return <>\r\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\r\n        <Grid item xs={12} sm={6}>\r\n            <Controller\r\n                control={control}\r\n                name=\"name\"\r\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\r\n                defaultValue={defaultFormState.name}\r\n                render={({field}) => \r\n                    <TextField\r\n                        {...field}\r\n                        label=\"Skill\"\r\n                        variant=\"outlined\"\r\n                        form=\"skill-form\"\r\n                        fullWidth />\r\n                } \r\n            />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={3}>\r\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\r\n                <InputLabel>Skill level</InputLabel>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"level\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.level}\r\n                    render={({field}) => \r\n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\r\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\r\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\r\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\r\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\r\n                            <MenuItem value='MASTER'>Master</MenuItem>\r\n                        </Select>\r\n                    } \r\n                />\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={3}>\r\n            <Button \r\n                className={classes.button}\r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                form=\"skill-form\"\r\n                color=\"secondary\"\r\n                fullWidth>Add skill</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Box mt={0} mb={0}>\r\n                <Grid container>\r\n                    {skills.map((skill, idx) =>\r\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\r\n                            <Grid container>\r\n                                <Grid item xs={11}>\r\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Box mt={3}>\r\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\r\n                                            <ClearIcon fontSize=\"medium\" />\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>)}\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n        </>\r\n}","import {Controller, useForm} from \"react-hook-form\"\r\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\r\nimport {FormField} from \"../../commons/formsCommons/FormField\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        height: '100%'\r\n    }\r\n}))\r\n\r\nexport const OfferForm = (props) => {\r\n    const { id } = useParams()\r\n    const [fetchError, setFetchError] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const defaultFormState = {\r\n        name:\"\",\r\n        position:\"\",\r\n        localization:\"\",\r\n        minSalary:\"\",\r\n        maxSalary:\"\",\r\n        description:\"\",\r\n        skills:[]\r\n    }\r\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const minSalary = watch(\"minSalary\", null)\r\n    const maxSalary = watch(\"maxSalary\", null)\r\n\r\n    function updateOffer(data) {\r\n        defaultFormState.name = data.name\r\n        defaultFormState.position = data.position\r\n        defaultFormState.localization = data.localization\r\n        defaultFormState.minSalary = data.minSalary\r\n        defaultFormState.maxSalary = data.maxSalary\r\n        defaultFormState.description = data.description\r\n        defaultFormState.skills = data.skills\r\n        reset(defaultFormState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(id !== undefined){\r\n            offersAPI.getOfferById(id)\r\n                .then(data => updateOffer(data))\r\n                .catch(() => {\r\n                    Swal.fire({\r\n                        title: \"Error\",\r\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\r\n                        icon: \"error\"\r\n                    }).then(() => setFetchError(true))\r\n                })\r\n        }\r\n    }, [id])\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\r\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\r\n\r\n    const onSubmit = (data) => {\r\n        const formResult = Object.assign(data, {\r\n            minSalary: parseInt(data.minSalary),\r\n            maxSalary: parseInt(data.maxSalary),\r\n            creatorId: parseInt(data.creatorId),\r\n            offerId: id\r\n        })\r\n        withSwal({\r\n            loadingTitle: \"Saving offer\",\r\n            promise: () => props.onSubmit(formResult),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully saved offer!\",\r\n            successFunction: () => history.push('/hr/offers'),\r\n            errorSwalTitle: \"We couldn't save this offer for you\"\r\n        })\r\n    }\r\n\r\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\r\n        <Grid container spacing={2}>\r\n            <FormField\r\n                control={control}\r\n                name=\"name\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Offer name\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"position\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Position\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"localization\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                additionalTextFieldProps={{\r\n                    label:\"Location\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"minSalary\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"},\r\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\r\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Minimum salary\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }}\r\n                additionalGridProps={{\r\n                    xs:12,\r\n                    sm:6\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"maxSalary\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"},\r\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\r\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Maximum salary\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }}\r\n                additionalGridProps={{\r\n                    xs:12,\r\n                    sm:6\r\n                }} />\r\n            <FormField\r\n                name=\"description\"\r\n                control={control}\r\n                rules={{required: {value: true, message: \"Required field\"}}}\r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    multiline: true,\r\n                    minRows: 8,\r\n                    maxRows: 8,\r\n                    autoComplete: \"off\",\r\n                    label:\"Short description\",\r\n                    form:\"offer-form\"\r\n                }}/>\r\n            <Controller\r\n                name=\"skills\"\r\n                control={control}\r\n                defaultValue={[]}\r\n                render={({field: {onChange, value}}) => \r\n                    <OfferFormSkillList onChange={onChange} value={value} />\r\n                }\r\n            />\r\n            <Grid item xs={false} sm={8} />\r\n            <Grid item xs={12} sm={4}>\r\n                <Button className={classes.button}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        form=\"offer-form\"\r\n                        color=\"primary\"\r\n                        fullWidth>\r\n                    Save offer\r\n                </Button>\r\n            </Grid>\r\n        </Grid></div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\r\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\r\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const ManageStages = ({processId}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const [stages, setStages] = useState([])\r\n    const [possibleStages, setPossibleStages] = useState([])\r\n    const [fetchError, setFetchError] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let swal = new Swal({\r\n            title: \"Getting data\"\r\n        })\r\n        Swal.showLoading()\r\n        processAPI.getProcessById(processId)\r\n            .then(data => {\r\n                setStages(data.stages);\r\n                swal.close()\r\n            })\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We were unable to get process data!\",\r\n                    icon: \"error\"\r\n                }).then(() => setFetchError(true))\r\n            })\r\n            .finally(() => swal.close())\r\n        processAPI.getAllPossibleStages()\r\n            .then(data => setPossibleStages(data))\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We were unable to get possible stages!\",\r\n                    icon: \"error\"\r\n                }).then(() => setFetchError(true))\r\n            })\r\n            .finally(() => swal.close())\r\n    }, [reload, processId])\r\n\r\n    const getPossibleStages = () => possibleStages.map(stage => {\r\n        return {'type': stage}\r\n    })\r\n\r\n    const getStages = () => stages\r\n\r\n    const handleSubmit = (items) => {\r\n        if(items !== getStages()) {\r\n            withSwal({\r\n                loadingTitle: \"Updating stages\",\r\n                promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\r\n                successSwalTitle: \"Stages Updated\",\r\n                successFunction: () => setReload(reload => !reload)\r\n            })\r\n        }\r\n    }\r\n\r\n    const fireSwal = (title, text, icon) => {\r\n        Swal.fire({\r\n            title: title,\r\n            text: text,\r\n            icon: icon\r\n        })\r\n    }\r\n\r\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\r\n        firstListItems={getStages()}\r\n        secondListItems={getPossibleStages()}\r\n        //temporary solution - would be the best to actually change TwoColumnDnD to fire callback about setting items length\r\n        forbiddenIndexes={[0, getStages().length]}\r\n        warningFunction={() => fireSwal(\r\n            \"You can't do this!\",\r\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\r\n            \"warning\"\r\n        )}\r\n        itemRender={(item) => (\r\n            <Box m={1}>\r\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\r\n                    <CardContent>\r\n                        <Typography>{item.type}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n        )}\r\n        onFirstListChange={(items) => handleSubmit(items)}\r\n        leftSubmitGridProps={{xs: 10}}\r\n        centerSubmitGridProps={{xs: 1}}\r\n        rightSubmitGridProps={{xs: 1}}\r\n        materialButtonProps={{variant: \"outlined\"}}\r\n        submitDivStyle={{marginTop: \"15px\"}}\r\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\r\n    />\r\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\r\n\r\n    return (\r\n        <div style={{...divStyle}}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    value={selectedDate}\r\n                    label={label}\r\n                    onChange={handleDateChange}\r\n                    {...additionalProps}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nEStellaDatePicker.propTypes = {\r\n    style: PropTypes.object,\r\n    additionalProps: PropTypes.object,\r\n    handleDateChange: PropTypes.func.isRequired,\r\n    selectedDate: PropTypes.any.isRequired\r\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ManageDate = ({selectedDate, onChange, processStartDate, disabled, label}) => {\r\n\r\n    const handleDateChange = (date) => {\r\n        if (!processStartDate || date > new Date(processStartDate)) {\r\n            onChange(date)\r\n        } else {\r\n            Swal.fire({\r\n                title: \"Oops, you cannot do this!\",\r\n                text: \"Looks like you've tried to set a date that's earlier than today!\",\r\n                icon: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return <EStellaDatePicker\r\n            selectedDate={selectedDate}\r\n            handleDateChange={handleDateChange}\r\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\r\n            disabled={disabled}\r\n            label={label}\r\n        />\r\n}\r\n\r\nManageDate.propTypes = {\r\n    selectedDate: PropTypes.any.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import {ManageDate} from \"./ManageDate\";\r\nimport {Button, Card, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useState} from \"react\";\r\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\n\r\nexport const Dates = ({ process, reload, setReload }) => {\r\n\r\n    const [selectedEndDate, setSelectedEndDate] = useState(process?.endDate || new Date().toLocaleDateString())\r\n    const [selectedStartDate, setSelectedStartDate] = useState(process?.startDate || new Date().toLocaleDateString())\r\n    \r\n    const isProcessStarted = () => process?.startDate != null && new Date(process?.startDate) <= new Date()\r\n\r\n    const startProcess = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to modify stages after you start your process\",\r\n            icon: \"warning\",\r\n            showCancelButton: true\r\n        }).then(result => {\r\n            if(result.isConfirmed) {\r\n                withSwal({\r\n                    loadingTitle: \"Starting process\",\r\n                    promise: () => processAPI.startProcess(process.id),\r\n                    successSwalTitle: \"Process Started!\",\r\n                    successFunction: () => setReload(!reload)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEndSubmit = () => {\r\n        withSwal({\r\n            loadingTitle: \"Updating end date\",\r\n            promise: () => processAPI.changeEndDate(process.id, selectedEndDate),\r\n            successSwalTitle: \"Date updated\",\r\n            successFunction: () => setReload(!reload)\r\n        })\r\n    }\r\n\r\n    const handleStartSubmit = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to modify stages after the date your process will start\",\r\n            icon: \"warning\",\r\n            showCancelButton: true\r\n        }).then(result => {\r\n            if(result.isConfirmed) {\r\n                withSwal({\r\n                    loadingTitle: \"Updating start date\",\r\n                    promise: () => processAPI.changeStartDate(process.id, selectedStartDate),\r\n                    successSwalTitle: \"Date updated\",\r\n                    successFunction: () => setReload(!reload)\r\n                })      \r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} style={{height: \"100%\", textAlign: 'center'}} direction=\"row\">\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\">Schedule Start Of Process</Typography>\r\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\r\n                                <ManageDate selectedDate={selectedStartDate}\r\n                                        onChange={(date) => setSelectedStartDate(date)}\r\n                                        label=\"Start of recruitment process\"\r\n                                />\r\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleStartSubmit} disabled={isProcessStarted()}>Schedule</Button>\r\n                            </div>\r\n                            <Divider style={{marginTop: '1em', marginBottom: '1em'}} />\r\n                            <Typography variant=\"h6\" style={{marginBottom: '5px'}}>Or</Typography>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={startProcess} disabled={isProcessStarted()}>Start your process now!</Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\">Schedule End Of Process</Typography>\r\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\r\n                                <ManageDate selectedDate={selectedEndDate}\r\n                                        onChange={(date) => setSelectedEndDate(date)}\r\n                                        processStartDate={process?.startDate}\r\n                                />\r\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleEndSubmit}>Schedule</Button>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n","import {ManageStages} from \"./ManageStages\";\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Swal from \"sweetalert2\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\r\nimport {Dates} from \"./Dates\";\r\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\r\n\r\nexport const ManageProcess = () => {\r\n\r\n    const {id} = useParams()\r\n    const [fetchError, setFetchError] = useState(false)\r\n    const [process, setProcess] = useState(null)\r\n\r\n    const [reload, setReload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        processAPI.getProcessById(id)\r\n            .then(data => {\r\n                setProcess(data)\r\n            })\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We were unable to get this process! You will be redirected to home page\",\r\n                    icon: \"error\"\r\n                }).then(() => setFetchError(true))\r\n            })\r\n    }, [id, reload])\r\n\r\n    const showHelp = () => {\r\n        Swal.fire({\r\n            title: \"Help\",\r\n            icon: \"question\",\r\n            html: 'Here are some most commons tips:<br>' +\r\n                '<ul>' +\r\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\r\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\r\n                '</ul>'\r\n        })\r\n    }\r\n\r\n    const ManageProcessInside = () =>\r\n        process == null ? <CenteredCircularProgress size={80} /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Grid container spacing={2} direction=\"column\">\r\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\r\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\r\n                        </Grid>\r\n                        <Grid item> <Divider/> </Grid>\r\n\r\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"1em\", marginTop: '1em'}}>\r\n                            <Dates process={process} reload={reload} setReload={setReload} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\r\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item> <Divider/> </Grid>\r\n                        <Grid item style={{marginTop: '1em'}}>\r\n                            <ManageStages processId={id}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    return fetchError ? <Redirect to=\"/\" /> : <ManageProcessInside />\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport React from \"react\";\r\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const LoginForm = (props) => {\r\n\r\n    const {loggedIn, login} = useLoggedIn()\r\n\r\n    const defaultFormState = {\r\n        login: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Logging in...\",\r\n            promise: () => loginAPI.login(data.login, data.password),\r\n            successSwalTitle: \"Successfully logged in!\",\r\n            successFunction: (token) => {\r\n                reset()\r\n                login()\r\n                props.reload.setReload(!props.reload.reload)\r\n            },\r\n            errorSwalTitle: \"We couldn't log you in!\"\r\n        })\r\n        if(props.onSubmit) {\r\n            props.onSubmit(data)\r\n        }\r\n    }\r\n\r\n    return loggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={2}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"login\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"},\r\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Login\"\r\n                            }}\r\n                        />\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"password\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"}\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Password\",\r\n                                autoComplete: \"off\",\r\n                                type: \"password\"\r\n                            }}\r\n                        />\r\n                        <Grid item xs={false} sm={8} />\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth color=\"primary\">Login</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Card>\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\n\r\nexport const UserRegistration = (props) => {\r\n    const defaultFormState = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Registering...\",\r\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\r\n            successSwalTitle: \"Successfully registered!\",\r\n            successSwalText: \"You can log in now!\",\r\n            confirmButtonText: \"Go to login page\",\r\n            successFunction: (response) => {\r\n                reset()\r\n                history.push('/login')\r\n            },\r\n            errorSwalTitle: \"We couldn't register you!\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\r\n\r\n                <Grid container spacing={2}>\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"login\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Email\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Password\",\r\n                            form: \"user-register-form\",\r\n                            type: \"password\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"firstName\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"First Name\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"lastName\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Last Name\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const CompanyRegistration = () => {\r\n\r\n    const defaultFormState = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Registering...\",\r\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\r\n            successSwalTitle: \"Successfully registered!\",\r\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\r\n            confirmButtonText: \"Back to main page\",\r\n            successFunction: () => {\r\n                reset()\r\n                history.push(\"/\")\r\n            },\r\n            errorSwalTitle: \"We couldn't register you!\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\r\n\r\n                <Grid container spacing={2}>\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"login\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Email\",\r\n                            form: \"company-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Password\",\r\n                            form: \"company-register-form\",\r\n                            type: \"password\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"name\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Company Name\",\r\n                            form: \"company-register-form\"\r\n                        }}\r\n                    />\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n\r\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const RegistrationRadioButtons = (props) => {\r\n\r\n    const handleChange = ({ target }) => {\r\n        props.handleChange(target.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\r\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\r\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\r\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\r\n            </RadioGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegistrationRadioButtons.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}","import React, {useState} from \"react\";\r\nimport {UserRegistration} from \"./UserRegistration\";\r\nimport {CompanyRegistration} from \"./CompanyRegistration\";\r\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\r\n\r\nexport const RegistrationRouting = () => {\r\n\r\n    const [render, setRender] = useState(\"user\")\r\n\r\n    const handleChange = (value) => {\r\n        setRender(value)\r\n    }\r\n\r\n    const getRegistrationForm = () => {\r\n        switch (render) {\r\n            case 'user':\r\n                return <UserRegistration />\r\n            case 'company':\r\n                return <CompanyRegistration />\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\r\n            {getRegistrationForm()}\r\n        </div>\r\n    )\r\n}","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\r\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\r\nimport Swal from \"sweetalert2\";\r\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\r\n\r\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\r\n\r\n    const {type : paramType, uuid} = useParams()\r\n    const [outsideValues, setOutsideValues] = useState(null)\r\n    const [fetchError, setFetchError] = useState(false)\r\n    const [userData, setUserData] = useState(null)\r\n\r\n    let redirectPath = \"/\"\r\n\r\n    const type = paramType || propType\r\n\r\n    const onPickSlotByJobSeeker = userData?.userType === \"job_seeker\" ? (slot) => console.log(slot) : () => {}\r\n\r\n    useEffect(() => {\r\n        if(type === \"organizer\") {\r\n            interviewAPI.getNewestInterview(uuid)\r\n                .then(data => {\r\n                    setOutsideValues({hosts: data?.hosts || [], guest: data?.application?.jobSeeker?.user?.mail || '', uuid: data?.id})\r\n                })\r\n                .catch(() =>\r\n                    Swal.fire({\r\n                        title: \"Error\",\r\n                        text: \"We couldn't find the interview data for this application! You will be redirected to home page\",\r\n                        icon: \"error\"\r\n                    }).then(() => {\r\n                        setFetchError(true)\r\n                    })\r\n                )\r\n        } else {\r\n            setUserData({uuid, userType: type})\r\n        }\r\n    }, [type, uuid])\r\n\r\n    console.log(outsideValues)\r\n\r\n    return fetchError ? <Redirect to={redirectPath} /> : (\r\n        !!outsideValues || !!userData ? <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\r\n                                userData={userData}\r\n                                outsideJwt={jwtUtils.getAuthToken()}\r\n                                outerFunctions={{ 'onPickSlot': onPickSlotByJobSeeker }}\r\n                                drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}}\r\n                                outsideMeetingValues={outsideValues} />: <CenteredCircularProgress size={80} />\r\n    )\r\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\r\nimport {hrOfferButtons} from \"../HrOfferButtons\";\r\nimport {theme} from \"../../../utils/theme\";\r\nimport {OffersView} from \"./OffersView\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {AddCircleOutline} from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst marginWithDrawer = \"100px\"\r\n\r\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\r\n    <OffersView\r\n        getOffers={() => offersAPI.getOffersFromHr()}\r\n        buttons={hrOfferButtons(theme)}\r\n    />\r\n    <Drawer\r\n        variant=\"permanent\"\r\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\r\n    >\r\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\r\n            <ListItem>\r\n                <Link to=\"/hr/offers/add\">\r\n                    <IconButton>\r\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\r\n                    </IconButton>\r\n                </Link>\r\n            </ListItem>\r\n        </List>\r\n    </Drawer>\r\n</div>\r\n\r\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Button, Typography} from \"@material-ui/core\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FilesDropzone from \"./FilesDropzone\";\r\n\r\nfunction _base64ToArrayBuffer(base64) {\r\n    const binary_string = window.atob(base64);\r\n    const len = binary_string.length;\r\n    const bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n}\r\n\r\nfunction _arrayBufferToBase64( buffer ) {\r\n    let binary = '';\r\n    const bytes = new Uint8Array(buffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n}\r\n\r\nconst FilesChangedTip = ({onSaveFiles}) =>\r\n    <Paper elevation={0} variant=\"outlined\" style={{\r\n        padding: \"1em\",\r\n        paddingLeft: \"1em\",\r\n        backgroundColor: deepOrange[100],\r\n        display: \"flex\"\r\n    }}>\r\n        <Grid container>\r\n            <Grid item xs={12} md={9} lg={12}>\r\n                <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    height=\"100%\"\r\n                >\r\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3} lg={12}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n\r\nconst OldFilePaper = ({children}) =>\r\n    <Paper style={{\r\n        padding: \"5px\",\r\n        paddingLeft: \"1em\",\r\n        backgroundColor: \"primary\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    }}>\r\n        {children}\r\n    </Paper>\r\n\r\n\r\nconst NewFilePaper = ({children}) =>\r\n    <Paper style={{\r\n        padding: \"5px\",\r\n        paddingLeft: \"1em\",\r\n        backgroundColor: \"orange\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    }}>\r\n        {children}\r\n    </Paper>\r\n\r\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\r\n    const ch = <>\r\n        {file.fileName}\r\n        <div>\r\n            <IconButton\r\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\r\n            >\r\n                <GetAppOutlined/>\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={() => handleDelete(index)}\r\n            >\r\n                <DeleteForeverOutlined/>\r\n            </IconButton>\r\n        </div>\r\n    </>\r\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\r\n        {initialFiles.some(a => a.id === file.id) ?\r\n            <OldFilePaper>{ch}</OldFilePaper>:\r\n            <NewFilePaper>{ch}</NewFilePaper>}\r\n    </Grid>\r\n}\r\n\r\nexport const FilesPage = () => {\r\n    const [downloadedFiles, setDownloadedFiles] = useState([])\r\n    const [files, setFiles] = useState([])\r\n\r\n\r\n    const downloadedFilesSet = new Set(downloadedFiles)\r\n    const filesSet = new Set(files)\r\n\r\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\r\n\r\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\r\n        f.sort((a, b) => a.id - b.id)\r\n        setDownloadedFiles(f)\r\n        setFiles(f)\r\n    })\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        Promise.all(acceptedFiles.map(value =>\r\n            value.arrayBuffer().then(\r\n                arrayBuffer => { return {\r\n                    fileName: value.name,\r\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\r\n                }}\r\n            )\r\n        )).then(newFiles => {\r\n            setFiles(oldFiles => oldFiles.concat(newFiles))\r\n        })\r\n    }, [])\r\n\r\n    useEffect(\r\n        fetchFiles,\r\n    []\r\n    )\r\n\r\n    function handleDownload(fileName, base64) {\r\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', fileName);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n    }\r\n\r\n    function handleDelete(index) {\r\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\r\n    }\r\n\r\n    function onSaveFiles() {\r\n        withSwal({\r\n            title: \"Saving files\",\r\n            promise: () => jobSeekerAPI.insertFiles(files),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully saved your files!\",\r\n            errorSwalTitle: \"Something went wrong\",\r\n            errorSwalText: \"We couldn't save these files for you\",\r\n            successFunction: fetchFiles\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <Grid container spacing={2}>\r\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\r\n                <FilesDropzone onDrop={onDrop} />\r\n            </Grid>\r\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\r\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\r\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\r\n                </Grid>\r\n                {files.map((value, index) =>\r\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\r\n                )}\r\n            </Grid>\r\n            <Grid item xs={false} md={6} lg={10} />\r\n            <Grid item xs={12} md={6} lg={2}>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n}\r\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {userTypes} from \"../../utils/Enums\";\r\n\r\n\r\nfunction UserInfo({label, value}) {\r\n    return <><Grid item xs={12} sm={3}>\r\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\r\n    </Grid>\r\n    <Grid item xs={12} sm={9}>\r\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\r\n    </Grid></>\r\n}\r\n\r\nfunction displayType(userType) {\r\n    switch (userType) {\r\n        case userTypes.JOB_SEEKER:\r\n            return \"Candidate\"\r\n\r\n        case userTypes.HR:\r\n            return \"Human Resources Specialist\"\r\n\r\n        case userTypes.ORGANIZATION:\r\n            return \"Organization\"\r\n\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n\r\nexport const ProfilePage = () => {\r\n    const user = jwtUtils.getUser()\r\n    return <Grid container>\r\n        <Grid item lg={2} md={1} sm={false}/>\r\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\r\n            <UserInfo label=\"ID:\" value={user.userId} />\r\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\r\n            <UserInfo label=\"Mail:\" value={user.mail} />\r\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\r\n        </Grid>\r\n        <Grid item lg={2} md={1} sm={false}/>\r\n    </Grid>\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\nexport const userAPI = {\r\n\r\n    updateUser: function (userRequest) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(userRequest)\r\n        })\r\n    },\r\n\r\n    updatePersonalData: function (personalData) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(personalData)\r\n        })\r\n    },\r\n\r\n    updatePassword: function (passwordRequest) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(passwordRequest)\r\n        })\r\n    }\r\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {FormField} from \"../commons/formsCommons/FormField\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport React, {useEffect} from \"react\";\r\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport {userAPI} from \"../../utils/apis/UserAPI\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\n\r\nconst EditPersonalInfoForm = () => {\r\n    const user = jwtUtils.getUser()\r\n    const defaultFormState = {\r\n        mail: user.mail,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName\r\n    }\r\n\r\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const onSubmit = ({firstName, lastName}) =>\r\n        withSwal({\r\n            loadingTitle: \"Waiting for server response...\",\r\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\r\n            successSwalTitle: \"Successful change!\",\r\n            errorSwalTitle: \"We couldn't change your personal data!\"\r\n        })\r\n\r\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\r\n        <div style={{width: \"80%\", margin: \"auto\"}}>\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"mail\"\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Email\",\r\n                                disabled: true\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"firstName\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"},\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"First Name\",\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"lastName\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"},\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Last Name\",\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    </Card>\r\n}\r\n\r\nconst EditPasswordForm = () => {\r\n    const defaultFormState = {\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        repeatedPassword: \"\"\r\n    }\r\n\r\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const newPasswordInput = watch(\"newPassword\")\r\n\r\n    useEffect(\r\n        () => {\r\n            if(newPasswordInput)\r\n                trigger(\"repeatedPassword\")\r\n        },\r\n        [newPasswordInput, trigger]\r\n    )\r\n\r\n    const onSubmit = ({oldPassword, newPassword}) =>\r\n        withSwal({\r\n            loadingTitle: \"Waiting for server response...\",\r\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\r\n            successSwalTitle: \"Successfully changed password!\",\r\n            errorSwalTitle: \"We couldn't change your password!\"\r\n        })\r\n\r\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\r\n        <div style={{width: \"80%\", margin: \"auto\"}}>\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"oldPassword\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"}\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Current password\",\r\n                                type: \"password\"\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"newPassword\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"}\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"New password\",\r\n                                type: \"password\"\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormField\r\n                            control={control}\r\n                            name=\"repeatedPassword\"\r\n                            rules={{\r\n                                required: {value: true, message: \"Required field\"},\r\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\r\n                            }}\r\n                            defaultValue=\"\"\r\n                            additionalTextFieldProps={{\r\n                                label: \"Repeat password\",\r\n                                type: \"password\"\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    </Card>\r\n}\r\n\r\nexport const SettingsPage = () => {\r\n    return <>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n                <EditPersonalInfoForm />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <EditPasswordForm />\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n}","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {FilesPage} from \"./FilesPage\";\r\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\r\nimport {ProfilePage} from \"./ProfilePage\";\r\nimport {SettingsPage} from \"./SettingsPage\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction TabPanel({ children, value, tabName, ...other }) {\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== tabName}\r\n            id={`tabpanel-${tabName}`}\r\n            aria-labelledby={`tab-${tabName}`}\r\n            style={{padding: \"1em\", color: \"primary\"}}\r\n            {...other}\r\n        >\r\n            {value === tabName && <Box>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(tabName) {\r\n    return {\r\n        id: `tab-${tabName}`,\r\n        'aria-controls': `tabpanel-${tabName}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n    indicator: {\r\n        left: \"0px\"\r\n    }\r\n}));\r\n\r\nexport default function SettingsOverlay(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const state = props.location?.state\r\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\r\n    const user = jwtUtils.getUser();\r\n\r\n    const handleChange = (event, newValue) => setValue(newValue)\r\n\r\n    return user ? (<Grid container>\r\n        <Box clone order={{xs: 2, md: 1}}>\r\n            <Grid item xs={12} md={9} lg={10}>\r\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\r\n                    <ProfilePage />\r\n                </TabPanel>\r\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\r\n                    <SettingsPage />\r\n                </TabPanel>\r\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\r\n                    <FilesPage />\r\n                </TabPanel>\r\n            </Grid>\r\n        </Box>\r\n        <Box clone order={{xs: 1, md: 2}}>\r\n            <Grid item xs={12} md={3} lg={2}>\r\n                <Tabs\r\n                    value={value}\r\n                    orientation=\"vertical\"\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    classes={{\r\n                        indicator: classes.indicator\r\n                    }}\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"settings tabs\"\r\n                >\r\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\r\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\r\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\r\n                </Tabs>\r\n            </Grid>\r\n        </Box>\r\n        </Grid>) : <Redirect to=\"/\" />;\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport Swal from \"sweetalert2\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\n\r\nexport const organizationsAPI = {\r\n    getHrPartnersByOrganization: function() {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    test: \"We weren't able to get your organizations' HR users\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n\r\n    },\r\n\r\n    addHrPartner(form) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(form)\r\n        })\r\n    },\r\n\r\n    deleteHrPartner(form) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                mail: form.mail\r\n            })\r\n        })\r\n    },\r\n\r\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {validateEmail} from \"../../utils/functions\";\r\nimport React, {useState} from \"react\";\r\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        height: '97%'\r\n    }\r\n}))\r\n\r\nexport const PartnerForm = (props) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const defaultFormState = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mail: \"\"\r\n    }\r\n\r\n    const [users, setUsers] = useState([props.users])\r\n\r\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\r\n\r\n    const onUserAdd = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Adding HR user\",\r\n            promise: () => organizationsAPI.addHrPartner(data),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully added HR user!\",\r\n            successFunction: () => {\r\n                setUsers(users.concat(data))\r\n                reset()\r\n                if(props.onSubmit){\r\n                    props.onSubmit(data)\r\n                }\r\n                props.userAdded(data)\r\n            },\r\n            errorSwalTitle: \"We couldn't save this user for you\"\r\n        })\r\n\r\n    }\r\n\r\n    return <>\r\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"firstName\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.firstName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"lastName\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.lastName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"mail\"\r\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\r\n                    defaultValue={defaultFormState.lastName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"e-mail address\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12} sm={3}>\r\n                <Button\r\n                    className={classes.button}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    form=\"user-form\"\r\n                    fullWidth>Add HR user</Button>\r\n            </Grid>\r\n    </>\r\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Card style={{backgroundColor: theme.palette.card.light}}>\r\n                <CardContent>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {firstName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {lastName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box m={1}>\r\n                        <Typography color=\"textSecondary\">\r\n                            {mail}\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport {OrganizationPartner} from \"./OrganizationPartner\";\r\n\r\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\r\n    <Box mt={0} mb={0}>\r\n        <Grid container>\r\n            {users.map((user, idx) =>\r\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\r\n                    <Grid container>\r\n                        <Grid item xs={11}>\r\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\r\n                                                 mail={user.mail}/>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <Box mt={3}>\r\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\r\n                                    <ClearIcon fontSize=\"medium\"/>\r\n                                </IconButton>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>)}\r\n        </Grid>\r\n    </Box>","import {Grid} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\r\nimport {PartnerForm} from \"./PartnerForm\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\r\n\r\nexport const OrganizationPartnersManagement = (props) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    function updateUsers(data) {\r\n        setUsers(data.map(el => el.user))\r\n    }\r\n\r\n    useEffect(() => {\r\n        organizationsAPI.getHrPartnersByOrganization()\r\n            .then(data => {\r\n                updateUsers(data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    const onUserDelete = (idx, data) => {\r\n        withSwal({\r\n            loadingTitle: \"Deleting HR user\",\r\n            promise: () => organizationsAPI.deleteHrPartner(data),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully deleted HR user!\",\r\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\r\n            errorSwalTitle: \"We couldn't delete this user for you\"\r\n        })\r\n        if (props.onDelete) {\r\n            props.onDelete(data)\r\n        }\r\n    }\r\n\r\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\r\n        <Grid container spacing={2}>\r\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\r\n        </Grid>\r\n    </div>\r\n}","import {useState} from 'react'\r\nimport {Button, Drawer, List, ListItem} from '@material-ui/core'\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {constants} from \"../../utils/constants\";\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {NotesMenu} from './NotesMenu'\r\n\r\nconst drawerWidth = 600;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  }\r\n}));\r\n\r\n\r\nexport const NotesDrawer = ({ notes, uuid, uuid_key, reload, setReload }) => {\r\n\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleNoteClick = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const closeNote = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const closedView = (<List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\r\n                            <ListItem>\r\n                                <Button onClick={handleNoteClick}>\r\n                                    <NoteAddIcon fontSize=\"large\" color=\"action\"/>\r\n                                </Button>\r\n                            </ListItem>\r\n                        </List>)\r\n\r\n    return (\r\n        <div>\r\n            {open && (\r\n                <Button onClick={closeNote} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\r\n                    <CloseIcon size=\"large\" color=\"action\" />\r\n                </Button>\r\n            )}\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                  })}\r\n                  classes={{\r\n                    paper: clsx({\r\n                      [classes.drawerOpen]: open,\r\n                      [classes.drawerClose]: !open,\r\n                    }),\r\n                  }}\r\n            >\r\n                {open ? <NotesMenu notes={notes} uuid={uuid} uuid_key={uuid_key} reload={reload} setReload={setReload} /> : closedView}\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","import MonacoEditor from 'react-monaco-editor';\r\nimport {decodeBase64} from '../../../utils/hooks/Base64';\r\nimport {MarkdownViewer} from '../../commons/MarkdownViewer';\r\nimport {Card} from '@material-ui/core'\r\n\r\nexport const SingleTaskReview = ({ task }) => {\r\n    const { code, results, tests, description } = task\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', gap: '1em'}}>\r\n                <MonacoEditor\r\n                    value={code}\r\n                    theme=\"vs-dark\"\r\n                    language=\"plain-text\"\r\n                    width=\"100%\"\r\n                    height=\"40vh\"\r\n                    options={{readOnly: true}}\r\n                />\r\n                <div style={{border: '1px solid #989898', padding: '1em', width: '100%'}}>\r\n                    <MarkdownViewer markdown={decodeBase64(description)} />\r\n                </div>\r\n            </div>\r\n            <Card>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport {Carousel} from 'react-responsive-carousel';\r\nimport {SingleTaskReview} from './SingleTaskReview'\r\n\r\nexport const TasksCarousel = ({ tasks }) => {\r\n\r\n    return (\r\n        <div style={{ marginLeft: '5em'}}>\r\n            <Carousel\r\n                infiniteLoop\r\n            >\r\n                {tasks.map((task, idx) => <SingleTaskReview task={task} key={idx} />)}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from 'react'\r\nimport {tasksApi} from '../../../utils/apis/tasksAPI';\r\nimport {useDevPassword} from '../../../utils/hooks/useDevPassword'\r\nimport {NotesDrawer} from '../../notes/NotesDrawer';\r\nimport {TasksCarousel} from './TasksCarousel'\r\nimport Swal from 'sweetalert2'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nexport const ReviewTask = ({ id: taskStageUUID }) => {\r\n\r\n    const { getEncodedDevPassword } = useDevPassword()\r\n    \r\n    const history = useHistory()\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [tasks, setTasks] = useState([])\r\n    const [reload, setReload] = useState(false)\r\n\r\n    useEffect(() => {\r\n       tasksApi.getNotesWithTasksByTaskUUID(taskStageUUID, getEncodedDevPassword())\r\n            .then(data => {\r\n                setNotes(data?.notes || [])\r\n                setTasks(data?.tasks || [])\r\n            })\r\n            .catch( err =>\r\n                Swal.fire({\r\n                    title: \"You're not supposed to be here!\",\r\n                    text: \"We're sorry, but password you have provided was incorrect.\",\r\n                    icon: \"error\"\r\n                }).then(() => {\r\n                    history.push('/')\r\n                })\r\n            )\r\n    }, [taskStageUUID, reload])\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <NotesDrawer notes={notes} uuid={taskStageUUID} uuid_key=\"task_note\" reload={reload} setReload={setReload} />\r\n            { tasks?.length > 0 ? <TasksCarousel tasks={tasks} /> : <Typography variant=\"h5\" style={{textAlign: 'center'}}> There are no tasks results to show! </Typography>}\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\";\r\n\r\nexport const FileUpload = ({handleChange}) => {\r\n\r\n    const [uploaded, setUploaded] = useState(false)\r\n\r\n    return (\r\n        <label style={{\r\n            border: `1px solid #ccc`,\r\n            display: 'inline-block',\r\n            padding: `6px 12px`,\r\n            cursor: 'pointer',\r\n            width: '80%'\r\n        }}>\r\n            <input type=\"file\" onChange={({target}) => {\r\n                setUploaded(true);\r\n                handleChange(target.files[0])\r\n            }} style={{display: 'none'}}/>\r\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\r\n        </label>\r\n    )\r\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\r\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {FileUpload} from \"../../../commons/FileUpload\";\r\n\r\nexport const AddDescription = ({ handleChange }) => {\r\n\r\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\r\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\r\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\r\n\r\n    const [editor, setEditor] = useState(mdEditor)\r\n\r\n    const handleRadioChange = ({ target }) => {\r\n        switch (target.value) {\r\n            case 'text':\r\n                setEditor(textEditor)\r\n                break;\r\n            case 'md':\r\n                setEditor(mdEditor)\r\n                break;\r\n            case 'file':\r\n                setEditor(fileEditor)\r\n                break;\r\n            default:\r\n                setEditor(null)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Add description to your task</Typography>\r\n            <div style={{margin: '1em'}} />\r\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\r\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\r\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\r\n                </RadioGroup>\r\n            </div>\r\n            { editor }\r\n        </div>\r\n    )\r\n}","import {IconButton, TextField} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {AddCircleOutlined} from \"@material-ui/icons\";\r\n\r\nexport const Form = ({ addTestCase }) => {\r\n\r\n    const [testCase, setTestCase] = useState({})\r\n\r\n    const addTestCaseAndClearFields = () => {\r\n        addTestCase(testCase)\r\n        setTestCase({})\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\r\n            <TextField\r\n                label=\"Input\"\r\n                variant=\"outlined\"\r\n                value={testCase?.input}\r\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\r\n            />\r\n            <TextField\r\n                label=\"Expected Output\"\r\n                variant=\"outlined\"\r\n                value={testCase?.output}\r\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\r\n            />\r\n            <IconButton onClick={() => {\r\n                addTestCaseAndClearFields(testCase)\r\n                setTestCase({})\r\n            }}>\r\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from \"react\";\r\nimport {Form} from \"./Form\";\r\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport const ManualTestsCases = ({ handleSubmit }) => {\r\n\r\n    const [testCases, setTestCases] = useState([])\r\n\r\n    useEffect(() => {\r\n        handleSubmit(testCases)\r\n    }, [testCases])\r\n\r\n    const handleAddTestCase = (testCase) => {\r\n        const preparedTestCase = {\r\n            testData: testCase.input,\r\n            expectedResult: testCase.output,\r\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\r\n        }\r\n        setTestCases([\r\n            ...testCases,\r\n            preparedTestCase\r\n        ])\r\n    }\r\n\r\n    const handleDelete = (testCase) => {\r\n        setTestCases(\r\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\r\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\r\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\r\n                <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                          <TableCell>Test Case Id</TableCell>\r\n                          <TableCell>Input</TableCell>\r\n                          <TableCell>Expected Output</TableCell>\r\n                          <TableCell>Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {testCases.map(testCase => (\r\n                            <TableRow key={testCase.testCaseId}>\r\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\r\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\r\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton onClick={() => handleDelete(testCase)}>\r\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}","import {FileUpload} from \"../../../commons/FileUpload\";\r\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {ManualTestsCases} from \"./testcases/Manual\";\r\n\r\nexport const AddTests = ({ handleChange }) => {\r\n\r\n    const [view, setView] = useState(null)\r\n\r\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\r\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\r\n\r\n    const handleRadioChange = ({target}) => {\r\n        switch (target.value) {\r\n            case 'manually':\r\n                setView(manualView)\r\n                break;\r\n            case 'file':\r\n                setView(fileUploader)\r\n                break;\r\n            default:\r\n                setView(null)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{minHeight: '60vh'}}>\r\n            <Typography variant=\"h6\">Add tests for your task</Typography>\r\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\r\n                result of code to String</Typography>\r\n            <div style={{margin: '1em'}}/>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexFlow: 'row wrap',\r\n                gap: '10px',\r\n                marginBottom: '1em'\r\n            }}>\r\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\r\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\r\n                </RadioGroup>\r\n            </div>\r\n            {view}\r\n        </div>\r\n    )\r\n}","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {AddDescription} from \"./description/AddDescription\";\r\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\r\nimport {AddTests} from \"./tests/AddTests\";\r\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\r\nimport {encodeBase64} from '../../../utils/hooks/Base64';\r\n\r\nlet task = {id: null}\r\n\r\nconst clearTask = () => task = {id: null}\r\n\r\nconst handleMarkdownChange = ({html, text}) => {\r\n    clearTask()\r\n    task['descriptionFileName'] = 'description.md'\r\n    task['descriptionBase64'] = window.btoa(text)\r\n}\r\n\r\nconst handleTextChange = (text) => {\r\n    clearTask()\r\n    task['descriptionFileName'] = \"description.txt\"\r\n    task['descriptionBase64'] = window.btoa(text)\r\n}\r\n\r\nconst handleFileChangeDescription = async (value) => {\r\n    clearTask()\r\n\r\n    const file = await handleFileChange(value, 'descriptionBase64')\r\n    task['descriptionFileName'] = file.fileName\r\n}\r\n\r\nconst handleFileChangeTests = async (value) => {\r\n    delete task['testsBase64']\r\n    await handleFileChange(value, 'testsBase64')\r\n}\r\n\r\nconst handleFileChange = async (value, key) => {\r\n    const file = {\r\n        fileName: value.name,\r\n        fileBase64: await convertFileToBase64(value)\r\n    }\r\n\r\n    task[key] = file.fileBase64.substring(\r\n        file.fileBase64.indexOf(\"base64\") + 7\r\n    )\r\n    return file\r\n}\r\n\r\nconst basicSwal = {\r\n    title: 'Add task',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#41A317',\r\n    confirmButtonText: 'Next',\r\n    allowOutsideClick: false,\r\n    width: '70%'\r\n}\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport const createTask = (setReload, credentials) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        html: <AddDescription\r\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\r\n    }).then(result => {\r\n        if (result.isConfirmed) {\r\n            createTests(setReload, credentials)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst handleManualTestsChange = (testCases) => {\r\n    delete task['testsBase64']\r\n    task['testsBase64'] = encodeBase64(JSON.stringify(testCases))\r\n}\r\n\r\nconst createTests = (setReload, credentials) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\r\n    }).then(result => {\r\n        if(result.isConfirmed) {\r\n            createTimeLimit(setReload, credentials)\r\n        }\r\n    })\r\n}\r\n\r\nconst createTimeLimit = (setReload, credentials) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        input: 'number',\r\n        text: 'Add time limit'\r\n    }).then(result => {\r\n        if(result.isConfirmed) {\r\n            task['timeLimit'] = Number(result.value)\r\n            create(setReload, credentials)\r\n        }\r\n    })\r\n}\r\n\r\nconst create = (setReload, credentials) => {\r\n    tasksApi.updateTasks(task, credentials, setReload)\r\n}","import {useEffect, useState} from \"react\";\r\nimport {Task} from \"./Task\";\r\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {AddCircleOutline} from \"@material-ui/icons\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {createTask} from \"./createTask\";\r\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\r\n\r\nexport const TasksList = ({ fetchTasks, organizationId }) => {\r\n\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const {getEncodedDevPassword} = useDevPassword()\r\n\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTasks(organizationId, getEncodedDevPassword())\r\n            .then(data => {\r\n                setTasks(data)\r\n            })\r\n    }, [fetchTasks, organizationId, reload])\r\n\r\n    const addTask = () => {\r\n        createTask(setReload, { password: getEncodedDevPassword(), organizationId })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginRight: '5%'}}>\r\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={[]}/>)}\r\n            </div>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                style={{display: \"flex\", alignItems: \"center\"}}\r\n                anchor=\"right\"\r\n            >\r\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\r\n                    <ListItem>\r\n                        <Button onClick={addTask}>\r\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\r\n                        </Button>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","import {useState} from 'react'\r\nimport {Drawer, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport {TasksList} from './tasks/crud/TasksList';\r\nimport {ApplicationsView} from './applications/ApplicationsView'\r\n\r\nexport const DevView = ({ fetchTasks, getApplications, id, mailInBase64 }) => {\r\n\r\n    const [view, setView] = useState('edit')\r\n\r\n    const getView = () => {\r\n        if (view === 'edit') {\r\n            return (\r\n                <TasksList\r\n                    fetchTasks={fetchTasks}\r\n                    organizationId={id}\r\n                />\r\n            )\r\n        } else if (view === 'assign') {\r\n            return (\r\n                <ApplicationsView\r\n                    isHR={false}\r\n                    isDev={true}\r\n                    getApplications={getApplications}\r\n                    mailInBase64={mailInBase64}\r\n                />\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div style={{marginLeft: '10%'}}>\r\n            {getView()}\r\n        </div>\r\n        <Drawer\r\n            open\r\n            variant=\"permanent\"\r\n        >\r\n            <List style={{marginTop: '5em'}}>\r\n                <ListItem button onClick={() => setView('edit')}>\r\n                    <ListItemIcon>\r\n                        <EditIcon size=\"large\" color=\"action\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Edit Tasks\" />\r\n                </ListItem>\r\n                <ListItem button onClick={() => setView('assign')}>\r\n                    <ListItemIcon>\r\n                        <AssignmentIcon size=\"large\" color=\"action\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Assign Task\" />\r\n                </ListItem>\r\n            </List>\r\n        </Drawer>\r\n    </div>\r\n    )\r\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\r\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\r\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\r\nimport {OffersView} from \"../components/offers/list/OffersView\";\r\nimport {offersAPI} from \"./apis/OfferApi\";\r\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\r\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\r\nimport {theme} from \"./theme\";\r\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\r\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\r\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\r\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\r\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\r\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\r\nimport {TaskWrapper} from \"../components/tasks/TaskWrapper\";\r\nimport React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\r\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\r\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\r\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\r\nimport {WithDevPassword} from \"../components/tasks/WithDevPassword\";\r\nimport {ReviewTask} from \"../components/tasks/review/ReviewTask\";\r\nimport {Note} from '../components/notes/Note';\r\nimport {tasksApi} from './apis/tasksAPI'\r\nimport {DevView} from '../components/DevView'\r\n\r\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\r\n    return {\r\n        path,\r\n        style,\r\n        component\r\n    }\r\n}\r\n\r\nconst routes = ([reload, setReload]) => [\r\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\r\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\r\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\r\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\r\n    createRoute(\"/offers\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\r\n    createRoute(\"/offers/:id\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\r\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\r\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\r\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\r\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\r\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\r\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\r\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\r\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\r\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\r\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\r\n    createRoute(\"/register\", <RegistrationRouting />),\r\n    createRoute(\"/tasks/assign/:id/:mailInBase64\", <WithDevPassword WrappedComponent={DevView} wrappedProps={{ fetchTasks: (id, password) => tasksApi.getTasksByOrganization(id, password), getApplications: (organizationId, devMail, devPassword) => applicationsAPI.getApplicationsForDev(organizationId, devMail, devPassword) }} createPassword={(id, password) => `${id}:${password}`} />),\r\n    createRoute('/task/:taskStageUUID', <TaskWrapper />, {}),\r\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\r\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\r\n    createRoute(\"/settings\", <SettingsOverlay />),\r\n    createRoute(\"/tasks/review/:id\", <WithDevPassword WrappedComponent={ReviewTask} wrappedProps={{}} createPassword={(id, password) => `${password}:${id}`} />),\r\n    createRoute(\"/note\", <Note text=\"Note text as we can see\" tags={[\"Applied\", \"Some tag\", \"Some other tag\"]} />),\r\n    createRoute(\"*\", <div>Page</div>)\r\n]\r\n\r\nexport const getRoutes = ([reload, setReload]) => {\r\n    return routes([reload, setReload]).map((route, idx) => {\r\n        return (\r\n            <Route exact path={route.path} key={`${idx}`}>\r\n                <div style={route.style}>\r\n                    {route.component}\r\n                </div>\r\n            </Route>\r\n        )\r\n    })\r\n}","import React, {useState} from 'react';\r\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\r\nimport './App.css'\r\nimport {ThemeProvider} from '@material-ui/styles';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {theme} from \"./utils/theme\"\r\nimport {getRoutes} from \"./utils/routes\";\r\n\r\nfunction App() {\r\n\r\n    const [reload, setReload] = useState(false)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n          <Navbar />\r\n          <Switch>\r\n              {getRoutes([reload, setReload])}\r\n          </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}