{"version":3,"sources":["utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","test/utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/chekedFetch.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/tasksAPI.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/commons/formsCommons/WithSwal.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/offers/filter/AutocompleteFilter.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageEndDate.js","components/process/manage/ManageProcess.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/crud/Task.js","components/commons/MarkdownEditor.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/AddDeadline.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/tasks/TasksViewWrapper.js","utils/hooks/useDevPassword.js","test/DummyValues.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","meetingOrganizerLink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","Promise","resolve","setTimeout","text","ok","jwtAPI","userId","refreshToken","refreshApiPath","localStorage","setItem","get","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","getItem","getRefreshToken","deleteAuthToken","removeItem","deleteRefreshToken","undefined","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","history","useHistory","useState","loggedIn","setLoggedIn","window","location","reload","logout","push","filterTypes","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","string","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","textDecoration","Typography","variant","Button","createTheme","status","danger","main","success","secondary","card","light","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","data","selected","idx","selectedStyle","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","handleSelect","item","overflowY","map","getListItems","OffersList","onSelectedOffer","handleShortOfferSelect","defaultProps","checkedFetch","url","error","withSwal","Error","checkResponseStatusOrThrowError","catch","err","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","offersAPI","getOfferById","offerId","json","Swal","fire","title","icon","getAllOffers","applyWithNoUser","surname","files","create","offerData","update","applyWithUser","offerID","getOffersFromHr","getOffersFromOrganization","deleteOffer","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","Grid","container","spacing","margin","xs","md","sm","src","Image1","alt","Image2","Image3","interviewAPI","interviewId","reject","applicationId","MeetingFab","mainButtonStyles","onDefaultView","onWhiteboard","onTask","fallbackTask","descriptionBase64","descriptionFileName","testsBase64","timeLimit","tasksApi","getTask","processId","showLoading","close","_","codeCheckerLink","sendTestResult","task","ably","Realtime","process","uuid","TaskWrapper","propId","toSolveTask","submitLeftOffset","useParams","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","fetchTasks","NaN","outerMonacoWrapperStyle","codeCheckerBaseLink","absoluteOffset","settings","top","right","submit","left","outerOnSubmit","sharingCodeFunctions","JitsiWrapper","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","getWhiteboardCode","roomName","client_id","code","overflow","admin","displayName","MeetingDisplayNameForm","setName","mt","mb","m","TextField","onChange","target","label","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","companyId","isFetching","setIsFetching","Fetched","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","result","Math","floor","isStatus2xx","message","swalResult","isConfirmed","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","padding","paddingTop","paddingBottom","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","file","setFile","classes","handleClose","Dialog","onClose","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","fileName","DialogActions","disabled","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","fileBase64","newFiles","oldFiles","concat","handleDeleteFile","ind","helperText","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","border","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","OfferDetails","component","flexWrap","buttons","button","mr","ml","action","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","AutocompleteFilter","Autocomplete","options","onSelect","renderInput","params","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","fixedOffers","companyOptions","Set","positionOptions","screen","calculateWidth","toggleDrawer","fontSize","bottom","onFilterSubmitted","ActiveFilter","Chip","onDelete","avatar","Filter","setFilters","handleFilterDelete","newFilters","reloadOffers","Drawer","anchor","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","List","ListItem","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","view","OffersView","selectedOffer","setSelectedOffer","setFixedOffers","setSort","handleFilterSubmitted","getOffers","layoutInternalView","offersList","UnauthenticatedPage","withUserAuth","WrappedComponent","permittedTypes","wrappedProps","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","paper","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","convertFileToBase64","reader","FileReader","readAsDataURL","onload","onerror","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","boxShadow","shadows","GenericFileViewer","txt","setTxt","indexOf","File","Modal","getViewer","FileViewerWrapper","undecodedFile","applicationsAPI","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","items","changeEndDate","date","preparedDate","this","_prepareDate","getDate","getMonth","getFullYear","ApplicationDetails","isHR","rejectApplication","showCancelButton","cancelButtonText","nextStage","getDisabled","teleportToMO","flexDirection","offerName","applicationDate","seekerFiles","EmptyApplicationsView","Image","ApplicationsView","getApplications","selectedApplication","setSelectedApplication","setApplications","fetching","setFetching","setReload","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","handleSubmit","control","reset","rules","required","some","s","defaultValue","form","lg","onSkillDelete","OfferForm","mode","watch","trigger","updateOffer","formResult","parseInt","creatorId","autoComplete","pattern","multiline","minRows","maxRows","ManageStages","setStages","possibleStages","setPossibleStages","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageEndDate","processStartDate","ManageProcess","setProcess","selectedEndDate","setSelectedEndDate","endDate","flexGrow","startDate","html","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","handleChange","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","TasksPassword","setPassword","onKeyPress","preventDefault","useKeyPress","CardActions","Task","tasksOperations","menuAnchor","setMenuAnchor","deadline","toLocaleString","Menu","keepMounted","MarkdownEditor","renderHTML","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","flexFlow","gap","labelPlacement","Form","addTestCase","testCase","setTestCase","input","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testData","expectedResult","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","AddDeadline","setSelectedDate","resetValidationMessage","showValidationMessage","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","tasks","createTimeLimit","createDeadline","updateTasks","TasksList","setTasks","deleteTask","createTask","AddCircleOutline","TasksViewWrapper","organizationId","devPasswordKey","sessionStorage","set","useDevPassword","MeetingOrganizerWrapper","propType","paramType","meetingUUID","setMeetingUUID","userData","onPickSlotByJobSeeker","slot","meetingOrganizerBaseLink","outsideJwt","outerFunctions","drawerStyle","outsideMeetingUUID","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","base64","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","state","React","subPage","clone","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","createRoute","path","routes","getRoutes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.835af69a.chunk.js","sourcesContent":["export const constants = {\n    navbar_height: \"60px\"\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","// export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({text: \"ok\", ok: true})\n            }, 2000)\n        })\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {loginAPI} from \"./LoginAPI\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        fetch(\n        recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n        {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        ).then(\n            response => {\n                localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\n                return response;\n            }\n        )\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import {jwtUtils} from \"../jwt/jwtUtils\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {loginAPI} from \"../apis/LoginAPI\";\n\nexport const useLoggedIn = () => {\n    const history = useHistory()\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\n\n    const logout = () => {\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n        setLoggedIn(false)\n        history.push(\"/\")\n        window.location.reload()\n    }\n\n    const login = () => {\n        setLoggedIn(true)\n        window.location.reload()\n    }\n\n    return { loggedIn, login, logout }\n}","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const userMenuTabs = {\n    PROFILE: \"profile\",\n    SETTINGS: \"settings\",\n    FILES: \"files\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import React, {useState} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport {userTypes} from \"../../utils/Enums\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    purple0: {\n        backgroundColor: deepPurple[300],\n        color: theme.palette.getContrastText(deepPurple[300])\n    },\n    purple1: {\n        backgroundColor: deepPurple[200],\n        color: theme.palette.getContrastText(deepPurple[100])\n    },\n    pink0: {\n        backgroundColor: \"#b53387\",\n        color: theme.palette.getContrastText(\"#b53387\")\n    },\n    green0: {\n        backgroundColor: \"#0c4f06\",\n        color: theme.palette.getContrastText(\"#0c4f06\")\n    },\n    red0: {\n        backgroundColor: \"#de2618\",\n        color: theme.palette.getContrastText(\"#de2618\")\n    },\n    red1: {\n        backgroundColor: \"#9c0a00\",\n        color: theme.palette.getContrastText(\"#9c0a00\")\n    },\n    orange0: {\n        backgroundColor: deepOrange[500],\n        color: theme.palette.getContrastText(deepOrange[500])\n    },\n    orange1: {\n        backgroundColor: deepOrange[300],\n        color: theme.palette.getContrastText(deepOrange[300])\n    },\n    orange2: {\n        backgroundColor: deepOrange[200],\n        color: theme.palette.getContrastText(deepOrange[200])\n    },\n}))\n\nexport default function UserMenu(props) {\n    const styles = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [direction, setDirection] = useState(null);\n    const [open, setOpen] = useState(false);\n    const {logout} = useLoggedIn()\n\n    const user = jwtUtils.getUser()\n\n    const colors = Object.values(styles)\n\n    const stringToColor = (string) => {\n        let hash = 0;\n\n        for (let i = 0; i < string.length; i += 1) {\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\n        }\n\n        return colors[hash % colors.length];\n    }\n\n    const userAvatar = (user) => {\n        return {\n            className: stringToColor(user.firstName+user.lastName+user.mail),\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\n        };\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChoice = (direction) => {\n        setAnchorEl(null);\n        setDirection(direction);\n    };\n\n    const redirect = (direction) => {\n        return <Redirect to={direction} />\n    }\n\n    return <>\n        {direction ? <>\n            {redirect(direction)}\n            <UserMenu {...props} />\n        </> : <div style={props.style}>\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n                <IconButton style={props.style} onClick={handleClick}>\n                    <Avatar {...userAvatar(jwtUtils.getUser())} />\n                </IconButton>\n            </Box>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper>\n                        <MenuList\n                            id=\"user-menu\"\n                            open={Boolean(anchorEl)}\n                        >\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\n                                Company's offers\n                            </MenuItem>}\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\n                                Company's partners\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\n                                My offers\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\n                                Create offer\n                            </MenuItem>}\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\n                                My applications\n                            </MenuItem>}\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\n                            <MenuItem onClick={() => {\n                                handleChoice(\"/\")\n                                logout()\n                            }}>Logout</MenuItem>\n                        </MenuList>\n                    </Paper>\n                </ClickAwayListener>\n            </Popover>\n        </div>}\n    </>\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nexport const Navbar = () => {\n\n    const {loggedIn} = useLoggedIn()\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Typography variant=\"h6\">\n                        e-Stella\n                    </Typography>\n                </Link>\n            </div>\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">All Offers</Button>\n                </Link>\n            </div>\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>}\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    status: {\n        danger: {\n            main: '#d32f2f'\n        },\n        success: {\n            main: '#388e3c'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#f8f7f5'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        default:\n            return () => true\n    }\n}\n\nexport const filterOffers = (offers, filters) => {\n    let tmpOffers = offers\n    filters.forEach(filter => {\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\n    })\n    return tmpOffers\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import React, {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        if(isSelectable) {\n            setSelectedIdx(idx)\n            propsHandleSelect(item, idx)\n            scrollToTop()\n        }\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => {\n                return selectedIdx === idx ?\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected data={extractData(item)} />\n                    : <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)} data={extractData(item)}\n                                selected={false} />\n            })\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\nimport React from \"react\";\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer) => {\n        if(props.onSelectedOffer) {\n            props.onSelectedOffer(offer)\n            scrollToTop()\n        }\n    }\n\n    return (\n        <ListWithSelection\n            listItems={offers}\n            extractData={getData}\n            limit={props.limit}\n            propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n            isSelectable={!!props.onSelectedOffer}\n        />\n    )\n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","const checkResponseStatusOrThrowError = (response, error) => {\n    if(response.status < 200 || response.status > 299)\n        throw error || Error(\"Something went wrong\")\n}\n\nexport const checkedFetch = (url, data, error, withSwal) => {\n    return fetch(url, data)\n        .then(response => {\n            checkResponseStatusOrThrowError(response, error)\n            return response\n        }).catch(err => {throw new Error()})\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\n\nexport const authFetch = (url, data, error) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, error)\n        .catch(() => jwtUtils.refreshToken().then(() => {\n            authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n            return checkedFetch(url, authData).catch(() => {\n                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                localStorage.removeItem(loginAPI.authTokenStorageKey)\n                window.location.reload()\n            })\n        }))\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport Swal from \"sweetalert2\";\nimport {headers} from \"./headers\";\nimport {authFetch} from \"../authFetch\";\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get this offer!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    getAllOffers: function(){\n        return fetch(recruitmentServiceBasicAPILink + \"/api/offers\")\n            .then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: files\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID, files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                files: files\n            })\n        })\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    getOffersFromOrganization() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\"\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    deleteOffer(id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userTypes} from \"../../utils/Enums\";\n\nconst LandingOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI.getAllOffers().then(data => setOffers(data || []));\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Latest Offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n            See more!\n        </Button>\n    </>\n}\n\nconst LandingHrOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI.getOffersFromHr().then(data => setOffers(data || []));\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\n            Go to your offers\n        </Button>\n    </>\n}\n\nconst LandingOrganizationOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI.getOffersFromOrganization().then(data => setOffers(data || []));\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\n            Go to organization's offers\n        </Button>\n    </>\n}\n\nconst LandingList = () => {\n    const userType = jwtUtils.getUser()?.userType\n\n    switch (userType) {\n        case userTypes.HR:\n            return <LandingHrOffers />\n        case userTypes.ORGANIZATION:\n            return <LandingOrganizationOffers />\n        default:\n            return <LandingOffers />\n    }\n}\n\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\n    <Grid item xs={12} md={8}>\n        <Typography variant=\"h4\">\n            e-Stella - Everything you'll ever need\n        </Typography>\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n            </Grid>\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\n                <Grid item>\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n                <Grid item>\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n    <Grid item xs={12} md={4}>\n        <LandingList />\n    </Grid>\n</Grid>\n","import {authFetch} from \"../authFetch\";\nimport {meetingOrganizerLink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : function(interviewId) {\n        return new Promise((resolve, reject) => {\n            resolve({text: \"ok\", ok: true, name: 'Waiting for endpoint'})\n        })\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(meetingOrganizerLink + `api/interview/newest/${applicationId}`, {}, Error(\"Couldn't find interview for this application\"))\n            .then(response => response.json())\n    }\n\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = (props) => {\n\n    const theme = useTheme()\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            <Action\n                text=\"Default View\"\n                onClick={props.onDefaultView}\n            >\n                <VoiceChatIcon />\n            </Action>\n            <Action\n                text=\"Whiteboard\"\n                onClick={props.onWhiteboard}\n            >\n                <DashboardIcon />\n            </Action>\n            <Action\n                text=\"Task\"\n                onClick={props.onTask}\n            >\n                <AssignmentIndIcon />\n            </Action>\n        </Fab>\n    )\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport { checkedFetch } from '../chekedFetch'\n\nconst fallbackTask = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(_ => fallbackTask)\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    sendTestResult: (body) => {\n        return fetch(`${recruitmentServiceBasicAPILink}/api/tasks/taskResult?taskId=${body.task.id}&processId=${body.id}`,{\n            method: \"POST\",\n            body: JSON.stringify(body)\n        })\n    }\n\n}","import { Realtime } from \"ably/browser/static/ably-commonjs.js\"\nimport { v4 as uuid } from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {CodeEditor} from 'e-stella-code-editor'\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useParams} from \"react-router-dom\";\nimport {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\n\nexport const TaskWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0 }) => {\n\n    let { id } = useParams()\n\n    if(!id) id = propId\n\n    const { pub, sub, clientId } = useAbly(`codeChanged/${id}`)\n\n    const fetchTasks = toSolveTask ? () => tasksApi.getTask(id || NaN) : () => new Promise(_ => {})\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return (\n        <div>\n            <CodeEditor\n                codeCheckerBaseLink={codeCheckerLink}\n                fetchTasks={fetchTasks}\n                absoluteOffset={{settings: { top: 3, right: 0 }, submit: {top: 3, left: submitLeftOffset}}}\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n                //To test this\n                outerOnSubmit={(body) => tasksApi.sendTestResult({...body, id: id})}\n                sharingCodeFunctions={{ pub, sub, id: clientId }}\n             />\n        </div>\n    )\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {TaskWrapper} from \"../../tasks/TaskWrapper\";\n\nexport const JitsiWrapper = (props) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <TaskWrapper id={16} submitLeftOffset={'25%'}/>\n            </div>\n        )\n    }\n\n    const getWhiteboardCode = () => {\n        if (props.roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return props.roomName\n    }\n\n    return (\n        <div>\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={props.admin} roomName={props.roomName} displayName={props.displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\n\nexport const MeetingDisplayName = (props) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\n            <JitsiWrapper admin={true} roomName={props.roomName} displayName={shouldDisplayForm.name}/>\n    }\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(data?.name)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"}/>\n    )\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message || \"Something went wrong!\")\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle,\n                text: errorSwalText || err,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {useDropzone} from \"react-dropzone\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\n\nconst FilesDropzone = ({onDrop}) => {\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\n    return <Paper style={{\n        padding: \"2em\",\n        paddingTop: \"4em\",\n        paddingBottom: \"4em\",\n        backgroundColor: color,\n        justifyContent: \"center\",\n        display: \"flex\"\n    }} {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n            isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Drag and drop files here, or click to select them</p>\n        }\n    </Paper>\n}\n\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const jobSeekerAPI = {\n\n    getJobSeeker: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    getFiles: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    insertFiles: function(files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({files: files})\n        })\n    }\n}","import Swal from \"sweetalert2\";\nimport {useParams} from \"react-router-dom\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    }\n}));\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\n    const [file, setFile] = useState(null)\n\n    const classes = useStyles()\n\n    const handleChange = (event) => {\n        setFile(event.target.value)\n    }\n\n    const handleClose = () => {\n        setFile(null)\n        setOpen(false)\n    }\n\n    const handleSave = () => {\n        onSave(file)\n        setFile(null)\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Select file to attach</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={file}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={null}>\n                                    <em>None</em>\n                                </MenuItem>\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst FileCard = ({file, index, handleDelete}) => {\n    return <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </Paper>\n}\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n\n    const {loggedIn} = useLoggedIn()\n    const user = jwtUtils.getUser()\n\n    const [name, setName] = useState(user?.firstName || \"\")\n    const [surname, setSurname] = useState(user?.lastName || \"\")\n    const [email, setEmail] = useState(user?.mail || \"\")\n    const [files, setFiles] = useState([])\n    const [loadedFiles, setLoadedFiles] = useState([])\n    const [open, setOpen] = useState(false)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    useEffect(() => {\n        if(loggedIn)\n            jobSeekerAPI.getFiles().then(files => {\n                setLoadedFiles(files)\n            })\n    }, [])\n\n    const apply = () => {\n        if (validate()) {\n            if (files === []) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else {\n                validatedApply(files)\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        withSwal({\n            loadingTitle: \"Applying\",\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully applied for this offer!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't process your application for this offer\",\n        })\n    }\n\n    const validate = () => {\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    const handleDeleteFile = (index) => {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const onAttachFile = (newFile) => {\n        setFiles(oldFiles => oldFiles.concat([newFile]))\n    }\n\n    return (\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\n                <Button style={{height: \"100%\"}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={handleClickOpen}\n                        fullWidth>\n                    Attach saved file\n                </Button>\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\n            </Grid>}\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\n            </Grid>)}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item md={9} xs={false} />\n            <Grid item md={3} xs={12}>\n                <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={apply}\n                        fullWidth>\n                    Apply\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport React from \"react\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return <div>\n        <Card variant=\"outlined\"\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n            {cardContent}\n        </Card>\n    </div>\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                <div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                    {props.buttons.map(button => {\n                        return <Box key={button.text} mr={1} ml={1}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                        </Box>\n                    })}\n\n                </div>\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`)\n    }]\n}\n","import React from \"react\";\n\nexport const PickUpOffer = () =>\n    <div>\n        Pick up offer\n    </div>","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const AutocompleteFilter = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={props.options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\n        />\n    )\n}\n\nAutocompleteFilter.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"./EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../../utils/Enums\";\nimport {getFilterValueByType} from \"../../../utils/functions\";\nimport {AutocompleteFilter} from \"./AutocompleteFilter\";\n\nexport const InDrawerFilter = (props) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        props.toggleDrawer()\n        props.onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <AutocompleteFilter options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <AutocompleteFilter options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\n\nexport const ActiveFilter = (props) => {\n\n    return (\n        <Grid item>\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\n                {getIconFromFilterType(props.filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {InDrawerFilter} from \"./InDrawerFilter\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = (props) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        props.onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        props.reloadOffers(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\n                                fixedOffers={props.fixedOffers}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    fixedOffers: PropTypes.array.isRequired,\n    reloadOffers: PropTypes.func.isRequired\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {useParams} from \"react-router-dom\";\nimport {Filter} from \"../filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterOffers} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n    const offersList = <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return offers == null ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter offers={offers}\n                            onFilterSubmitted={handleFilterSubmitted}\n                            fixedOffers={fixedOffers}\n                            reloadOffers={handleFilterSubmitted} />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView} list={offersList} />}\n        />\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        }\n    },\n    {\n        text: \"Delete\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.go(0),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        }\n    },\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        }\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        }\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\n\nexport const ApplicationsList = ({applications, onSelectedApplication}) => {\n\n    const extractData = (application) => {\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: application\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return (\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n            isSelectable={!!onSelectedApplication}\n        />\n    )\n}","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {method: \"PUT\"})\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get this process!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    getAllPossibleStages: function() {\n        return fetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get possible stages!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this._prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    _prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const ApplicationDetails = ({application, isHR, reload}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={`${idx}`} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id).then(_ => reload()),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        history.push(`/meeting/organizer/${application.id}`)\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI._prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        <Grid item xs={4}><Button color=\"secondary\" variant=\"outlined\" onClick={teleportToMO}>Plan meeting</Button></Grid>\n                        <Grid item xs={12}>\n                            {/*  Notes about candidate in future  */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    Next Stage\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import {useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const ApplicationsView = ({getApplications, isHR}) => {\n\n    const {id} = useParams()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id)\n            .then(data => {\n                setApplications(data)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => setFetching(false))\n    }, [setApplications, getApplications, id, reload])\n\n    return (\n        <>\n            {\n                fetching ? <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}><CircularProgress size={100} /></div>\n                    :\n                applications?.length !== 0 && applications !== undefined ?\n                <StandardViewAndFilterLayout\n                    filter={null}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <ApplicationDetails application={selectedApplication} isHR={isHR} reload={() => setReload(!reload)} /> :\n                                <div>Select application</div>}\n                            list={<ApplicationsList\n                                applications={applications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                /> : <EmptyApplicationsView isHR={isHR} />\n            }\n        </>\n    )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\nimport React from \"react\";\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                color=\"secondary\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {useParams} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => reset(),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\n        <Grid container spacing={2}>\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    minRows: 8,\n                    maxRows: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        form=\"offer-form\"\n                        color=\"primary\"\n                        fullWidth>\n                    Save offer\n                </Button>\n            </Grid>\n        </Grid></div>\n}\n","import {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n    }, [processId])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        withSwal({\n            loadingTitle: \"Updating stages\",\n            promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n            successSwalTitle: \"Stages Updated\"\n        })\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return (\n        <TwoColumnDnD\n            firstListItems={getStages()}\n            secondListItems={getPossibleStages()}\n            forbiddenIndexes={[0, getStages()?.length]}\n            warningFunction={() => fireSwal(\n                \"You can't do this!\",\n                \"We're sorry, but you cannot set this stage here! See help for more information.\",\n                \"warning\"\n            )}\n            itemRender={(item) => (\n                <Box m={1}>\n                    <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                        <CardContent>\n                            <Typography>{item.type}</Typography>\n                        </CardContent>\n                    </Card>\n                </Box>\n            )}\n            onSubmit={(first, _) => handleSubmit(first)}\n            leftSubmitGridProps={{xs: 10}}\n            centerSubmitGridProps={{xs: 1}}\n            rightSubmitGridProps={{xs: 1}}\n            materialButtonProps={{variant: \"outlined\"}}\n            submitDivStyle={{marginTop: \"15px\"}}\n            listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n        />\n    )\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageEndDate = ({selectedDate, onChange, processStartDate}) => {\n\n    const handleDateChange = (date) => {\n        if (date > new Date(processStartDate)) {\n            onChange(date)\n        } else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than start date!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n        />\n}\n\nManageEndDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageStages} from \"./ManageStages\";\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport {ManageEndDate} from \"./ManageEndDate\";\nimport {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [process, setProcess] = useState(null)\n    const [selectedEndDate, setSelectedEndDate] = useState(null)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n                setSelectedEndDate(data?.endDate || new Date())\n            })\n    }, [id])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const handleSubmit = () => {\n        withSwal({\n            loadingTitle: \"Updating end date\",\n            promise: () => processAPI.changeEndDate(id, selectedEndDate),\n            successSwalTitle: \"Date updated\"\n        })\n    }\n\n    return (\n        <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid container style={{display: \"flex\", flexGrow: 1}}>\n                            {/*<Grid item>*/}\n                            {/*  Beginning of recruitment process in future maybe  */}\n                            {/*</Grid>*/}\n                            <Grid item>\n                                <ManageEndDate selectedDate={selectedEndDate || new Date()}\n                                               onChange={(date) => setSelectedEndDate(date)}\n                                               processStartDate={process?.startDate}/>\n                            </Grid>\n                        </Grid>\n                        {/*<Grid item>*/}\n                        {/*    In future tasks and quizzes? */}\n                        {/*</Grid>*/}\n                        <Grid item>\n                            <Grid container direction=\"row\">\n                                <Grid item xs={false} sm={6} lg={8}/>\n                                <Grid item xs={12} sm={6} lg={4}>\n                                    <Button onClick={handleSubmit} variant=\"outlined\">Submit</Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid item>\n                            <ManageStages processId={id}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const LoginForm = (props) => {\n\n    const {loggedIn, login} = useLoggedIn()\n\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Logging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                login()\n                props.reload.setReload(!props.reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(props.onSubmit) {\n            props.onSubmit(data)\n        }\n    }\n\n    return loggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <FormField\n                            control={control}\n                            name=\"login\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Login\"\n                            }}\n                        />\n                        <FormField\n                            control={control}\n                            name=\"password\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Password\",\n                                autoComplete: \"off\",\n                                type: \"password\"\n                            }}\n                        />\n                        <Grid item xs={false} sm={8} />\n                        <Grid item xs={12} sm={4}>\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth>Login</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Card>\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const CompanyRegistration = () => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import React, {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = () => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        We need to validate, who you are, so please, provide password from your mail:\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import {Button, Card, CardContent, Divider, Typography, IconButton, Menu, MenuItem} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {theme} from \"../../../test/utils/theme\";\n\nexport const Task = ({task, tasksOperations}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n            <CardContent>\n                <Typography variant=\"h5\">Task: {task.id}</Typography>\n                <Typography variant=\"subtitle1\"\n                            color=\"textSecondary\">Deadline: {new Date(task.deadline).toLocaleString()}</Typography>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                <MenuItem onClick={tasksOperations['delete']} style={{color: theme.status.danger.main}}>Delete</MenuItem>\n            </Menu>\n        </Card>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange }) => {\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} />\n    )\n}\n","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCase(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import {Typography} from \"@material-ui/core\";\nimport {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport {useState} from \"react\";\nimport Swal from 'sweetalert2'\n\nexport const AddDeadline = ({ handleChange }) => {\n\n    const [selectedDate, setSelectedDate] = useState(Date.now())\n\n    const handleDateChange = (date) => {\n        Swal.resetValidationMessage()\n        if(date < Date.now()) {\n            Swal.showValidationMessage(\"If you set deadline earlier than now, nobody will be able to solve this task!\")\n        } else {\n            setSelectedDate(date)\n            handleChange(date)\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add deadline to your task</Typography>\n            <EStellaDatePicker handleDateChange={handleDateChange} selectedDate={selectedDate} label=\"Deadline\"/>\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {AddDeadline} from \"./AddDeadline\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nlet task = {}\n\nconst clearTask = () => task = {}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(tasks, reload, setReload)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n}\n\nconst createTests = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createTimeLimit = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            createDeadline(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createDeadline = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDeadline handleChange={(date) => task['deadline'] = date} />,\n        confirmButtonText: 'Create'\n    }).then(result => {\n        if(result.isConfirmed) {\n            create(tasks, reload, setReload)\n        }\n    })\n}\n\nconst create = (tasks, reload, setReload) => {\n    tasksApi.updateTasks([...tasks, task])\n        .then(_ => setReload(!reload))\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nexport const TasksList = ({ fetchTasks, id }) => {\n\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const addTask = () => {\n        createTask(tasks, reload, setReload)\n    }\n\n    useEffect(() => {\n        fetchTasks(id)\n            .then(data => setTasks(data))\n    }, [fetchTasks, id, reload])\n\n    const deleteTask = (id) => {\n        tasksApi.updateTasks(tasks.filter(task => task.id !== id))\n            .then(_ => setReload(!reload))\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginLeft: '20%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={{ 'delete': () => deleteTask(task?.id) }}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","import {useParams} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {TasksPassword} from \"./TasksPassword\";\nimport {TasksList} from \"./crud/TasksList\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\n\nexport const TasksViewWrapper = ({ fetchTasks }) => {\n    const {organizationId} = useParams()\n\n    const [password, setPassword] = useState(\"\")\n    const { set } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        set(`${organizationId}.${password}`)\n        setPassword(password)\n    }\n\n    return !!password ? <TasksList fetchTasks={fetchTasks} id={organizationId}/> : <TasksPassword handleSubmit={handleSubmit}/>\n}\n","export const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const set = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const get = () => sessionStorage.getItem(devPasswordKey)\n\n    return {get, set}\n\n}","export const offers = [\n    {\n        id: 20,\n        name: \"Centurion\",\n        description: \"Join IX Legion. Join conquering the Great Britain\",\n        position: \"Centurion\",\n        minSalary: 10000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 18,\n        name: \"Project Manager\",\n        description: \"Be manager of your life\",\n        position: \"Senior developer Java\",\n        minSalary: 15000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 17,\n        name: \"Senior developer Java\",\n        description: \"Master Java developer\",\n        position: \"Senior developer Java\",\n        minSalary: 25000,\n        maxSalary: 30000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 16,\n        name: \"Software Engineer Intern\",\n        description: \"The best offer of your live\",\n        position: \"Software Engineer Intern\",\n        minSalary: 3000,\n        maxSalary: 3500,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    }\n]\n\nexport const getApplications = () => {\n    return new Promise((resolve, reject) => {\n        resolve([\n            {\n                \"id\": 72,\n                \"applicationDate\": \"2021-08-04\",\n                \"status\": \"IN_PROGRESS\",\n                \"stage\": {\"id\": 40, \"type\": \"ENDED\"},\n                \"jobSeeker\": {\n                    \"id\": 71,\n                    \"user\": {\"id\": 71, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.com\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            },\n            {\n                \"id\": 92,\n                \"applicationDate\": \"2021-08-10\",\n                \"status\": \"ACCEPTED\",\n                \"stage\": {\"id\": 88, \"type\": \"APPLIED\"},\n                \"jobSeeker\": {\n                    \"id\": 89,\n                    \"user\": {\"id\": 89, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.testcom\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            }\n        ])\n    })\n}\n\nexport const tasks = [\n    {\n        id: 1,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.md\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 30,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    },\n    {\n        id: 2,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.txt\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 60,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    }\n]\n\nexport const getTasks = () =>\n    new Promise(resolve => {\n        resolve(tasks)\n    })","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [meetingUUID, setMeetingUUID] = useState(\"\")\n\n    const type = paramType || propType\n\n    const userData = {\n        userType: type,\n        uuid: uuid\n    }\n\n    const onPickSlotByJobSeeker = userData.userType === \"job_seeker\" ? (slot) => console.log(slot) : () => {}\n\n    useEffect(() => {\n        if(userData.userType === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    setMeetingUUID(data?.meetingUUID)\n                })\n        }\n    }, [type, uuid])\n\n    return <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                             userData={userData}\n                             outsideJwt={jwtUtils.getAuthToken()}\n                             outerFunctions={{ 'onPickSlot': onPickSlotByJobSeeker }}\n                             drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}} outsideMeetingUUID={meetingUUID} />\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {hrOfferButtons} from \"../HrOfferButtons\";\nimport {theme} from \"../../../test/utils/theme\";\nimport {OffersView} from \"./OffersView\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst marginWithDrawer = \"100px\"\n\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\n    <OffersView\n        getOffers={() => offersAPI.getOffersFromHr()}\n        buttons={hrOfferButtons(theme)}\n    />\n    <Drawer\n        variant=\"permanent\"\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\n    >\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n            <ListItem>\n                <Link to=\"/hr/offers/add\">\n                    <IconButton>\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                    </IconButton>\n                </Link>\n            </ListItem>\n        </List>\n    </Drawer>\n</div>\n\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Box from \"@material-ui/core/Box\";\nimport FilesDropzone from \"./FilesDropzone\";\n\nfunction _base64ToArrayBuffer(base64) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst FilesChangedTip = ({onSaveFiles}) =>\n    <Paper elevation={0} variant=\"outlined\" style={{\n        padding: \"1em\",\n        paddingLeft: \"1em\",\n        backgroundColor: deepOrange[100],\n        display: \"flex\"\n    }}>\n        <Grid container>\n            <Grid item xs={12} md={9} lg={12}>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    height=\"100%\"\n                >\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={12}>\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\n            </Grid>\n        </Grid>\n    </Paper>\n\nconst OldFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\n\nconst NewFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\n    const ch = <>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\n            >\n                <GetAppOutlined/>\n            </IconButton>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </>\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n        {initialFiles.some(a => a.id === file.id) ?\n            <OldFilePaper>{ch}</OldFilePaper>:\n            <NewFilePaper>{ch}</NewFilePaper>}\n    </Grid>\n}\n\nexport const FilesPage = () => {\n    const [downloadedFiles, setDownloadedFiles] = useState([])\n    const [files, setFiles] = useState([])\n\n\n    const downloadedFilesSet = new Set(downloadedFiles)\n    const filesSet = new Set(files)\n\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\n\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\n        f.sort((a, b) => a.id - b.id)\n        setDownloadedFiles(f)\n        setFiles(f)\n    })\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    useEffect(\n        fetchFiles,\n    []\n    )\n\n    function handleDownload(fileName, base64) {\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    function handleDelete(index) {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    function onSaveFiles() {\n        withSwal({\n            title: \"Saving files\",\n            promise: () => jobSeekerAPI.insertFiles(files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved your files!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't save these files for you\",\n            successFunction: fetchFiles\n        })\n    }\n\n    return <div>\n        <Grid container spacing={2}>\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\n                </Grid>\n                {files.map((value, index) =>\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\n                )}\n            </Grid>\n            <Grid item xs={false} md={6} lg={10} />\n            <Grid item xs={12} md={6} lg={2}>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {userTypes} from \"../../utils/Enums\";\n\n\nfunction UserInfo({label, value}) {\n    return <><Grid item xs={12} sm={3}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\n    </Grid>\n    <Grid item xs={12} sm={9}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\n    </Grid></>\n}\n\nfunction displayType(userType) {\n    switch (userType) {\n        case userTypes.JOB_SEEKER:\n            return \"Candidate\"\n\n        case userTypes.HR:\n            return \"Human Resources Specialist\"\n\n        case userTypes.ORGANIZATION:\n            return \"Organization\"\n\n        default:\n            return undefined\n    }\n}\n\nexport const ProfilePage = () => {\n    const user = jwtUtils.getUser()\n    return <Grid container>\n        <Grid item lg={2} md={1} sm={false}/>\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\n            <UserInfo label=\"ID:\" value={user.userId} />\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\n            <UserInfo label=\"Mail:\" value={user.mail} />\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\n        </Grid>\n        <Grid item lg={2} md={1} sm={false}/>\n    </Grid>\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const userAPI = {\n\n    updateUser: function (userRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userRequest)\n        })\n    },\n\n    updatePersonalData: function (personalData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(personalData)\n        })\n    },\n\n    updatePassword: function (passwordRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(passwordRequest)\n        })\n    }\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../commons/formsCommons/FormField\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useEffect} from \"react\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userAPI} from \"../../utils/apis/UserAPI\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst EditPersonalInfoForm = () => {\n    const user = jwtUtils.getUser()\n    const defaultFormState = {\n        mail: user.mail,\n        firstName: user.firstName,\n        lastName: user.lastName\n    }\n\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = ({firstName, lastName}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\n            successSwalTitle: \"Successful change!\",\n            errorSwalTitle: \"We couldn't change your personal data!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"mail\"\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Email\",\n                                disabled: true\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"firstName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"First Name\",\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"lastName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Last Name\",\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nconst EditPasswordForm = () => {\n    const defaultFormState = {\n        oldPassword: \"\",\n        newPassword: \"\",\n        repeatedPassword: \"\"\n    }\n\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const newPasswordInput = watch(\"newPassword\")\n\n    useEffect(\n        () => {\n            if(newPasswordInput)\n                trigger(\"repeatedPassword\")\n        },\n        [newPasswordInput, trigger]\n    )\n\n    const onSubmit = ({oldPassword, newPassword}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\n            successSwalTitle: \"Successfully changed password!\",\n            errorSwalTitle: \"We couldn't change your password!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"oldPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Current password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"newPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"New password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"repeatedPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Repeat password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nexport const SettingsPage = () => {\n    return <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <EditPersonalInfoForm />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <EditPasswordForm />\n            </Grid>\n        </Grid>\n    </>\n}","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid} from \"@material-ui/core\";\nimport {FilesPage} from \"./FilesPage\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\nimport {ProfilePage} from \"./ProfilePage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction TabPanel({ children, value, tabName, ...other }) {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== tabName}\n            id={`tabpanel-${tabName}`}\n            aria-labelledby={`tab-${tabName}`}\n            style={{padding: \"1em\", color: \"primary\"}}\n            {...other}\n        >\n            {value === tabName && <Box>{children}</Box>}\n        </div>\n    );\n}\n\nfunction a11yProps(tabName) {\n    return {\n        id: `tab-${tabName}`,\n        'aria-controls': `tabpanel-${tabName}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    indicator: {\n        left: \"0px\"\n    }\n}));\n\nexport default function SettingsOverlay(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const state = props.location?.state\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\n    const user = jwtUtils.getUser();\n\n    const handleChange = (event, newValue) => setValue(newValue)\n\n    return user ? (<Grid container>\n        <Box clone order={{xs: 2, md: 1}}>\n            <Grid item xs={12} md={9} lg={10}>\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\n                    <ProfilePage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\n                    <SettingsPage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\n                    <FilesPage />\n                </TabPanel>\n            </Grid>\n        </Box>\n        <Box clone order={{xs: 1, md: 2}}>\n            <Grid item xs={12} md={3} lg={2}>\n                <Tabs\n                    value={value}\n                    orientation=\"vertical\"\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"settings tabs\"\n                >\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\n                </Tabs>\n            </Grid>\n        </Box>\n        </Grid>) : <Redirect to=\"/\" />;\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            }\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\n\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\n    <Box mt={0} mb={0}>\n        <Grid container>\n            {users.map((user, idx) =>\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                    <Grid container>\n                        <Grid item xs={11}>\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\n                                                 mail={user.mail}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Box mt={3}>\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\n                                    <ClearIcon fontSize=\"medium\"/>\n                                </IconButton>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>)}\n        </Grid>\n    </Box>","import {Grid} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\n\nexport const OrganizationPartnersManagement = (props) => {\n\n    const [users, setUsers] = useState([])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n        organizationsAPI.getHrPartnersByOrganization()\n            .then(data => {\n                updateUsers(data)\n            })\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\n        </Grid>\n    </div>\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"../test/utils/theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {TasksViewWrapper} from \"../components/tasks/TasksViewWrapper\";\nimport {getTasks} from \"../test/DummyValues\";\nimport {TaskWrapper} from \"../components/tasks/TaskWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\n\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={offersAPI.getAllOffers}/>),\n    createRoute(\"/offers/:id\", <OffersView getOffers={offersAPI.getAllOffers}/>),\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/:organizationId\", <TasksViewWrapper fetchTasks={(id) => getTasks(id)} />),\n    createRoute('/task/:id', <TaskWrapper />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\n    createRoute(\"/settings\", <SettingsOverlay />),\n    createRoute(\"*\", <div>Page</div>)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./test/utils/theme\";\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}