{"version":3,"sources":["utils/constants.js","components/navbar/Navbar.js","test/utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/Enums.js","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/schemas/tokenPayloadSchema.js","utils/apis/LoginAPI.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/chekedFetch.js","utils/authFetch.js","utils/apis/files.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/tasksAPI.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/offers/filter/AutocompleteFilter.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/commons/formsCommons/WithSwal.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageEndDate.js","components/process/manage/ManageProcess.js","components/organization/OrganizationPartner.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationsPartnerList.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/crud/Task.js","components/commons/MarkdownEditor.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/AddDeadline.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/tasks/TasksViewWrapper.js","utils/hooks/useDevPassword.js","test/DummyValues.js","components/meeting/preparing/MeetingOrganizerWrapper.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["constants","Navbar","theme","useTheme","AppBar","position","style","background","palette","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","to","color","textDecoration","Typography","variant","Button","id","createTheme","status","danger","main","success","secondary","card","light","focused","filterTypes","compare","a","b","name","offerSort","apply","offers","sort","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","scrollToTop","document","body","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","value","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","data","selected","onClick","idx","selectedStyle","backgroundColor","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","useState","selectedIdx","setSelectedIdx","handleSelect","item","overflowY","map","getListItems","OffersList","props","onSelectedOffer","handleShortOfferSelect","defaultProps","recruitmentServiceBasicAPILink","meetingOrganizerLink","headers","tokenPayloadSchema","firstName","lastName","userType","mail","iss","isNaN","Number","iat","exp","loginAPI","login","password","fetch","method","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","Promise","resolve","setTimeout","text","ok","jwtAPI","userId","refreshToken","refreshApiPath","localStorage","setItem","get","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","getItem","getRefreshToken","deleteAuthToken","removeItem","deleteRefreshToken","undefined","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","checkedFetch","url","error","withSwal","Error","checkResponseStatusOrThrowError","catch","err","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","convertFileToBase64","file","reject","reader","FileReader","readAsDataURL","onload","result","onerror","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","offersAPI","getOfferById","offerId","json","getAllOffers","applyWithNoUser","surname","files","all","fileName","fileBase64","convertedFiles","substring","indexOf","create","offerData","update","applyWithUser","offerID","getOffersFromHr","Swal","fire","title","icon","getOffersFromOrganization","deleteOffer","CenteredCircularProgress","display","justifyContent","CircularProgress","LandingPage","history","useHistory","setOffers","useEffect","Grid","container","spacing","xs","sm","src","Image1","alt","direction","Image2","Image3","size","textAlign","fullWidth","interviewAPI","interviewId","applicationId","MeetingFab","mainButtonStyles","event","onDefaultView","onWhiteboard","onTask","fallbackTask","descriptionBase64","descriptionFileName","testsBase64","timeLimit","tasksApi","getTask","processId","showLoading","close","_","codeCheckerLink","sendTestResult","task","ably","Realtime","process","REACT_APP_ABLY_KEY","uuid","TaskWrapper","propId","toSolveTask","submitLeftOffset","useParams","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","fetchTasks","NaN","outerMonacoWrapperStyle","codeCheckerBaseLink","absoluteOffset","settings","top","right","submit","left","outerOnSubmit","sharingCodeFunctions","JitsiWrapper","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","getWhiteboardCode","roomName","client_id","REACT_APP_WHITEBOARD_KEY","code","overflow","admin","displayName","MeetingDisplayNameForm","setName","Box","mt","mb","m","TextField","onChange","target","label","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","companyId","isFetching","setIsFetching","Fetched","ApplyForm","setSurname","setEmail","setFile","shouldValidateField","setShouldValidateField","validatedApply","swal","confirmButtonText","validate","validateName","validateSurname","helperText","showDenyButton","denyButtonText","isConfirmed","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","border","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","padding","maxHeight","OfferDetails","component","flexWrap","buttons","button","mr","ml","action","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","AutocompleteFilter","Autocomplete","options","onSelect","renderInput","params","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","Math","fixedOffers","companyOptions","Set","positionOptions","window","screen","calculateWidth","toggleDrawer","fontSize","bottom","md","onFilterSubmitted","ActiveFilter","Chip","onDelete","handleDelete","avatar","Avatar","Filter","open","setOpen","setFilters","handleFilterDelete","newFilters","reloadOffers","Drawer","anchor","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","handleClose","Boolean","currentTarget","clickable","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","view","alignItems","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","setFixedOffers","setSort","handleFilterSubmitted","getOffers","layoutInternalView","offersList","UnauthenticatedPage","withUserAuth","WrappedComponent","permittedTypes","wrappedProps","user","loadingTitle","promise","successSwalTitle","successSwalText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","floor","isStatus2xx","message","swalResult","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","useStyles","makeStyles","paper","secondaryTail","ApplicationTimeline","stages","currentStageId","classes","isBeforeCurrent","getTimelineContent","Paper","elevation","className","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","boxShadow","shadows","GenericFileViewer","txt","setTxt","File","Modal","getViewer","FileViewerWrapper","undecodedFile","applicationsAPI","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","items","changeEndDate","date","preparedDate","this","_prepareDate","getDate","getMonth","getFullYear","ApplicationDetails","isHR","reload","rejectApplication","showCancelButton","cancelButtonText","nextStage","getDisabled","teleportToMO","flexDirection","offerName","applicationDate","seekerFiles","disabled","EmptyApplicationsView","Image","ApplicationsView","getApplications","selectedApplication","setSelectedApplication","setApplications","fetching","setFetching","setReload","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","handleSubmit","control","reset","concat","rules","required","some","s","defaultValue","form","FormControl","InputLabel","Select","MenuItem","lg","IconButton","onSkillDelete","OfferForm","creatorId","mode","watch","trigger","updateOffer","paddingBottom","formResult","parseInt","pattern","autoComplete","multiline","rows","rowsMax","ManageStages","setStages","possibleStages","setPossibleStages","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","margin","ManageEndDate","processStartDate","ManageProcess","setProcess","selectedEndDate","setSelectedEndDate","endDate","flexGrow","startDate","html","OrganizationPartner","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationsPartnerList","el","updateUsers","onUserDelete","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","handleChange","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","TasksPassword","setPassword","onKeyPress","preventDefault","useKeyPress","CardActions","Task","tasksOperations","menuAnchor","setMenuAnchor","deadline","toLocaleString","Menu","keepMounted","MarkdownEditor","renderHTML","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","flexFlow","gap","labelPlacement","Form","addTestCase","testCase","setTestCase","input","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testData","expectedResult","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","AddDeadline","setSelectedDate","resetValidationMessage","showValidationMessage","clearTask","handleMarkdownChange","btoa","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","tasks","createTimeLimit","createDeadline","updateTasks","TasksList","setTasks","deleteTask","createTask","AddCircleOutline","TasksViewWrapper","organizationId","devPasswordKey","sessionStorage","set","useDevPassword","MeetingOrganizerWrapper","propType","paramType","meetingUUID","setMeetingUUID","userData","onPickSlotByJobSeeker","slot","meetingOrganizerBaseLink","outsideJwt","outerFunctions","drawerStyle","outsideMeetingUUID","createRoute","path","routes","href","getRoutes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0a4ddd03.chunk.js","sourcesContent":["export const constants = {\n    navbar_height: \"60px\"\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const Navbar = () => {\n\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Typography variant=\"h6\">\n                        e-Stella\n                    </Typography>\n                </Link>\n            </div>\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">Offers</Button>\n                </Link>\n            </div>\n            <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    status: {\n        danger: {\n            main: '#d32f2f'\n        },\n        success: {\n            main: '#388e3c'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#f8f7f5'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import {filterTypes} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        default:\n            return () => true\n    }\n}\n\nexport const filterOffers = (offers, filters) => {\n    let tmpOffers = offers\n    filters.forEach(filter => {\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\n    })\n    return tmpOffers\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        setSelectedIdx(idx)\n        propsHandleSelect(item, idx)\n        scrollToTop()\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => {\n                return selectedIdx === idx ?\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected data={extractData(item)} />\n                    : <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)} data={extractData(item)}\n                                selected={false} />\n            })\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer, idx) => {\n        props.onSelectedOffer(offer)\n        scrollToTop()\n    }\n\n    return (\n        <ListWithSelection\n            listItems={offers}\n            extractData={getData}\n            limit={props.limit}\n            propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n        />\n    )\n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","//export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({text: \"ok\", ok: true})\n            }, 2000)\n        })\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {loginAPI} from \"./LoginAPI\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        fetch(\n        recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n        {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        ).then(\n            response => localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey)\n        ))\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import Swal from \"sweetalert2\";\n\nconst checkResponseStatusOrThrowError = (response, error) => {\n    if(response.status < 200 || response.status > 299)\n        throw error || Error(\"Something went wrong\")\n}\n\nexport const checkedFetch = (url, data, error, withSwal) => {\n    return fetch(url, data)\n        .then(response => {\n            checkResponseStatusOrThrowError(response, error)\n            return response\n        }).catch(err => {throw new Error()})\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\n\nexport const authFetch = (url, data, error) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, error).then(response => {\n        if(response.status >= 200 && response.status < 300)\n            return response\n        else\n            return jwtUtils.refreshToken().then(() => {\n                authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n                return fetch(url, authData)\n            })\n    })\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport Swal from \"sweetalert2\";\nimport {headers} from \"./headers\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {authFetch} from \"../authFetch\";\nimport {convertFileToBase64} from \"./files\";\n\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n    },\n\n    getAllOffers: function(){\n        return fetch(recruitmentServiceBasicAPILink + \"/api/offers\")\n            .then(response => response.json())\n    },\n\n    applyWithNoUser: async function (offerId, name, surname, email, files=[]) {\n        let convertedFiles = await Promise.all(files.map(async file => {\n            return {\n                fileName: file.name,\n                fileBase64: await convertFileToBase64(file)\n            }\n        }))\n        convertedFiles = convertedFiles.map(file => {\n            return {\n                ...file,\n                fileBase64: convertedFiles[0].fileBase64.substring(\n                    convertedFiles[0].fileBase64.indexOf(\"base64\") + 7\n                )\n            }\n        })\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: convertedFiles\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID){\n\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: Object.assign(headers, {\n                \"x-jwt\": jwtUtils.getAuthToken()\n            })\n        }).then(response => response.json())\n            .catch(err => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    getOffersFromOrganization() {\n        return fetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\",\n            headers: Object.assign(headers, {\n                \"x-jwt\": jwtUtils.getAuthToken()\n            })\n        }).then(response => response.json())\n            .catch(err => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    },\n\n    deleteOffer(id) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\n\nexport const LandingPage = () => {\n\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        offersAPI.getAllOffers()\n            .then(data => setOffers(data || []))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    }, [])\n\n    return(\n        <div>\n            <div style={{marginLeft: \"5%\", marginRight:\"auto\", width: \"60%\", float: \"left\"}}>\n                <Typography variant=\"h4\">\n                    e-Stella - Everything you'll ever need\n                </Typography>\n                <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Grid container direction=\"column\" spacing={1}>\n                            <Grid item>\n                                <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                            </Grid>\n                            <Grid item>\n                                <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n            <div style={{width: \"25%\", float: \"left\", marginRight: \"10%\"}}>\n                {offers == null ? <CenteredCircularProgress size={60} /> : <>\n                    <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n                        Latest Offers\n                    </Typography>\n                    <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n                        <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                                    limit={3}\n                                    offers={offers}/>\n                    </div>\n                    <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n                        See more!\n                    </Button>\n                </>}\n            </div>\n        </div>\n    )\n}\n","import {authFetch} from \"../authFetch\";\nimport {meetingOrganizerLink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : function(interviewId) {\n        return new Promise((resolve, reject) => {\n            resolve({text: \"ok\", ok: true, name: 'Waiting for endpoint'})\n        })\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(meetingOrganizerLink + `api/interview/newest/${applicationId}`, {}, Error(\"Couldn't find interview for this application\"))\n            .then(response => response.json())\n    }\n\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = (props) => {\n\n    const theme = useTheme()\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            <Action\n                text=\"Default View\"\n                onClick={props.onDefaultView}\n            >\n                <VoiceChatIcon />\n            </Action>\n            <Action\n                text=\"Whiteboard\"\n                onClick={props.onWhiteboard}\n            >\n                <DashboardIcon />\n            </Action>\n            <Action\n                text=\"Task\"\n                onClick={props.onTask}\n            >\n                <AssignmentIndIcon />\n            </Action>\n        </Fab>\n    )\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport { checkedFetch } from '../chekedFetch'\n\nconst fallbackTask = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(_ => fallbackTask)\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    sendTestResult: (body) => {\n        return fetch(`${recruitmentServiceBasicAPILink}/api/tasks/taskResult?taskId=${body.task.id}&processId=${body.id}`,{\n            method: \"POST\",\n            body: JSON.stringify(body)\n        })\n    }\n\n}","import { Realtime } from \"ably/browser/static/ably-commonjs.js\"\nimport { v4 as uuid } from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {CodeEditor} from 'e-stella-code-editor'\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useParams} from \"react-router-dom\";\nimport {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\n\nexport const TaskWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0 }) => {\n\n    let { id } = useParams()\n\n    if(!id) id = propId\n\n    const { pub, sub, clientId } = useAbly(`codeChanged/${id}`)\n\n    const fetchTasks = toSolveTask ? () => tasksApi.getTask(id || NaN) : () => new Promise(_ => {})\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return (\n        <div>\n            <CodeEditor\n                codeCheckerBaseLink={codeCheckerLink}\n                fetchTasks={fetchTasks}\n                absoluteOffset={{settings: { top: 3, right: 0 }, submit: {top: 3, left: submitLeftOffset}}}\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n                //To test this\n                outerOnSubmit={(body) => tasksApi.sendTestResult({...body, id: id})}\n                sharingCodeFunctions={{ pub, sub, id: clientId }}\n             />\n        </div>\n    )\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {TaskWrapper} from \"../../tasks/TaskWrapper\";\n\nexport const JitsiWrapper = (props) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <TaskWrapper id={16} submitLeftOffset={'25%'}/>\n            </div>\n        )\n    }\n\n    const getWhiteboardCode = () => {\n        if (props.roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return props.roomName\n    }\n\n    return (\n        <div>\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={props.admin} roomName={props.roomName} displayName={props.displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\n\nexport const MeetingDisplayName = (props) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\n            <JitsiWrapper admin={true} roomName={props.roomName} displayName={shouldDisplayForm.name}/>\n    }\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(data?.name)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"}/>\n    )\n}","import Swal from \"sweetalert2\";\nimport {useParams} from \"react-router-dom\";\nimport {Box, Button, TextField, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n    const [name, setName] = useState(\"\")\n    const [surname, setSurname] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [file, setFile] = useState(null)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    const apply = () => {\n        if (validate()) {\n            if (file === null) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else{\n                validatedApply([file])\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        let swal = new Swal({\n            title: \"Applying\"\n        })\n        Swal.showLoading()\n        offersAPI.applyWithNoUser(id, name, surname, email, files)\n            .then((result) => {\n                if(!result.ok) throw Error(\"Something went wrong!\")\n                swal.close()\n                Swal.fire({\n                    title: \"Success\",\n                    text: \"You've successfully applied to this offer!\",\n                    icon: \"success\"\n                })\n            })\n            .catch((err) => {\n                swal.close()\n                Swal.fire({\n                    title: err,\n                    text: \"We couldn't apply you on this offer\",\n                    icon: \"error\",\n                    confirmButtonText: \"ok\"\n                })\n            })\n    }\n\n    const validate = () => {\n            return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    return (\n        <Box style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Box m={4}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                />\n            </Box>\n            <Box m={4}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                />\n            </Box>\n            <Box m={4}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                />\n            </Box>\n            <Box m={4} style={{float: \"right\"}}>\n                <input\n                    onChange={({target}) => setFile(target.files[0])}\n                    type=\"file\"\n                />\n            </Box>\n            <Button variant=\"outlined\" onClick={apply}>\n                <Typography variant=\"h6\">\n                    Apply\n                </Typography>\n            </Button>\n        </Box>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return (\n        <div>\n            <Card variant=\"outlined\"\n                  style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                      marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n                {cardContent}\n            </Card>\n        </div>\n    )\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                <div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                    {props.buttons.map(button => {\n                        return <Box key={button.text} mr={1} ml={1}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                        </Box>\n                    })}\n\n                </div>\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`)\n    }]\n}\n","export const PickUpOffer = (props) => {\n\n    return (\n        <div>\n            Pick up offer\n        </div>\n    )\n}","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const AutocompleteFilter = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={props.options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\n        />\n    )\n}\n\nAutocompleteFilter.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"./EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../../utils/Enums\";\nimport {getFilterValueByType} from \"../../../utils/functions\";\nimport {AutocompleteFilter} from \"./AutocompleteFilter\";\n\nexport const InDrawerFilter = (props) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        props.toggleDrawer()\n        props.onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <AutocompleteFilter options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <AutocompleteFilter options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\n\nexport const ActiveFilter = (props) => {\n\n    return (\n        <Grid item>\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\n                {getIconFromFilterType(props.filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {InDrawerFilter} from \"./InDrawerFilter\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = (props) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        props.onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        props.reloadOffers(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\n                                fixedOffers={props.fixedOffers}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    fixedOffers: PropTypes.array.isRequired,\n    reloadOffers: PropTypes.func.isRequired\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {Filter} from \"../filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterOffers} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n                .catch(err => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer's details!\",\n                        icon: \"error\"\n                    })\n                })\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n    const offersList = <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return fetchError ? <Redirect to=\"/\" /> : (offers == null ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter offers={offers}\n                            onFilterSubmitted={handleFilterSubmitted}\n                            fixedOffers={fixedOffers}\n                            reloadOffers={handleFilterSubmitted} />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView} list={offersList} />}\n        />)\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message || \"Something went wrong!\")\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle,\n                text: errorSwalText || err,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        }\n    },\n    {\n        text: \"Delete\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.go(0),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        }\n    },\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        }\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        }\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\n\nexport const ApplicationsList = ({applications, onSelectedApplication}) => {\n\n    const extractData = (application) => {\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: application\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return (\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n        />\n    )\n}","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n            .then(data => console.log(data))\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {method: \"PUT\"})\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n    },\n\n    getAllPossibleStages: function() {\n        return fetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this._prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    _prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const ApplicationDetails = ({application, isHR, reload}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={`${idx}`} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id).then(_ => reload()),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        history.push(`/meeting/organizer/${application.id}`)\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI._prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        <Grid item xs={4}><Button color=\"secondary\" variant=\"outlined\" onClick={teleportToMO}>Plan meeting</Button></Grid>\n                        <Grid item xs={12}>\n                            {/*  Notes about candidate in future  */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    Next Stage\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import {Redirect, useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport Swal from \"sweetalert2\";\n\nexport const ApplicationsView = ({getApplications, isHR}) => {\n\n    const {id} = useParams()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id)\n            .then(data => {\n                setApplications(data)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to find this offer! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetchError(true)\n                })\n                setFetching(false)\n            })\n    }, [getApplications, id, reload])\n\n    return (\n        fetchError ? <Redirect to=\"/\" /> : <>\n            {\n                fetching ? <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}><CircularProgress size={100} /></div>\n                    :\n                applications?.length !== 0 && applications !== undefined ?\n                <StandardViewAndFilterLayout\n                    filter={null}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <ApplicationDetails application={selectedApplication} isHR={isHR} reload={() => setReload(!reload)} /> :\n                                <div>Select application</div>}\n                            list={<ApplicationsList\n                                applications={applications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                /> : <EmptyApplicationsView isHR={isHR} />\n            }\n        </>\n    )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)}></form>\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect, useState} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n    const [fetchError, setFetchError] = useState(false)\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        creatorId:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues:defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n                .catch(err => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => setFetchError(true))\n                })\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => reset(),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" />: <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)}></form>\n        <Grid container spacing={2}>\n            {/* TO BE DELETED, CREATOR ID SHOULD BE PROVIDED BY SESSION */}\n            <FormField\n                control={control}\n                name=\"creatorId\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^\\d+$/, message: \"Must be an integer\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Creator Id\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            {/* / TO BE DELETED, CREATOR ID SHOULD BE PROVIDED BY SESSION */}\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    rows: 8,\n                    rowsMax: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button} type=\"submit\" variant=\"contained\" size=\"large\" form=\"offer-form\" fullWidth>Save offer</Button>\n            </Grid>\n        </Grid></div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get possible stages!\",\n                    icon: \"error\"\n                })\n            })\n    }, [processId])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        withSwal({\n            loadingTitle: \"Updating stages\",\n            promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n            successSwalTitle: \"Stages Updated\"\n        })\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\n        firstListItems={getStages()}\n        secondListItems={getPossibleStages()}\n        forbiddenIndexes={[0, getStages()?.length]}\n        warningFunction={() => fireSwal(\n            \"You can't do this!\",\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\n            \"warning\"\n        )}\n        itemRender={(item) => (\n            <Box m={1}>\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                    <CardContent>\n                        <Typography>{item.type}</Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )}\n        onSubmit={(first, _) => handleSubmit(first)}\n        leftSubmitGridProps={{xs: 10}}\n        centerSubmitGridProps={{xs: 1}}\n        rightSubmitGridProps={{xs: 1}}\n        materialButtonProps={{variant: \"outlined\"}}\n        submitDivStyle={{marginTop: \"15px\"}}\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n    />\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageEndDate = ({selectedDate, onChange, processStartDate}) => {\n\n    const handleDateChange = (date) => {\n        if (date > new Date(processStartDate)) {\n            console.log(processStartDate)\n            onChange(date)\n        } else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than start date!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n        />\n}\n\nManageEndDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageStages} from \"./ManageStages\";\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport {ManageEndDate} from \"./ManageEndDate\";\nimport React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [fetchError, setFetchError] = useState(false)\n    const [process, setProcess] = useState(null)\n    const [selectedEndDate, setSelectedEndDate] = useState(null)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n                setSelectedEndDate(data?.endDate || new Date())\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [id])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const handleSubmit = () => {\n        withSwal({\n            loadingTitle: \"Updating end date\",\n            promise: () => processAPI.changeEndDate(id, selectedEndDate),\n            successSwalTitle: \"Date updated\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <Grid container spacing={2} direction=\"column\">\n                    <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                        <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                    </Grid>\n                    <Grid item> <Divider/> </Grid>\n                    <Grid container style={{display: \"flex\", flexGrow: 1}}>\n                        {/*<Grid item>*/}\n                        {/*  Beginning of recruitment process in future maybe  */}\n                        {/*</Grid>*/}\n                        <Grid item>\n                            <ManageEndDate selectedDate={selectedEndDate || new Date()}\n                                           onChange={(date) => setSelectedEndDate(date)}\n                                           processStartDate={process?.startDate}/>\n                        </Grid>\n                    </Grid>\n                    {/*<Grid item>*/}\n                    {/*    In future tasks and quizzes? */}\n                    {/*</Grid>*/}\n                    <Grid item>\n                        <Grid container direction=\"row\">\n                            <Grid item xs={false} sm={6} lg={8}/>\n                            <Grid item xs={12} sm={6} lg={4}>\n                                <Button onClick={handleSubmit} variant=\"outlined\">Submit</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Grid container direction=\"column\" spacing={2}>\n                    <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                        <Grid container direction=\"row\" spacing={1}>\n                            <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                            <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item> <Divider/> </Grid>\n                    <Grid item>\n                        <ManageStages processId={id}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    </div>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return fetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                \"x-jwt\": jwtUtils.getAuthToken()\n            }\n        }).then(response => response.json())\n            .catch(err => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"x-jwt\": jwtUtils.getAuthToken()\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"x-jwt\": jwtUtils.getAuthToken(),\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nexport const OrganizationsPartnerList = (props) => {\n\n    const [users, setUsers] = useState([props.users])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n            organizationsAPI.getHrPartnersByOrganization()\n                .then(data => {\n                    updateUsers(data)\n                })\n\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => {\n                setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined)))\n            },\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"60%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n        <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {users.map((user, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName} mail={user.mail}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onUserDelete(idx, user)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n    </div>\n}","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const LoginForm = (props) => {\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Loging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                props.reload.setReload(!props.reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(props.onSubmit) {\n            props.onSubmit(data)\n        }\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)} />\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Login\",\n                            autoComplete: \"off\",\n                            form: \"login-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            autoComplete: \"off\",\n                            form: \"login-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"login-form\" fullWidth>Login</Button>\n                    </Grid>\n                </Grid>\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const CompanyRegistration = (props) => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = (props) => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n        console.log(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        We need to validate, who you are, so please, provide password from your mail:\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import {Button, Card, CardContent, Divider, Typography, IconButton, Menu, MenuItem} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {theme} from \"../../../test/utils/theme\";\n\nexport const Task = ({task, tasksOperations}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n            <CardContent>\n                <Typography variant=\"h5\">Task: {task.id}</Typography>\n                <Typography variant=\"subtitle1\"\n                            color=\"textSecondary\">Deadline: {new Date(task.deadline).toLocaleString()}</Typography>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                <MenuItem onClick={tasksOperations['delete']} style={{color: theme.status.danger.main}}>Delete</MenuItem>\n            </Menu>\n        </Card>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange }) => {\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} />\n    )\n}\n","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCase(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import {Typography} from \"@material-ui/core\";\nimport {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport {useState} from \"react\";\nimport Swal from 'sweetalert2'\n\nexport const AddDeadline = ({ handleChange }) => {\n\n    const [selectedDate, setSelectedDate] = useState(Date.now())\n\n    const handleDateChange = (date) => {\n        Swal.resetValidationMessage()\n        if(date < Date.now()) {\n            Swal.showValidationMessage(\"If you set deadline earlier than now, nobody will be able to solve this task!\")\n        } else {\n            setSelectedDate(date)\n            handleChange(date)\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add deadline to your task</Typography>\n            <EStellaDatePicker handleDateChange={handleDateChange} selectedDate={selectedDate} label=\"Deadline\"/>\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {AddDeadline} from \"./AddDeadline\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nlet task = {}\n\nconst clearTask = () => task = {}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(tasks, reload, setReload)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n}\n\nconst createTests = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createTimeLimit = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            createDeadline(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createDeadline = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDeadline handleChange={(date) => task['deadline'] = date} />,\n        confirmButtonText: 'Create'\n    }).then(result => {\n        if(result.isConfirmed) {\n            create(tasks, reload, setReload)\n        }\n    })\n}\n\nconst create = (tasks, reload, setReload) => {\n    tasksApi.updateTasks([...tasks, task])\n        .then(_ => setReload(!reload))\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nexport const TasksList = ({ fetchTasks, id }) => {\n\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const addTask = () => {\n        createTask(tasks, reload, setReload)\n    }\n\n    useEffect(() => {\n        fetchTasks(id)\n            .then(data => setTasks(data))\n    }, [fetchTasks, id, reload])\n\n    const deleteTask = (id) => {\n        tasksApi.updateTasks(tasks.filter(task => task.id !== id))\n            .then(_ => setReload(!reload))\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginLeft: '20%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={{ 'delete': () => deleteTask(task?.id) }}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","import {useParams} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {TasksPassword} from \"./TasksPassword\";\nimport {TasksList} from \"./crud/TasksList\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\n\nexport const TasksViewWrapper = ({ fetchTasks }) => {\n    const {organizationId} = useParams()\n\n    const [password, setPassword] = useState(\"\")\n    const { set } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        set(`${organizationId}.${password}`)\n        setPassword(password)\n    }\n\n    return !!password ? <TasksList fetchTasks={fetchTasks} id={organizationId}/> : <TasksPassword handleSubmit={handleSubmit}/>\n}\n","export const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const set = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const get = () => sessionStorage.getItem(devPasswordKey)\n\n    return {get, set}\n\n}","export const offers = [\n    {\n        id: 20,\n        name: \"Centurion\",\n        description: \"Join IX Legion. Join conquering the Great Britain\",\n        position: \"Centurion\",\n        minSalary: 10000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 18,\n        name: \"Project Manager\",\n        description: \"Be manager of your life\",\n        position: \"Senior developer Java\",\n        minSalary: 15000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 17,\n        name: \"Senior developer Java\",\n        description: \"Master Java developer\",\n        position: \"Senior developer Java\",\n        minSalary: 25000,\n        maxSalary: 30000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 16,\n        name: \"Software Engineer Intern\",\n        description: \"The best offer of your live\",\n        position: \"Software Engineer Intern\",\n        minSalary: 3000,\n        maxSalary: 3500,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    }\n]\n\nexport const getApplications = () => {\n    return new Promise((resolve, reject) => {\n        resolve([\n            {\n                \"id\": 72,\n                \"applicationDate\": \"2021-08-04\",\n                \"status\": \"IN_PROGRESS\",\n                \"stage\": {\"id\": 40, \"type\": \"ENDED\"},\n                \"jobSeeker\": {\n                    \"id\": 71,\n                    \"user\": {\"id\": 71, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.com\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            },\n            {\n                \"id\": 92,\n                \"applicationDate\": \"2021-08-10\",\n                \"status\": \"ACCEPTED\",\n                \"stage\": {\"id\": 88, \"type\": \"APPLIED\"},\n                \"jobSeeker\": {\n                    \"id\": 89,\n                    \"user\": {\"id\": 89, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.testcom\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            }\n        ])\n    })\n}\n\nexport const tasks = [\n    {\n        id: 1,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.md\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 30,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    },\n    {\n        id: 2,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.txt\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 60,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    }\n]\n\nexport const getTasks = () =>\n    new Promise(resolve => {\n        resolve(tasks)\n    })","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [meetingUUID, setMeetingUUID] = useState(\"\")\n\n    const type = paramType || propType\n\n    const userData = {\n        userType: type,\n        uuid: uuid\n    }\n\n    const onPickSlotByJobSeeker = userData.userType === \"job_seeker\" ? (slot) => console.log(slot) : () => {}\n\n    useEffect(() => {\n        if(userData.userType === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    setMeetingUUID(data?.meetingUUID)\n                })\n        }\n    }, [type, uuid])\n\n    return <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                             userData={userData}\n                             outsideJwt={jwtUtils.getAuthToken()}\n                             outerFunctions={{ 'onPickSlot': onPickSlotByJobSeeker }}\n                             drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}} outsideMeetingUUID={meetingUUID} />\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"../test/utils/theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {OrganizationsPartnerList} from \"../components/organization/OrganizationsPartnerList\";\nimport {organizationsAPI} from \"./apis/OrganizationApi\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {TasksViewWrapper} from \"../components/tasks/TasksViewWrapper\";\nimport {getTasks} from \"../test/DummyValues\";\nimport {TaskWrapper} from \"../components/tasks/TaskWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\n\nconst createRoute = (path, component, style={marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={offersAPI.getAllOffers}/>, {margin: \"1em\", marginTop: \"2em\"}),\n    createRoute(\"/offers/:id\", <OffersView getOffers={offersAPI.getAllOffers}/>, {margin: \"1em\", marginTop: \"2em\"}),\n    createRoute(\"/hr/offers\", withUserAuth(OffersView, [\"hr\"], {getOffers: () => offersAPI.getOffersFromHr(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationsPartnerList, [\"organization\"], {users: () => organizationsAPI.getHrPartnersByOrganization()})),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/:organizationId\", <TasksViewWrapper fetchTasks={(id) => getTasks(id)} />),\n    createRoute('/task/:id', <TaskWrapper />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"})),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />),\n    createRoute(\"*\", <div>Page</div>)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./test/utils/theme\";\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}