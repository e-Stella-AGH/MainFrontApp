{"version":3,"sources":["utils/hooks/Base64.js","utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/chekedFetch.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/tasksAPI.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/commons/formsCommons/WithSwal.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/SingleMenu.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/EStellaAutocomplete.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageDate.js","components/process/manage/Dates.js","components/process/manage/ManageProcess.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","components/tasks/crud/Task.js","components/commons/MarkdownEditor.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/AddDeadline.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","test/DummyValues.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","utils/hooks/useDevPassword.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/WithDevPassword.js","components/notes/TagsList.js","components/notes/Note.js","components/notes/NotesList.js","utils/apis/NoteApi.js","components/notes/AddNote.js","utils/hooks/useDevMail.js","components/notes/NotesMenu.js","components/notes/NotesDrawer.js","components/tasks/review/SingleTaskReview.js","components/tasks/review/TasksCarousel.js","components/tasks/review/ReviewTask.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["decodeBase64","base64","Buffer","toString","encodeBase64","string","constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","Promise","resolve","setTimeout","text","ok","HttpError","code","message","Error","checkedFetch","url","data","errorMessage","status","checkResponseStatusOrThrowError","jwtAPI","userId","refreshToken","refreshApiPath","localStorage","setItem","get","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","getItem","getRefreshToken","deleteAuthToken","removeItem","deleteRefreshToken","undefined","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","history","useHistory","useState","loggedIn","setLoggedIn","window","location","reload","logout","push","filterTypes","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","textDecoration","Typography","variant","Button","createTheme","danger","main","success","secondary","card","light","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","selected","idx","selectedStyle","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","overflowY","item","map","handleSelect","getListItems","OffersList","getData","onSelectedOffer","handleShortOfferSelect","Grid","container","border","padding","spacing","src","defaultProps","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","catch","httpError","offersAPI","offerId","json","forCandidate","queryParam","surname","files","offerData","offerID","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","Swal","fire","title","icon","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","margin","xs","md","sm","Image1","alt","Image2","Image3","interviewAPI","interviewId","reject","applicationId","MeetingFab","mainButtonStyles","onDefaultView","onWhiteboard","onTask","fallbackTask","descriptionBase64","descriptionFileName","testsBase64","timeLimit","tasksApi","getTask","processId","showLoading","close","err","getTasks","tasksStageId","codeCheckerLink","getNotesWithTasksByTaskUUID","taskStageUUID","devPassword","ably","Realtime","process","uuid","TaskWrapper","propId","toSolveTask","submitLeftOffset","useParams","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","fetchTasks","NaN","_","outerMonacoWrapperStyle","codeCheckerBaseLink","solverId","absoluteOffset","settings","top","right","submit","left","sharingCodeFunctions","JitsiWrapper","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","getWhiteboardCode","roomName","client_id","overflow","admin","displayName","MeetingDisplayNameForm","setName","mt","mb","m","TextField","onChange","target","label","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","companyId","isFetching","setIsFetching","Fetched","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","result","Math","floor","isStatus2xx","swalResult","isConfirmed","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","paddingTop","paddingBottom","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","file","setFile","classes","handleClose","Dialog","onClose","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","fileName","DialogActions","disabled","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","fileBase64","newFiles","oldFiles","concat","handleDeleteFile","ind","error","helperText","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","SingleMenu","buttons","menuName","anchor","setAnchor","Menu","keepMounted","button","action","OfferDetails","getButtons","flexWrap","entries","reduce","groups","group","menu","mr","ml","component","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","EStellaAutocomplete","Autocomplete","options","onSelect","renderInput","params","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","fixedOffers","companyOptions","Set","positionOptions","screen","calculateWidth","toggleDrawer","fontSize","bottom","onFilterSubmitted","ActiveFilter","Chip","onDelete","avatar","Filter","setFilters","handleFilterDelete","newFilters","reloadOffers","Drawer","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","List","ListItem","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","view","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","fetching","setFetching","setFixedOffers","setSort","handleFilterSubmitted","getOffers","UnauthenticatedPage","withUserAuth","WrappedComponent","permittedTypes","wrappedProps","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","paper","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","convertFileToBase64","reader","FileReader","readAsDataURL","onload","onerror","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","boxShadow","shadows","GenericFileViewer","txt","setTxt","indexOf","File","Modal","getViewer","FileViewerWrapper","undecodedFile","applicationsAPI","devMails","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","items","changeEndDate","date","preparedDate","this","_prepareDate","changeStartDate","startProcess","getDate","getMonth","getFullYear","ApplicationDetails","isHR","rejectApplication","showCancelButton","cancelButtonText","nextStage","nextStageRequiresDevs","input","preConfirm","devsMails","trim","showValidationMessage","doSetNextStage","nextStageIsOneOf","types","checkForNext","indexOfNextStage","findIndex","getDisabled","teleportToMO","flexDirection","offerName","applicationDate","seekerFiles","EmptyApplicationsView","Image","ApplicationsView","getApplications","selectedApplication","setSelectedApplication","setApplications","setReload","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","handleSubmit","control","reset","rules","required","some","s","defaultValue","form","lg","onSkillDelete","OfferForm","mode","watch","trigger","updateOffer","formResult","parseInt","creatorId","autoComplete","pattern","multiline","minRows","maxRows","ManageStages","setStages","possibleStages","setPossibleStages","finally","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageDate","processStartDate","Dates","endDate","toLocaleDateString","selectedEndDate","setSelectedEndDate","startDate","selectedStartDate","setSelectedStartDate","isProcessStarted","flexFlow","gap","ManageProcess","setProcess","showHelp","html","ManageProcessInside","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","handleChange","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","Task","task","tasksOperations","menuAnchor","setMenuAnchor","deadline","toLocaleString","MarkdownEditor","usableView","renderHTML","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","labelPlacement","Form","addTestCase","testCase","setTestCase","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testData","expectedResult","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","AddDeadline","setSelectedDate","resetValidationMessage","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","tasks","createTimeLimit","createDeadline","create","updateTasks","TasksList","setTasks","deleteTask","createTask","AddCircleOutline","MeetingOrganizerWrapper","propType","paramType","outsideValues","setOutsideValues","userData","setUserData","redirectPath","onPickSlotByJobSeeker","slot","hosts","guest","meetingOrganizerBaseLink","outsideJwt","outerFunctions","drawerStyle","outsideMeetingValues","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","state","React","subPage","clone","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","useDevPassword","devPasswordKey","sessionStorage","set","getEncoded","TasksPassword","setPassword","onKeyPress","preventDefault","useKeyPress","CardActions","WithDevPassword","createPassword","TagsList","tags","deletable","tag","makeTag","Note","note","author","NotesList","notes","NoteApi","paramId","note_body","dev_password","param","AddNote","onCancel","uuid_key","noteText","setNoteText","setTags","currentTag","setCurrentTag","devMailKey","useDevMail","doAddNote","devMail","varient","getPopup","querySelector","NotesMenu","setTag","showAdd","setShowAdd","flatMap","flexShrink","whiteSpace","drawerOpen","transition","transitions","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","NotesDrawer","closedView","clsx","SingleTaskReview","results","tests","language","readOnly","TasksCarousel","infiniteLoop","ReviewTask","setNotes","createRoute","path","routes","getRoutes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.02e59e97.chunk.js","sourcesContent":["export const decodeBase64 = (base64) => new Buffer(base64, \"base64\").toString('ascii')\n\nexport const encodeBase64 = (string) => new Buffer(string).toString('base64')","export const constants = {\n    navbar_height: \"60px\"\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","//export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({text: \"ok\", ok: true})\n            }, 2000)\n        })\n    }\n}","class HttpError extends Error {\n    constructor(code, message) {\n        super(message)\n        this.code = code\n    }\n}\n\nconst checkResponseStatusOrThrowError = (response, errorMessage) => {\n    const code = response.status\n    if(code < 200 || code > 299) {\n        throw new HttpError(code, errorMessage || \"Something went wrong\")\n    }\n}\n\nexport const checkedFetch = (url, data, errorMessage) => {\n    return fetch(url, data)\n        .then(response => {\n            checkResponseStatusOrThrowError(response, errorMessage)\n            return response\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {loginAPI} from \"./LoginAPI\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        checkedFetch(\n            recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        ).then(\n            response => {\n                localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\n                return response;\n            }\n        )\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import {jwtUtils} from \"../jwt/jwtUtils\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {loginAPI} from \"../apis/LoginAPI\";\n\nexport const useLoggedIn = () => {\n    const history = useHistory()\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\n\n    const logout = () => {\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n        setLoggedIn(false)\n        history.push(\"/\")\n        window.location.reload()\n    }\n\n    const login = () => {\n        setLoggedIn(true)\n        window.location.reload()\n    }\n\n    return { loggedIn, login, logout }\n}","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const userMenuTabs = {\n    PROFILE: \"profile\",\n    SETTINGS: \"settings\",\n    FILES: \"files\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import React, {useState} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport {userTypes} from \"../../utils/Enums\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    purple0: {\n        backgroundColor: deepPurple[300],\n        color: theme.palette.getContrastText(deepPurple[300])\n    },\n    purple1: {\n        backgroundColor: deepPurple[200],\n        color: theme.palette.getContrastText(deepPurple[100])\n    },\n    pink0: {\n        backgroundColor: \"#b53387\",\n        color: theme.palette.getContrastText(\"#b53387\")\n    },\n    green0: {\n        backgroundColor: \"#0c4f06\",\n        color: theme.palette.getContrastText(\"#0c4f06\")\n    },\n    red0: {\n        backgroundColor: \"#de2618\",\n        color: theme.palette.getContrastText(\"#de2618\")\n    },\n    red1: {\n        backgroundColor: \"#9c0a00\",\n        color: theme.palette.getContrastText(\"#9c0a00\")\n    },\n    orange0: {\n        backgroundColor: deepOrange[500],\n        color: theme.palette.getContrastText(deepOrange[500])\n    },\n    orange1: {\n        backgroundColor: deepOrange[300],\n        color: theme.palette.getContrastText(deepOrange[300])\n    },\n    orange2: {\n        backgroundColor: deepOrange[200],\n        color: theme.palette.getContrastText(deepOrange[200])\n    },\n}))\n\nexport default function UserMenu(props) {\n    const styles = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [direction, setDirection] = useState(null);\n    const [open, setOpen] = useState(false);\n    const {logout} = useLoggedIn()\n\n    const user = jwtUtils.getUser()\n\n    const colors = Object.values(styles)\n\n    const stringToColor = (string) => {\n        let hash = 0;\n\n        for (let i = 0; i < string.length; i += 1) {\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\n        }\n\n        return colors[hash % colors.length];\n    }\n\n    const userAvatar = (user) => {\n        return {\n            className: stringToColor(user.firstName+user.lastName+user.mail),\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\n        };\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChoice = (direction) => {\n        setAnchorEl(null);\n        setDirection(direction);\n    };\n\n    const redirect = (direction) => {\n        return <Redirect to={direction} />\n    }\n\n    return user && <>\n        {direction ? <>\n            {redirect(direction)}\n            <UserMenu {...props} />\n        </> : <div style={props.style}>\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n                <IconButton style={props.style} onClick={handleClick}>\n                    <Avatar {...userAvatar(user)} />\n                </IconButton>\n            </Box>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper>\n                        <MenuList\n                            id=\"user-menu\"\n                            open={Boolean(anchorEl)}\n                        >\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\n                                Company's offers\n                            </MenuItem>}\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\n                                Company's partners\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\n                                My offers\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\n                                Create offer\n                            </MenuItem>}\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\n                                My applications\n                            </MenuItem>}\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\n                            <MenuItem onClick={() => {\n                                handleChoice(\"/\")\n                                logout()\n                            }}>Logout</MenuItem>\n                        </MenuList>\n                    </Paper>\n                </ClickAwayListener>\n            </Popover>\n        </div>}\n    </>\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nexport const Navbar = () => {\n\n    const {loggedIn} = useLoggedIn()\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Typography variant=\"h6\">\n                        e-Stella\n                    </Typography>\n                </Link>\n            </div>\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">All Offers</Button>\n                </Link>\n            </div>\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>}\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    zIndex: {\n        drawer: 1000\n    },\n    status: {\n        danger: {\n            main: '#d32f2f'\n        },\n        success: {\n            main: '#388e3c'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#ffffff'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        default:\n            return () => true\n    }\n}\n\nexport const filterOffers = (offers, filters) => {\n    let tmpOffers = offers\n    filters.forEach(filter => {\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\n    })\n    return tmpOffers\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import React, {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        if(isSelectable) {\n            setSelectedIdx(idx)\n            propsHandleSelect(item, idx)\n            scrollToTop()\n        }\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => \n                (\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected={selectedIdx === idx} data={extractData(item)} /> \n                )\n            )\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\nimport React from \"react\";\nimport { Typography, Grid } from '@material-ui/core'\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer) => {\n        if(props.onSelectedOffer) {\n            props.onSelectedOffer(offer)\n            scrollToTop()\n        }\n    }\n\n    const getView = () => offers.length > 0 ?\n    (<ListWithSelection\n        listItems={offers}\n        extractData={getData}\n        limit={props.limit}\n        propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n        isSelectable={!!props.onSelectedOffer}\n    />)\n    : \n    (<Grid container style={{height: '80vh', border: \"1px solid #eee\", padding: '2em', width: '100%'}} spacing={2} direction=\"column\">\n        <Grid item>\n            <img src=\"https://thumbs.dreamstime.com/b/job-offer-application-letter-response-career-opportunity-business-proposition-recruitment-agreement-man-receives-employment-188064915.jpg\"        \n                width=\"80%\"\n            />\n        </Grid>\n        <Grid item>\n            <Typography variant=\"h4\" style={{marginBottom: '3px'}}>No open offers!</Typography>\n            <Typography color=\"textSecondary\"> We're sorry but curently there are no offers that you can apply to. </Typography>\n        </Grid>\n    </Grid>)\n\n\n    return getView() \n    \n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\n\nexport const authFetch = (url, data, errorMessage) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, errorMessage)\n        .catch(httpError => {\n            if(httpError.code && httpError.code === 401)\n                jwtUtils.refreshToken().then(() => {\n                    authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n                    return checkedFetch(url, authData, errorMessage)\n                        .catch(httpError => {\n                            if(httpError.code && httpError.code === 401) {\n                                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                                localStorage.removeItem(loginAPI.authTokenStorageKey)\n                                window.location.reload()\n                            } else {\n                                throw httpError\n                            }\n                        })\n                })\n            else {\n                throw httpError\n            }\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport {headers} from \"./headers\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n    },\n\n    getAllOffers: function(forCandidate = false){\n        const queryParam = forCandidate ? \"?only_started=true\" : \"\"\n        return checkedFetch(recruitmentServiceBasicAPILink + \"/api/offers\" + queryParam)\n            .then(response => response.json())\n    },\n\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: files\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID, files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                files: files\n            })\n        })\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n    },\n\n    getOffersFromOrganization() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\"\n        }).then(response => response.json())\n    },\n\n    deleteOffer(id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userTypes} from \"../../utils/Enums\";\nimport Swal from \"sweetalert2\";\n\nconst LandingOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        offersAPI.getAllOffers(true)\n            .then(data => setOffers(data || []))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Latest Offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n            See more!\n        </Button>\n    </>\n}\n\nconst LandingHrOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI\n            .getOffersFromHr()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\n            Go to your offers\n        </Button>\n    </>\n}\n\nconst LandingOrganizationOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() =>\n        offersAPI\n            .getOffersFromOrganization()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    , [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\n            Go to organization's offers\n        </Button>\n    </>\n}\n\nconst LandingList = () => {\n    const userType = jwtUtils.getUser()?.userType\n\n    switch (userType) {\n        case userTypes.HR:\n            return <LandingHrOffers />\n        case userTypes.ORGANIZATION:\n            return <LandingOrganizationOffers />\n        default:\n            return <LandingOffers />\n    }\n}\n\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\n    <Grid item xs={12} md={8}>\n        <Typography variant=\"h4\">\n            e-Stella - Everything you'll ever need\n        </Typography>\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n            </Grid>\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\n                <Grid item>\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n                <Grid item>\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n    <Grid item xs={12} md={4}>\n        <LandingList />\n    </Grid>\n</Grid>\n","import {authFetch} from \"../authFetch\";\nimport {meetingOrganizerLink, recruitmentServiceBasicAPILink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : function(interviewId) {\n        return new Promise((resolve, reject) => {\n            resolve({text: \"ok\", ok: true, name: 'Waiting for endpoint'})\n        })\n    },\n\n    getNewestInterviewId: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}/interview`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    }\n\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = (props) => {\n\n    const theme = useTheme()\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            <Action\n                text=\"Default View\"\n                onClick={props.onDefaultView}\n            >\n                <VoiceChatIcon />\n            </Action>\n            <Action\n                text=\"Whiteboard\"\n                onClick={props.onWhiteboard}\n            >\n                <DashboardIcon />\n            </Action>\n            <Action\n                text=\"Task\"\n                onClick={props.onTask}\n            >\n                <AssignmentIndIcon />\n            </Action>\n        </Fab>\n    )\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport { checkedFetch } from '../chekedFetch'\n\nconst fallbackTask = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask]))\n        }\n    },\n\n    getTasks: (tasksStageId) => {\n        if (tasksStageId) {\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${tasksStageId}`)\n                .then(response => {\n                    Swal.close()\n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask]))\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    getNotesWithTasksByTaskUUID: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?task_note=${taskStageUUID}&with_tasks=true`, {\n            method: \"GET\",\n            headers: {\n                \"X-Dev-Password\": devPassword\n            }\n        })\n            .then(response => response.json())\n    }\n\n}","import { Realtime } from \"ably/browser/static/ably-commonjs.js\"\nimport { v4 as uuid } from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {CodeEditor} from 'e-stella-code-editor'\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useParams} from \"react-router-dom\";\nimport {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\n\nexport const TaskWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0 }) => {\n\n    let { taskStageUUID } = useParams()\n\n    if(!taskStageUUID) taskStageUUID = propId\n\n    const { pub, sub, clientId } = useAbly(`codeChanged/${taskStageUUID}`)\n\n    const fetchTasks = toSolveTask ? () => tasksApi.getTasks(taskStageUUID || NaN) : () => new Promise(_ => {})\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return (\n        <div>\n            <CodeEditor\n                codeCheckerBaseLink={codeCheckerLink}\n                fetchTasks={fetchTasks}\n                solverId={taskStageUUID}\n                absoluteOffset={{settings: { top: 3, right: 0 }, submit: {top: 3, left: submitLeftOffset}}}\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n                sharingCodeFunctions={{ pub, sub, id: clientId }}\n             />\n        </div>\n    )\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {TaskWrapper} from \"../../tasks/TaskWrapper\";\n\nexport const JitsiWrapper = (props) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <TaskWrapper id={16} submitLeftOffset={'25%'}/>\n            </div>\n        )\n    }\n\n    const getWhiteboardCode = () => {\n        if (props.roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return props.roomName\n    }\n\n    return (\n        <div>\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={props.admin} roomName={props.roomName} displayName={props.displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\n\nexport const MeetingDisplayName = (props) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\n            <JitsiWrapper admin={true} roomName={props.roomName} displayName={shouldDisplayForm.name}/>\n    }\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(data?.name)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"}/>\n    )\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message || \"Something went wrong!\")\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle,\n                text: errorSwalText || err,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {useDropzone} from \"react-dropzone\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\n\nconst FilesDropzone = ({onDrop}) => {\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\n    return <Paper style={{\n        padding: \"2em\",\n        paddingTop: \"4em\",\n        paddingBottom: \"4em\",\n        backgroundColor: color,\n        justifyContent: \"center\",\n        display: \"flex\"\n    }} {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n            isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Drag and drop files here, or click to select them</p>\n        }\n    </Paper>\n}\n\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const jobSeekerAPI = {\n\n    getJobSeeker: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    getFiles: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    insertFiles: function(files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({files: files})\n        })\n    }\n}","import Swal from \"sweetalert2\";\nimport {useParams} from \"react-router-dom\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    }\n}));\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\n    const [file, setFile] = useState(null)\n\n    const classes = useStyles()\n\n    const handleChange = (event) => {\n        setFile(event.target.value)\n    }\n\n    const handleClose = () => {\n        setFile(null)\n        setOpen(false)\n    }\n\n    const handleSave = () => {\n        onSave(file)\n        setFile(null)\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Select file to attach</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={file}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={null}>\n                                    <em>None</em>\n                                </MenuItem>\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst FileCard = ({file, index, handleDelete}) => {\n    return <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </Paper>\n}\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n\n    const {loggedIn} = useLoggedIn()\n    const user = jwtUtils.getUser()\n\n    const [name, setName] = useState(user?.firstName || \"\")\n    const [surname, setSurname] = useState(user?.lastName || \"\")\n    const [email, setEmail] = useState(user?.mail || \"\")\n    const [files, setFiles] = useState([])\n    const [loadedFiles, setLoadedFiles] = useState([])\n    const [open, setOpen] = useState(false)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    useEffect(() => {\n        if(loggedIn)\n            jobSeekerAPI.getFiles().then(files => {\n                setLoadedFiles(files)\n            })\n    }, [])\n\n    const apply = () => {\n        if (validate()) {\n            if (files === []) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else {\n                validatedApply(files)\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        withSwal({\n            loadingTitle: \"Applying\",\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully applied for this offer!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't process your application for this offer\",\n        })\n    }\n\n    const validate = () => {\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    const handleDeleteFile = (index) => {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const onAttachFile = (newFile) => {\n        setFiles(oldFiles => oldFiles.concat([newFile]))\n    }\n\n    return (\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\n                <Button style={{height: \"100%\"}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={handleClickOpen}\n                        fullWidth>\n                    Attach saved file\n                </Button>\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\n            </Grid>}\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\n            </Grid>)}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item md={9} xs={false} />\n            <Grid item md={3} xs={12}>\n                <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={apply}\n                        fullWidth>\n                    Apply\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport React from \"react\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return <div>\n        <Card variant=\"outlined\"\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n            {cardContent}\n        </Card>\n    </div>\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography } from '@material-ui/core'\nimport { useState } from 'react'\n\n\nexport const SingleMenu = ({ buttons, menuName, offer, history }) => {\n\n    const [anchor, setAnchor] = useState(null)\n\n    const handleClick = (event) => {\n        setAnchor(event.currentTarget)\n    } \n\n    const handleClose = () => {\n        setAnchor(null)\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick} variant=\"outlined\" color=\"primary\">{ menuName }</Button>\n    \n            <Menu\n                anchorEl={anchor}\n                keepMounted\n                open={!!anchor}\n                onClose={handleClose}\n            >\n                {buttons.map(button => (<MenuItem key={button.text}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                            </MenuItem>))}\n            </Menu>\n\n        </div>\n    )\n\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\nimport {SingleMenu} from './SingleMenu.js'\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const groups = (buttons) => buttons.reduce((groups, item) => {\n        const group = (groups[item.menu] || []);\n        group.push(item);\n        groups[item.menu] = group;\n        return groups;\n      }, {});\n\n    const getButtons = () => {\n        const user = jwtUtils.getUser()\n\n        if (user?.userType == \"hr\" || user?.userType == \"organization\") {\n            return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                        {\n                        Object.entries(groups(props.buttons)).map(([menu, buttons]) => {\n                            return <Box key={menu} mr={1} ml={1}>\n                                <SingleMenu menuName={menu} buttons={buttons} offer={offer} history={history} />\n                            </Box>\n                            })\n                        }\n                    </div>)\n        }\n\n        return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n            {props.buttons.map(button => {\n            return <Box key={button.text} mr={1} ml={1}>\n                <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                    <Typography>\n                        {button.text}\n                    </Typography>\n                </Button>\n            </Box>})}\n            </div>\n        )\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                {getButtons()}\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`),\n        menu: \"Apply menu\",\n        style: {color: 'primary', variant: 'contained'}\n    }]\n}\n","import React from \"react\";\n\nexport const PickUpOffer = () =>\n    <div>\n        Pick up offer\n    </div>","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const EStellaAutocomplete = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={props.options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\n        />\n    )\n}\n\nEStellaAutocomplete.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"./EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../../utils/Enums\";\nimport {getFilterValueByType} from \"../../../utils/functions\";\nimport { EStellaAutocomplete } from '../../EStellaAutocomplete'\n\nexport const InDrawerFilter = (props) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        props.toggleDrawer()\n        props.onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\n\nexport const ActiveFilter = (props) => {\n\n    return (\n        <Grid item>\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\n                {getIconFromFilterType(props.filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {InDrawerFilter} from \"./InDrawerFilter\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = (props) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        props.onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        props.reloadOffers(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\n                                fixedOffers={props.fixedOffers}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    fixedOffers: PropTypes.array.isRequired,\n    reloadOffers: PropTypes.func.isRequired\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {Filter} from \"../filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterOffers} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [fetching, setFetching] = useState(true)\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer's details!\",\n                        icon: \"error\"\n                    })\n                })\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n                setFetching(false)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetching(false)\n                    setFetchError(true)\n                })\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = () =>\n        selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n\n    const offersList = () =>\n        <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return fetchError ? <Redirect to=\"/\" /> : (fetching ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter offers={offers}\n                            onFilterSubmitted={handleFilterSubmitted}\n                            fixedOffers={fixedOffers}\n                            reloadOffers={handleFilterSubmitted} />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView()} list={offersList()} />}\n        />)\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Edit offer\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Delete offer\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.go(0),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        },\n        menu: \"Applications Menu\"\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\n\nexport const ApplicationsList = ({applications, onSelectedApplication}) => {\n\n    const extractData = (application) => {\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: application\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return (\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n            isSelectable={!!onSelectedApplication}\n        />\n    )\n}","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId, devMails) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {\n            method: \"PUT\",\n            body: JSON.stringify({\"devs\": devMails})\n        })\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n    },\n\n    getAllPossibleStages: function() {\n        return checkedFetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this._prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    changeStartDate: function(id, date) {\n        const preparedDate = this._prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    startProcess: (id) => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    },\n\n    _prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { interviewAPI } from '../../utils/apis/InterviewAPI';\nimport {validateEmail} from \"../../utils/functions\";\n\nexport const ApplicationDetails = ({application, isHR, reload}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={`${idx}`} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id),\n                    successFunction: () => reload(),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        if ( nextStageRequiresDevs() ) {\n            const devMails = []\n            Swal.fire({\n                title: \"We need more info\",\n                icon: \"warning\",\n                text: 'Next stage of this appliaction requires people with technical knowledge. Please, insert their mails here, splitting them with commas (,)',\n                input: \"text\",\n                preConfirm: (devsMails) => {\n                    if (devsMails) {\n                        devsMails.split(\",\")\n                            .map(mail => mail.trim())\n                            .forEach(mail => devMails.push(mail))\n                        devMails.forEach(mail => {\n                            if(!validateEmail(mail)) {\n                                Swal.showValidationMessage(`${mail} is not a valid email`)\n                                devMails.length = 0\n                            } \n                        })\n                    } else {\n                        Swal.showValidationMessage(\"Please, add mails of such people, as you won't be able to change it later.\")\n                    }\n                }\n            }).then(result => {\n                if (result.isConfirmed) {\n                    doSetNextStage(devMails)\n                }\n            })\n        } else {\n            doSetNextStage([])\n        }\n    }\n\n    const doSetNextStage = (devMails) => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id, devMails),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const nextStageRequiresDevs = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"TASK\"], true)\n\n    const stageRequiresMeeting = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"HR_INTERVIEW\"])\n\n    const nextStageIsOneOf = (types, checkForNext) => {\n        let indexOfNextStage = application?.stages?.findIndex(stage => stage.id === application.stage.id)\n        if (checkForNext) indexOfNextStage += 1\n        return types.includes(application?.stages[indexOfNextStage]?.type)\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        isHR ? history.push(`/meeting/organizer/${application.id}`) : history.push(`/meeting/job_seeker/${application.id}`)\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI._prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        {\n                            stageRequiresMeeting() && !getDisabled() &&\n                                <Grid item xs={4}><Button color=\"secondary\" variant=\"outlined\" onClick={teleportToMO}>Plan meeting</Button></Grid>\n                        }\n                        <Grid item xs={12}>\n                            {/*  Notes about candidate in future  */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    Next Stage\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import {Redirect, useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\n\nexport const ApplicationsView = ({getApplications, isHR}) => {\n\n    const {id} = useParams()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id)\n            .then(data => {\n                setApplications(data)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get this offer's applications! You will be redirected to your offers\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetchError(true)\n                    setFetching(false)\n                })\n            })\n    }, [setApplications, getApplications, id, reload])\n\n    return fetchError ? <Redirect to=\"/hr/offers\" />\n        : (fetching ? <CenteredCircularProgress size={80} />\n            : (applications?.length !== 0 && applications !== undefined ?\n                <StandardViewAndFilterLayout\n                    filter={null}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <ApplicationDetails application={selectedApplication} isHR={isHR} reload={() => setReload(!reload)} /> :\n                                <div>Select application</div>}\n                            list={<ApplicationsList\n                                applications={applications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                /> : <EmptyApplicationsView isHR={isHR} />\n            )\n        )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\nimport React from \"react\";\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                color=\"secondary\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect, useState} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n    const [fetchError, setFetchError] = useState(false)\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => setFetchError(true))\n                })\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => reset(),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\n        <Grid container spacing={2}>\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    minRows: 8,\n                    maxRows: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        form=\"offer-form\"\n                        color=\"primary\"\n                        fullWidth>\n                    Save offer\n                </Button>\n            </Grid>\n        </Grid></div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get process data!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get possible stages!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n    }, [])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        withSwal({\n            loadingTitle: \"Updating stages\",\n            promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n            successSwalTitle: \"Stages Updated\"\n        })\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\n        firstListItems={getStages()}\n        secondListItems={getPossibleStages()}\n        //temporary solution - would be the best to actually change TwoColumnDnD to fire callback about setting items length\n        forbiddenIndexes={[0, 20]}\n        warningFunction={() => fireSwal(\n            \"You can't do this!\",\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\n            \"warning\"\n        )}\n        itemRender={(item) => (\n            <Box m={1}>\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                    <CardContent>\n                        <Typography>{item.type}</Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )}\n        onSubmit={(first, _) => handleSubmit(first)}\n        leftSubmitGridProps={{xs: 10}}\n        centerSubmitGridProps={{xs: 1}}\n        rightSubmitGridProps={{xs: 1}}\n        materialButtonProps={{variant: \"outlined\"}}\n        submitDivStyle={{marginTop: \"15px\"}}\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n    />\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageDate = ({selectedDate, onChange, processStartDate, disabled, label}) => {\n\n    const handleDateChange = (date) => {\n        if (!processStartDate || date > new Date(processStartDate)) {\n            onChange(date)\n        } else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than today!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n            disabled={disabled}\n            label={label}\n        />\n}\n\nManageDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageDate} from \"./ManageDate\";\nimport {Button, Card, Divider, Grid, Typography, CardContent} from \"@material-ui/core\";\nimport Swal from \"sweetalert2\";\nimport {useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const Dates = ({ process, reload, setReload }) => {\n\n    const [selectedEndDate, setSelectedEndDate] = useState(process?.endDate || new Date().toLocaleDateString())\n    const [selectedStartDate, setSelectedStartDate] = useState(process?.startDate || new Date().toLocaleDateString())\n    \n    const isProcessStarted = () => process?.startDate != null && new Date(process?.startDate) <= new Date()\n\n    const startProcess = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after you start your process\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Starting process\",\n                    promise: () => processAPI.startProcess(process.id),\n                    successSwalTitle: \"Process Started!\",\n                    successFunction: () => setReload(!reload)\n                })\n            }\n        })\n    }\n\n    const handleEndSubmit = () => {\n        withSwal({\n            loadingTitle: \"Updating end date\",\n            promise: () => processAPI.changeEndDate(process.id, selectedEndDate),\n            successSwalTitle: \"Date updated\",\n            successFunction: () => setReload(!reload)\n        })\n    }\n\n    const handleStartSubmit = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after the date your process will start\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Updating start date\",\n                    promise: () => processAPI.changeStartDate(process.id, selectedStartDate),\n                    successSwalTitle: \"Date updated\",\n                    successFunction: () => setReload(!reload)\n                })      \n            }\n        })\n    }\n\n    return (\n        <>\n            <Grid container spacing={3} style={{height: \"100%\", textAlign: 'center'}} direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule Start Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedStartDate}\n                                        onChange={(date) => setSelectedStartDate(date)}\n                                        label=\"Start of recruitment process\"\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleStartSubmit} disabled={isProcessStarted()}>Schedule</Button>\n                            </div>\n                            <Divider style={{marginTop: '1em', marginBottom: '1em'}} />\n                            <Typography variant=\"h6\" style={{marginBottom: '5px'}}>Or</Typography>\n                            <Button variant=\"contained\" color=\"primary\" onClick={startProcess} disabled={isProcessStarted()}>Start your process now!</Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule End Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedEndDate}\n                                        onChange={(date) => setSelectedEndDate(date)}\n                                        processStartDate={process?.startDate}\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleEndSubmit}>Schedule</Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\n","import {ManageStages} from \"./ManageStages\";\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Dates} from \"./Dates\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [fetchError, setFetchError] = useState(false)\n    const [process, setProcess] = useState(null)\n\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [id, reload])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const ManageProcessInside = () =>\n        process == null ? <CenteredCircularProgress size={80} /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"1em\", marginTop: '1em'}}>\n                            <Dates process={process} reload={reload} setReload={setReload} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid item style={{marginTop: '1em'}}>\n                            <ManageStages processId={id}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n\n    return fetchError ? <Redirect to=\"/\" /> : <ManageProcessInside />\n}","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const LoginForm = (props) => {\n\n    const {loggedIn, login} = useLoggedIn()\n\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Logging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                login()\n                props.reload.setReload(!props.reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(props.onSubmit) {\n            props.onSubmit(data)\n        }\n    }\n\n    return loggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <FormField\n                            control={control}\n                            name=\"login\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Login\"\n                            }}\n                        />\n                        <FormField\n                            control={control}\n                            name=\"password\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Password\",\n                                autoComplete: \"off\",\n                                type: \"password\"\n                            }}\n                        />\n                        <Grid item xs={false} sm={8} />\n                        <Grid item xs={12} sm={4}>\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth color=\"primary\">Login</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Card>\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const CompanyRegistration = () => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import React, {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = () => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","import {Button, Card, CardContent, Divider, Typography, IconButton, Menu, MenuItem} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {theme} from \"../../../utils/theme\";\n\nexport const Task = ({task, tasksOperations}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n            <CardContent>\n                <Typography variant=\"h5\">Task: {task.id}</Typography>\n                <Typography variant=\"subtitle1\"\n                            color=\"textSecondary\">Deadline: {new Date(task.deadline).toLocaleString()}</Typography>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                <MenuItem onClick={tasksOperations['delete']} style={{color: theme.status.danger.main}}>Delete</MenuItem>\n            </Menu>\n        </Card>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange, view }) => {\n\n    const usableView = {menu: true, html: true, md: true, ...view}\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} view={usableView} />\n    )\n}\n","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCase(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import {Typography} from \"@material-ui/core\";\nimport {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport {useState} from \"react\";\nimport Swal from 'sweetalert2'\n\nexport const AddDeadline = ({ handleChange }) => {\n\n    const [selectedDate, setSelectedDate] = useState(Date.now())\n\n    const handleDateChange = (date) => {\n        Swal.resetValidationMessage()\n        if(date < Date.now()) {\n            Swal.showValidationMessage(\"If you set deadline earlier than now, nobody will be able to solve this task!\")\n        } else {\n            setSelectedDate(date)\n            handleChange(date)\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add deadline to your task</Typography>\n            <EStellaDatePicker handleDateChange={handleDateChange} selectedDate={selectedDate} label=\"Deadline\"/>\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {AddDeadline} from \"./AddDeadline\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nlet task = {}\n\nconst clearTask = () => task = {}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(tasks, reload, setReload)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n}\n\nconst createTests = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createTimeLimit = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            createDeadline(tasks, reload, setReload)\n        }\n    })\n}\n\nconst createDeadline = (tasks, reload, setReload) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDeadline handleChange={(date) => task['deadline'] = date} />,\n        confirmButtonText: 'Create'\n    }).then(result => {\n        if(result.isConfirmed) {\n            create(tasks, reload, setReload)\n        }\n    })\n}\n\nconst create = (tasks, reload, setReload) => {\n    tasksApi.updateTasks([...tasks, task])\n        .then(_ => setReload(!reload))\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\n\nexport const TasksList = ({ fetchTasks, id }) => {\n\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const addTask = () => {\n        createTask(tasks, reload, setReload)\n    }\n\n    useEffect(() => {\n        fetchTasks(id)\n            .then(data => setTasks(data))\n    }, [fetchTasks, id, reload])\n\n    const deleteTask = (id) => {\n        tasksApi.updateTasks(tasks.filter(task => task.id !== id))\n            .then(_ => setReload(!reload))\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginLeft: '20%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={{ 'delete': () => deleteTask(task?.id) }}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","export const offers = [\n    {\n        id: 20,\n        name: \"Centurion\",\n        description: \"Join IX Legion. Join conquering the Great Britain\",\n        position: \"Centurion\",\n        minSalary: 10000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 18,\n        name: \"Project Manager\",\n        description: \"Be manager of your life\",\n        position: \"Senior developer Java\",\n        minSalary: 15000,\n        maxSalary: 25000,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 17,\n        name: \"Senior developer Java\",\n        description: \"Master Java developer\",\n        position: \"Senior developer Java\",\n        minSalary: 25000,\n        maxSalary: 30000,\n        organization: {\n            name: \"Pega\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    },\n    {\n        id: 16,\n        name: \"Software Engineer Intern\",\n        description: \"The best offer of your live\",\n        position: \"Software Engineer Intern\",\n        minSalary: 3000,\n        maxSalary: 3500,\n        organization: {\n            name: \"Qualtrics\"\n        },\n        skills: [\n            {\n                id: 15,\n                level: \"MASTER\",\n                name: \"Throw pillum\"\n            },\n            {\n                id: 14,\n                level: \"MASTER\",\n                name: \"Looting\",\n            }\n        ]\n    }\n]\n\nexport const getApplications = () => {\n    return new Promise((resolve, reject) => {\n        resolve([\n            {\n                \"id\": 72,\n                \"applicationDate\": \"2021-08-04\",\n                \"status\": \"IN_PROGRESS\",\n                \"stage\": {\"id\": 40, \"type\": \"ENDED\"},\n                \"jobSeeker\": {\n                    \"id\": 71,\n                    \"user\": {\"id\": 71, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.com\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            },\n            {\n                \"id\": 92,\n                \"applicationDate\": \"2021-08-10\",\n                \"status\": \"ACCEPTED\",\n                \"stage\": {\"id\": 88, \"type\": \"APPLIED\"},\n                \"jobSeeker\": {\n                    \"id\": 89,\n                    \"user\": {\"id\": 89, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.testcom\"}\n                },\n                \"seekerFiles\": [],\n                \"offerName\": \"Centurion\",\n                \"stages\": []\n            }\n        ])\n    })\n}\n\nexport const tasks = [\n    {\n        id: 1,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.md\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 30,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    },\n    {\n        id: 2,\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\n        descriptionFileName: \"description.txt\",\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\n        timeLimit: 60,\n        deadline: \"2021-09-05T10:51:22+00:00\"\n    }\n]\n\nexport const getTasks = () =>\n    new Promise(resolve => {\n        resolve(tasks)\n    })","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport { CircularProgress } from '@material-ui/core';\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [outsideValues, setOutsideValues] = useState(null)\n    const [fetchError, setFetchError] = useState(false)\n    const [userData, setUserData] = useState(null)\n\n    let redirectPath = \"/\"\n\n    const type = paramType || propType\n\n    const onPickSlotByJobSeeker = userData?.userType === \"job_seeker\" ? (slot) => console.log(slot) : () => {}\n\n    useEffect(() => {\n        if(type === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    setOutsideValues({hosts: data?.hosts || [], guest: data?.application?.jobSeeker?.user?.mail || '', uuid: data?.id})\n                })\n                .catch(() =>\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We couldn't find the interview data for this application! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => {\n                        setFetchError(true)\n                    })\n                )\n        } else if(type === \"job_seeker\") {\n            interviewAPI.getNewestInterviewId(uuid)\n                .then(data => setUserData({uuid: data?.uuid, userType: type}))\n                .catch(() =>\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"Looks like HR hasn't set this interview yet! Wait a few days, then try again. Now, we'll take you back to your applications!\",\n                        icon: \"error\"\n                    }).then(() => {\n                        setFetchError(true)\n                        redirectPath = \"/user/applications\"\n                    })\n                )\n        }\n    }, [type, uuid])\n\n    return fetchError ? <Redirect to={redirectPath} /> : (\n        !!outsideValues || !!userData ? <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                                userData={userData}\n                                outsideJwt={jwtUtils.getAuthToken()}\n                                outerFunctions={{ 'onPickSlot': onPickSlotByJobSeeker }}\n                                drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}}\n                                outsideMeetingValues={outsideValues} />: <CenteredCircularProgress size={80} />\n    )\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {hrOfferButtons} from \"../HrOfferButtons\";\nimport {theme} from \"../../../utils/theme\";\nimport {OffersView} from \"./OffersView\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst marginWithDrawer = \"100px\"\n\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\n    <OffersView\n        getOffers={() => offersAPI.getOffersFromHr()}\n        buttons={hrOfferButtons(theme)}\n    />\n    <Drawer\n        variant=\"permanent\"\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\n    >\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n            <ListItem>\n                <Link to=\"/hr/offers/add\">\n                    <IconButton>\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                    </IconButton>\n                </Link>\n            </ListItem>\n        </List>\n    </Drawer>\n</div>\n\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Box from \"@material-ui/core/Box\";\nimport FilesDropzone from \"./FilesDropzone\";\n\nfunction _base64ToArrayBuffer(base64) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst FilesChangedTip = ({onSaveFiles}) =>\n    <Paper elevation={0} variant=\"outlined\" style={{\n        padding: \"1em\",\n        paddingLeft: \"1em\",\n        backgroundColor: deepOrange[100],\n        display: \"flex\"\n    }}>\n        <Grid container>\n            <Grid item xs={12} md={9} lg={12}>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    height=\"100%\"\n                >\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={12}>\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\n            </Grid>\n        </Grid>\n    </Paper>\n\nconst OldFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\n\nconst NewFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\n    const ch = <>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\n            >\n                <GetAppOutlined/>\n            </IconButton>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </>\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n        {initialFiles.some(a => a.id === file.id) ?\n            <OldFilePaper>{ch}</OldFilePaper>:\n            <NewFilePaper>{ch}</NewFilePaper>}\n    </Grid>\n}\n\nexport const FilesPage = () => {\n    const [downloadedFiles, setDownloadedFiles] = useState([])\n    const [files, setFiles] = useState([])\n\n\n    const downloadedFilesSet = new Set(downloadedFiles)\n    const filesSet = new Set(files)\n\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\n\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\n        f.sort((a, b) => a.id - b.id)\n        setDownloadedFiles(f)\n        setFiles(f)\n    })\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    useEffect(\n        fetchFiles,\n    []\n    )\n\n    function handleDownload(fileName, base64) {\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    function handleDelete(index) {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    function onSaveFiles() {\n        withSwal({\n            title: \"Saving files\",\n            promise: () => jobSeekerAPI.insertFiles(files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved your files!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't save these files for you\",\n            successFunction: fetchFiles\n        })\n    }\n\n    return <div>\n        <Grid container spacing={2}>\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\n                </Grid>\n                {files.map((value, index) =>\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\n                )}\n            </Grid>\n            <Grid item xs={false} md={6} lg={10} />\n            <Grid item xs={12} md={6} lg={2}>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {userTypes} from \"../../utils/Enums\";\n\n\nfunction UserInfo({label, value}) {\n    return <><Grid item xs={12} sm={3}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\n    </Grid>\n    <Grid item xs={12} sm={9}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\n    </Grid></>\n}\n\nfunction displayType(userType) {\n    switch (userType) {\n        case userTypes.JOB_SEEKER:\n            return \"Candidate\"\n\n        case userTypes.HR:\n            return \"Human Resources Specialist\"\n\n        case userTypes.ORGANIZATION:\n            return \"Organization\"\n\n        default:\n            return undefined\n    }\n}\n\nexport const ProfilePage = () => {\n    const user = jwtUtils.getUser()\n    return <Grid container>\n        <Grid item lg={2} md={1} sm={false}/>\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\n            <UserInfo label=\"ID:\" value={user.userId} />\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\n            <UserInfo label=\"Mail:\" value={user.mail} />\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\n        </Grid>\n        <Grid item lg={2} md={1} sm={false}/>\n    </Grid>\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const userAPI = {\n\n    updateUser: function (userRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userRequest)\n        })\n    },\n\n    updatePersonalData: function (personalData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(personalData)\n        })\n    },\n\n    updatePassword: function (passwordRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(passwordRequest)\n        })\n    }\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../commons/formsCommons/FormField\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useEffect} from \"react\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userAPI} from \"../../utils/apis/UserAPI\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst EditPersonalInfoForm = () => {\n    const user = jwtUtils.getUser()\n    const defaultFormState = {\n        mail: user.mail,\n        firstName: user.firstName,\n        lastName: user.lastName\n    }\n\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = ({firstName, lastName}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\n            successSwalTitle: \"Successful change!\",\n            errorSwalTitle: \"We couldn't change your personal data!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"mail\"\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Email\",\n                                disabled: true\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"firstName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"First Name\",\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"lastName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Last Name\",\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nconst EditPasswordForm = () => {\n    const defaultFormState = {\n        oldPassword: \"\",\n        newPassword: \"\",\n        repeatedPassword: \"\"\n    }\n\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const newPasswordInput = watch(\"newPassword\")\n\n    useEffect(\n        () => {\n            if(newPasswordInput)\n                trigger(\"repeatedPassword\")\n        },\n        [newPasswordInput, trigger]\n    )\n\n    const onSubmit = ({oldPassword, newPassword}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\n            successSwalTitle: \"Successfully changed password!\",\n            errorSwalTitle: \"We couldn't change your password!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"oldPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Current password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"newPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"New password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"repeatedPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Repeat password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nexport const SettingsPage = () => {\n    return <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <EditPersonalInfoForm />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <EditPasswordForm />\n            </Grid>\n        </Grid>\n    </>\n}","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid} from \"@material-ui/core\";\nimport {FilesPage} from \"./FilesPage\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\nimport {ProfilePage} from \"./ProfilePage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction TabPanel({ children, value, tabName, ...other }) {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== tabName}\n            id={`tabpanel-${tabName}`}\n            aria-labelledby={`tab-${tabName}`}\n            style={{padding: \"1em\", color: \"primary\"}}\n            {...other}\n        >\n            {value === tabName && <Box>{children}</Box>}\n        </div>\n    );\n}\n\nfunction a11yProps(tabName) {\n    return {\n        id: `tab-${tabName}`,\n        'aria-controls': `tabpanel-${tabName}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    indicator: {\n        left: \"0px\"\n    }\n}));\n\nexport default function SettingsOverlay(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const state = props.location?.state\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\n    const user = jwtUtils.getUser();\n\n    const handleChange = (event, newValue) => setValue(newValue)\n\n    return user ? (<Grid container>\n        <Box clone order={{xs: 2, md: 1}}>\n            <Grid item xs={12} md={9} lg={10}>\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\n                    <ProfilePage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\n                    <SettingsPage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\n                    <FilesPage />\n                </TabPanel>\n            </Grid>\n        </Box>\n        <Box clone order={{xs: 1, md: 2}}>\n            <Grid item xs={12} md={3} lg={2}>\n                <Tabs\n                    value={value}\n                    orientation=\"vertical\"\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"settings tabs\"\n                >\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\n                </Tabs>\n            </Grid>\n        </Box>\n        </Grid>) : <Redirect to=\"/\" />;\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            }\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\n\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\n    <Box mt={0} mb={0}>\n        <Grid container>\n            {users.map((user, idx) =>\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                    <Grid container>\n                        <Grid item xs={11}>\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\n                                                 mail={user.mail}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Box mt={3}>\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\n                                    <ClearIcon fontSize=\"medium\"/>\n                                </IconButton>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>)}\n        </Grid>\n    </Box>","import {Grid} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\n\nexport const OrganizationPartnersManagement = (props) => {\n\n    const [users, setUsers] = useState([])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n        organizationsAPI.getHrPartnersByOrganization()\n            .then(data => {\n                updateUsers(data)\n            })\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\n        </Grid>\n    </div>\n}","import { encodeBase64 } from './Base64'\n\nexport const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const set = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const get = () => sessionStorage.getItem(devPasswordKey)\n\n    const getEncoded = () => encodeBase64(sessionStorage.getItem(devPasswordKey))\n\n    return {get, set, getEncoded}\n\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        We need to validate, who you are, so please, provide password from your mail:\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import { useState } from 'react';\nimport { useDevPassword } from '../../utils/hooks/useDevPassword';\nimport { useParams } from 'react-router-dom'\nimport { TasksPassword } from './TasksPassword';\n\nexport const WithDevPassword = ({ WrappedComponent, wrappedProps, createPassword }) => {\n    const {id} = useParams()\n\n    const [password, setPassword] = useState(\"\")\n    const { set } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        set(createPassword(id, password))\n        console.log(createPassword(id, password))\n        setPassword(password)\n    }\n\n    return !!password ? <WrappedComponent {...wrappedProps} id={id} /> : <TasksPassword handleSubmit={handleSubmit}/>\n}","import {Chip} from '@material-ui/core';\n\nexport const TagsList = ({ tags, deletable = false, onDelete = () => {} }) => {\n\n    const makeTag = (tag, idx) => {\n        const props = deletable ? {onDelete: () => onDelete(tag)} : {}\n        return (<Chip style={{margin: '10px'}} key={idx} label={tag} variant=\"outlined\" color=\"primary\" {...props} />)\n    }\n\n    return (\n        <div style={{display: 'flex', overflow: 'scroll'}}>\n            {tags.map((tag, idx) => makeTag(tag, idx))}\n        </div>\n    )\n}","import { Card, Chip, Divider, CardContent, Typography } from '@material-ui/core';\nimport { decodeBase64 } from '../../utils/hooks/Base64'\nimport { TagsList } from './TagsList'\n\nexport const Note = ({ note }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{padding: '2em', width: '80%'}}>\n            <Typography variant=\"h6\" color=\"textSecondary\">{note.author}</Typography>\n            <TagsList tags={note.tags} />\n            <Divider />\n            <CardContent>\n                {decodeBase64(note.text)}\n            </CardContent>\n        </Card>\n    )\n}","import {Grid} from '@material-ui/core';\nimport { Note } from './Note';\n\nexport const NotesList = ({notes}) => {\n\n    return (\n        <Grid container>\n            {notes.map((note, idx) => (\n                <Grid item xs={12} sm={5} style={{margin: '1em'}}>\n                    <Note note={note} key={idx} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import { checkedFetch } from '../chekedFetch'\nimport { recruitmentServiceBasicAPILink } from './APILinks'\n\nexport const NoteApi = {\n\n    addNote: ({ key, paramId, note_body, dev_password }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        console.log(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, JSON.stringify([note_body]))\n        console.log(dev_password)\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'x-dev-password': dev_password,\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            }\n        })\n        \n    }\n\n}","import { TextField, Card, CardActions, Button, useTheme, Divider, Typography } from '@material-ui/core'\nimport {MarkdownEditor} from '../commons/MarkdownEditor'\nimport {useState} from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { TagsList } from './TagsList'\nimport '../../App.css';\nimport { useDevMail } from '../../utils/hooks/useDevMail';\nimport { encodeBase64 } from '../../utils/hooks/Base64';\nimport { useDevPassword } from '../../utils/hooks/useDevPassword';\nimport { NoteApi } from '../../utils/apis/NoteApi';\nimport Swal from 'sweetalert2'\nimport {withSwal} from '../commons/formsCommons/WithSwal'\n\nexport const AddNote = ({ onCancel, uuid, uuid_key, setReload }) => {\n\n    const theme = useTheme()\n    const {getEncoded} = useDevPassword()\n\n    const [noteText, setNoteText] = useState('')\n    const [tags, setTags] = useState([])\n    const [currentTag, setCurrentTag] = useState('')\n\n    const {get, set} = useDevMail()\n\n    const handleNoteTextChange = ({html, text}) => {\n        setNoteText(text)\n    }\n\n    const handleAddCurrentTag = () => {\n        setTags([...tags, currentTag])\n        setCurrentTag('')\n    }\n\n    const deleteTag = (tag) => {\n        setTags(tags.filter(item => item != tag))\n    }\n\n    const doAddNote = (devMail) => {\n        withSwal({\n            loadingTitle: 'Adding Note',\n            promise: () =>\n                NoteApi.addNote({\n                    key: uuid_key,\n                    paramId: uuid,\n                    note_body: {\n                        author: devMail,\n                        tags: tags,\n                        fileBase64: encodeBase64(noteText)\n                    },\n                    dev_password: getEncoded()\n                }),\n            successSwalTitle: 'Note successfully added',\n            successFunction: () => {\n                setReload?.(reload => !reload)\n            }\n        })\n        setTags([])\n        setNoteText('')\n        onCancel()\n    }\n\n    const addNote = () => {\n        const devMail = get()\n        if (!devMail) {\n            Swal.fire({\n                title: \"Missing informations!\",\n                html: 'Please, provide your mail, so everyone knows, who you are.<br /><input type=\"text\" id=\"mail\" class=\"swal2-input\" placeholder=\"Mail\">',\n                icon: 'warning',\n                preConfirm: () => {\n                    const mail = Swal.getPopup().querySelector('#mail').value\n                    if (!mail) {\n                        Swal.showValidationMessage(`Please enter your mail`)\n                    } else {\n                        set(mail)\n                    }\n                    return { mail }\n                }\n            }).then(result => {\n                doAddNote(result.value.mail)\n            })\n        } else {\n            doAddNote(devMail)\n        }\n    }\n\n    return (\n        <Card style={{marginLeft: 'auto', marginRight: 'auto', width: '80%', marginTop: '1em', padding: '1em', textAlign: 'left'}} variant='outlined'>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between', alignItems: 'base-line'}}>\n                <Typography style={{marginBottom: '10px'}}>Tags:</Typography>\n                <TagsList tags={tags} deletable onDelete={deleteTag} />\n            </div>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>\n                <TextField label=\"Add Tag\" variant=\"outlined\" value={currentTag} style={{width: '90%'}} onChange={({target}) => setCurrentTag(target.value)} />\n                <Button onClick={handleAddCurrentTag}><AddCircleOutlineIcon color=\"action\" /></Button>\n            </div>\n\n            <Divider style={{margin: '1em 0'}} />\n\n            <Typography>Note:</Typography>\n            <MarkdownEditor handleChange={handleNoteTextChange} style={{height: '100px'}} view={{menu: false, html: false}}/>\n            \n            <CardActions>\n                <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', justifyContent: 'space-between', width: '100%'}}> \n                    <Button size=\"small\" onClick={onCancel} style={{ border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main, width: '40%' }} varient=\"outline\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addNote} size=\"small\" style={{ background: theme.palette.secondary.dark, color: theme.palette.background.main, width: '40%' }} variant=\"contained\">\n                        Add\n                    </Button>\n                </div>\n            </CardActions>\n        </Card>\n    )\n}","export const useDevMail = () => {\n\n    const devMailKey = \"devMail\"\n\n    const set = (mail) => sessionStorage.setItem(devMailKey, mail)\n\n    const get = () => sessionStorage.getItem(devMailKey)\n\n    return {get, set}\n\n}","import {constants} from \"../../utils/constants\";\nimport { Grid, Typography, Box, Button, Divider } from '@material-ui/core'\nimport { EStellaAutocomplete } from \"../EStellaAutocomplete\";\nimport { useState } from 'react';\nimport { NotesList } from './NotesList'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { AddNote } from './AddNote'\n\n\nexport const NotesMenu = ({ notes, uuid, uuid_key, reload, setReload }) => {\n\n    const [tag, setTag] = useState('')\n    const [showAdd, setShowAdd] = useState(false)\n\n    const getDistinctTags = () => new Array(...new Set(notes.flatMap(note => note.tags)))\n\n    const getNotes = () => tag ? notes.filter(note => note.tags.includes(tag)) : notes\n\n    const addNote = () => {\n        setShowAdd(true)\n    }\n\n    return (\n        <div style={{marginTop: `calc(${constants.navbar_height} + 3em)`, textAlign: 'center'}}>\n            \n            <Grid container direction=\"row\">\n                <Grid item xs={11}>\n                    <Typography variant=\"h5\">\n                        Notes\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <Button onClick={addNote}><AddCircleOutlineIcon color=\"action\" /></Button>\n                </Grid>\n            </Grid>\n\n            { showAdd && <AddNote onCancel={() => setShowAdd(false)} uuid={uuid} uuid_key={uuid_key} setReload={setReload} /> }\n\n            <Divider style={{marginTop: '1em'}} />\n\n            <Box m={2}>\n                <EStellaAutocomplete options={getDistinctTags()} label={\"Search for tags\"} onChange={(value) => setTag(value)} />\n            </Box>\n\n            {notes?.length > 0 ? <NotesList notes={getNotes()} /> : 'Oh no, there are no notes yet!' }\n        </div>\n    )\n}","import {useState} from 'react'\nimport { Drawer, List, ListItem, Button } from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {constants} from \"../../utils/constants\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { NotesMenu } from './NotesMenu'\n\nconst drawerWidth = 600;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\n\nexport const NotesDrawer = ({ notes, uuid, uuid_key, reload, setReload }) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState(false)\n\n    const handleNoteClick = () => {\n        setOpen(true)\n    }\n\n    const closeNote = () => {\n        setOpen(false)\n    }\n\n    const closedView = (<List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                            <ListItem>\n                                <Button onClick={handleNoteClick}>\n                                    <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                                </Button>\n                            </ListItem>\n                        </List>)\n\n    return (\n        <div>\n            {open && (\n                <Button onClick={closeNote} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                  })}\n                  classes={{\n                    paper: clsx({\n                      [classes.drawerOpen]: open,\n                      [classes.drawerClose]: !open,\n                    }),\n                  }}\n            >\n                {open ? <NotesMenu notes={notes} uuid={uuid} uuid_key={uuid_key} reload={reload} setReload={setReload} /> : closedView}\n            </Drawer>\n        </div>\n    )\n}","import MonacoEditor from 'react-monaco-editor';\nimport { decodeBase64 } from '../../../utils/hooks/Base64';\nimport { MarkdownViewer } from '../../commons/MarkdownViewer';\nimport { Card } from '@material-ui/core'\n\nexport const SingleTaskReview = ({ task }) => {\n    const { code, results, tests, description } = task\n\n    return (\n        <div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', gap: '1em'}}>\n                <MonacoEditor\n                    value={code}\n                    theme=\"vs-dark\"\n                    language=\"plain-text\"\n                    width=\"100%\"\n                    height=\"40vh\"\n                    options={{readOnly: true}}\n                />\n                <div style={{border: '1px solid #989898', padding: '1em', width: '100%'}}>\n                    <MarkdownViewer markdown={decodeBase64(description)} />\n                </div>\n            </div>\n            <Card>\n\n            </Card>\n        </div>\n    )\n}","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { SingleTaskReview } from './SingleTaskReview'\n\nexport const TasksCarousel = ({ tasks }) => {\n\n    return (\n        <div style={{ marginLeft: '5em'}}>\n            <Carousel\n                infiniteLoop\n            >\n                {tasks.map((task, idx) => <SingleTaskReview task={task} key={idx} />)}\n            </Carousel>\n        </div>\n    )\n}","import {useState, useEffect} from 'react'\nimport {tasksApi} from '../../../utils/apis/tasksAPI';\nimport { useDevPassword } from '../../../utils/hooks/useDevPassword'\nimport { NotesDrawer } from '../../notes/NotesDrawer';\nimport { TasksCarousel } from './TasksCarousel'\nimport Swal from 'sweetalert2'\nimport {useHistory} from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nexport const ReviewTask = ({ id: taskStageUUID }) => {\n\n    const { getEncoded } = useDevPassword()\n    \n    const history = useHistory()\n\n    const [notes, setNotes] = useState([])\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n       tasksApi.getNotesWithTasksByTaskUUID(taskStageUUID, getEncoded())\n            .then(data => {\n                console.log(data)\n                setNotes(data?.notes || [])\n                setTasks(data?.tasks || [])\n            })\n            .catch( err =>\n                Swal.fire({\n                    title: \"You're not supposed to be here!\",\n                    text: \"We're sorry, but password you have provided was incorrect.\",\n                    icon: \"error\"\n                }).then(() => {\n                    history.push('/')\n                })\n            )\n    }, [taskStageUUID, reload])\n\n    \n\n    return(\n        <div>\n            <NotesDrawer notes={notes} uuid={taskStageUUID} uuid_key=\"task_note\" reload={reload} setReload={setReload} />\n            { tasks?.length > 0 ? <TasksCarousel tasks={tasks} /> : <Typography variant=\"h5\" style={{textAlign: 'center'}}> There are no tasks results to show! </Typography>}\n        </div>\n    )\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"./theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {TasksList} from \"../components/tasks/crud/TasksList\";\nimport {getTasks} from \"../test/DummyValues\";\nimport {TaskWrapper} from \"../components/tasks/TaskWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\nimport { WithDevPassword } from \"../components/tasks/WithDevPassword\";\nimport { ReviewTask } from \"../components/tasks/review/ReviewTask\";\nimport { Note } from '../components/notes/Note';\n\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/offers/:id\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/:organizationId\", <WithDevPassword WrappedComponent={TasksList} wrappedProps={{fetchTasks: (id) => getTasks(id)}} createPassword={(id, password) => `${id}:${password}`} />),\n    createRoute('/task/:id', <TaskWrapper />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\n    createRoute(\"/settings\", <SettingsOverlay />),\n    createRoute(\"/tasks/review/:id\", <WithDevPassword WrappedComponent={ReviewTask} wrappedProps={{}} createPassword={(id, password) => `${password}:${id}`} />),\n    createRoute(\"/note\", <Note text=\"Note text as we can see\" tags={[\"Applied\", \"Some tag\", \"Some other tag\"]} />),\n    createRoute(\"*\", <div>Page</div>)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./utils/theme\"\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}