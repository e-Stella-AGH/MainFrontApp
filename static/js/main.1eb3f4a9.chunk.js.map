{"version":3,"sources":["utils/hooks/Base64.js","utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/chekedFetch.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/tasks/tasksUtils.js","components/tasks/crud/Task.js","components/commons/formsCommons/WithSwal.js","utils/apis/tasksAPI.js","utils/hooks/useDevPassword.js","components/tasks/AssignTasks.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/WithDevPassword.js","components/EStellaAutocomplete.js","components/notes/TagsList.js","components/notes/Note.js","components/notes/NotesList.js","components/commons/MarkdownEditor.js","utils/apis/NoteApi.js","components/notes/AddNote.js","utils/hooks/useDevMail.js","components/notes/NotesMenu.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/tasks/MultipleTasksWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/SingleMenu.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","components/applications/DevApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/notes/NotesDrawer.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageDate.js","components/process/manage/Dates.js","components/process/manage/ManageProcess.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","components/tasks/review/SingleTestCase.js","components/tasks/review/SingleResult.js","components/tasks/review/SingleTaskReview.js","components/tasks/review/TasksCarousel.js","components/tasks/review/ReviewTask.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/DevView.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["decodeBase64","base64","Buffer","toString","encodeBase64","string","constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","Promise","resolve","setTimeout","text","ok","HttpError","code","message","Error","checkedFetch","url","data","errorMessage","status","checkResponseStatusOrThrowError","jwtAPI","userId","refreshToken","refreshApiPath","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","localStorage","getItem","getRefreshToken","setItem","get","deleteAuthToken","removeItem","deleteRefreshToken","undefined","catch","Swal","fire","icon","window","history","pushState","urlPath","location","reload","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","useHistory","useState","loggedIn","setLoggedIn","logout","push","filterTypes","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","textDecoration","Typography","variant","Button","createTheme","danger","main","light","success","secondary","card","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","selected","idx","selectedStyle","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","overflowY","item","map","handleSelect","getListItems","OffersList","getData","onSelectedOffer","handleShortOfferSelect","Grid","container","border","padding","spacing","src","defaultProps","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","httpError","offersAPI","offerId","json","forCandidate","queryParam","surname","files","offerData","offerID","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","title","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","margin","xs","md","sm","Image1","alt","Image2","Image3","interviewAPI","interviewId","applicationId","MeetingFab","mainButtonStyles","onDefaultView","onWhiteboard","onTask","convertFileToBase64","file","reject","reader","FileReader","readAsDataURL","onload","result","onerror","err","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Uint8Array","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","paper","boxShadow","shadows","GenericFileViewer","handleClose","classes","txt","setTxt","fileName","indexOf","File","fileBase64","Modal","onClose","getViewer","getFirstLineFromTaskDescription","descriptionInBase64","firstLine","Task","task","tasksOperations","shouldDisplayMenu","menuAnchor","setMenuAnchor","descriptionBase64","timeLimit","descriptionFileName","Menu","keepMounted","taskOperation","action","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","showLoading","Math","floor","isStatus2xx","close","swalResult","isConfirmed","fallbackTask1","testsBase64","fallbackTask2","tasksApi","organizationId","tasksStageId","taskStageUUID","devPassword","organizationUUID","credentials","setReload","tasksIds","keyValue","tasks","useDevPassword","devPasswordKey","getDevPassword","sessionStorage","setDevPassword","getEncodedDevPassword","modal","AssignTasks","modalOptions","alreadyAssignedTasks","organizationTasks","assignKey","assignUUIDValue","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","top","left","transform","empty","actionTitle","newTasksIds","assignedTask","ModalButtons","Section","overflow","GridList","flexWrap","cols","GridListTile","TasksPassword","handleSubmit","setPassword","TextField","onChange","target","label","onKeyPress","preventDefault","useKeyPress","CardActions","WithDevPassword","WrappedComponent","wrappedProps","createPassword","params","useParams","EStellaAutocomplete","Autocomplete","options","onSelect","renderInput","TagsList","tags","deletable","onDelete","tag","Chip","makeTag","Note","note","author","whiteSpace","NotesList","notes","MarkdownEditor","handleChange","view","usableView","menu","html","renderHTML","NoteApi","paramId","note_body","dev_password","param","AddNote","onCancel","uuid","uuid_key","shouldUseAuthFetchToPost","noteText","setNoteText","setTags","currentTag","setCurrentTag","devMailKey","getDevMail","setDevMail","useDevMail","addNoteApiCall","doAddNote","addDevNote","devMail","preConfirm","getPopup","querySelector","showValidationMessage","gap","flexFlow","varient","NotesMenu","setTag","showAdd","setShowAdd","m","Set","flatMap","ably","Realtime","process","REACT_APP_ABLY_KEY","TaskWrapper","toSolveTask","submitLeftOffset","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","fetchTasks","outerMonacoWrapperStyle","codeCheckerBaseLink","solverId","absoluteOffset","settings","right","submit","sharingCodeFunctions","MultipleTasksWrapper","propId","setTasks","isFetching","setIsFetching","currentSlide","setCurrentSlide","prev","state","next","editors","PrevButton","disabled","NextButton","showIndicators","showArrows","showStatus","selectedItem","ind","statusFormatter","curr","items","JitsiWrapper","admin","roomName","displayName","companyId","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","setTaskStageUUID","getTasksByInterviewUUID","client_id","REACT_APP_WHITEBOARD_KEY","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","AdminMeetingDrawer","openNotesModal","setOpenNotesModal","openTasksModal","setOpenTasksModal","closedView","List","flexDirection","ListItem","fontSize","input","inputAttributes","autocapitalize","showCancelButton","Drawer","clsx","NotesMenuWrapper","setNotes","AssignTasksWrapper","setOrganizationTasks","setAlreadyAssignedTasks","MeetingDisplayNameForm","setName","mt","mb","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","Fetched","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","paddingTop","paddingBottom","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","setFile","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","DialogActions","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","newFiles","oldFiles","concat","handleDeleteFile","_","error","helperText","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","SingleMenu","buttons","menuName","anchor","setAnchor","button","OfferDetails","getButtons","entries","reduce","groups","group","mr","ml","component","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","fixedOffers","companyOptions","positionOptions","screen","calculateWidth","toggleDrawer","bottom","onFilterSubmitted","ActiveFilter","avatar","Filter","setFilters","handleFilterDelete","newFilters","reloadOffers","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","fetching","setFetching","setFixedOffers","setSort","handleFilterSubmitted","getOffers","NaN","UnauthenticatedPage","withUserAuth","permittedTypes","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","forDev","applicationData","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","FileViewerWrapper","undecodedFile","applicationsAPI","devMails","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","changeEndDate","date","preparedDate","this","prepareDate","changeStartDate","startProcess","getDate","getMonth","getFullYear","ApplicationDetails","isHR","isDev","rejectApplication","cancelButtonText","nextStage","nextStageRequiresDevs","devsMails","trim","doSetNextStage","nextStageIsOneOf","types","checkForNext","indexOfNextStage","findIndex","getDisabled","teleportToMO","offerName","applicationDate","seekerFiles","DevApplicationDetails","devApplication","openAssignTasks","setOpenAssignTasks","assignTask","EmptyApplicationsView","Image","NotesDrawer","ApplicationsView","getApplications","mailInBase64","selectedApplication","setSelectedApplication","setApplications","selectedApplicationNotes","setSelectedApplicationNotes","getNotesDrawerAnchor","getNotesDrawerStyle","getSelectedApplicationId","getStandardView","innerApplications","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","control","reset","rules","required","some","s","defaultValue","form","lg","onSkillDelete","OfferForm","mode","watch","trigger","updateOffer","formResult","parseInt","creatorId","autoComplete","pattern","multiline","minRows","maxRows","ManageStages","processId","setStages","possibleStages","setPossibleStages","finally","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","onFirstListChange","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageDate","processStartDate","Dates","endDate","toLocaleDateString","selectedEndDate","setSelectedEndDate","startDate","selectedStartDate","setSelectedStartDate","isProcessStarted","ManageProcess","setProcess","showHelp","ManageProcessInside","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","MeetingOrganizerWrapper","propType","paramType","outsideValues","setOutsideValues","userData","setUserData","hosts","guest","meetingOrganizerBaseLink","outsideJwt","drawerStyle","outsideMeetingValues","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","React","subPage","clone","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","SingleTestCase","testCase","testData","expectedResult","SingleResult","passed","SingleTaskReview","results","tests","decodedResults","decodedTestCases","setHeight","ref","useRef","current","clientHeight","language","readOnly","TasksCarousel","infiniteLoop","ReviewTask","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","labelPlacement","Form","addTestCase","setTestCase","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","createTimeLimit","TasksList","createTask","DevView","ListItemIcon","ListItemText","createRoute","path","getRoutes","routes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1eb3f4a9.chunk.js","sourcesContent":["\nexport const decodeBase64 = (base64) => new Buffer(base64, \"base64\").toString('ascii')\n\nexport const encodeBase64 = (string) => new Buffer(string).toString('base64')\n\n","export const constants = {\n    navbar_height: \"60px\"\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","// export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({text: \"ok\", ok: true})\n            }, 2000)\n        })\n    }\n}","class HttpError extends Error {\n    constructor(code, message) {\n        super(message)\n        this.code = code\n    }\n}\n\nconst checkResponseStatusOrThrowError = (response, errorMessage) => {\n    const code = response.status\n    if(code < 200 || code > 299) {\n        throw new HttpError(code, errorMessage || \"Something went wrong\")\n    }\n}\n\nexport const checkedFetch = (url, data, errorMessage) => {\n    return fetch(url, data)\n        .then(response => {\n            checkResponseStatusOrThrowError(response, errorMessage)\n            return response\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        checkedFetch(\n            recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        )\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\nimport Swal from \"sweetalert2\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n                .then(response => {\n                    localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\n                    localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey));\n                    return response;\n                })\n                .catch(() => {\n                    localStorage.removeItem(loginAPI.authTokenStorageKey)\n                    localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                    Swal.fire({\n                        text: \"Your session expired. We will take you to our login page!\",\n                        icon: \"warning\"\n                    })\n                    .then(() => {\n                        window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                        window.location.reload()\n                    })\n                })\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import {jwtUtils} from \"../jwt/jwtUtils\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {loginAPI} from \"../apis/LoginAPI\";\n\nexport const useLoggedIn = () => {\n    const history = useHistory()\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\n\n    const logout = () => {\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n        setLoggedIn(false)\n        history.push(\"/\")\n        window.location.reload()\n    }\n\n    const login = () => {\n        setLoggedIn(true)\n        window.location.reload()\n    }\n\n    return { loggedIn, login, logout }\n}","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const userMenuTabs = {\n    PROFILE: \"profile\",\n    SETTINGS: \"settings\",\n    FILES: \"files\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import React, {useState} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport {userTypes} from \"../../utils/Enums\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    purple0: {\n        backgroundColor: deepPurple[300],\n        color: theme.palette.getContrastText(deepPurple[300])\n    },\n    purple1: {\n        backgroundColor: deepPurple[200],\n        color: theme.palette.getContrastText(deepPurple[100])\n    },\n    pink0: {\n        backgroundColor: \"#b53387\",\n        color: theme.palette.getContrastText(\"#b53387\")\n    },\n    green0: {\n        backgroundColor: \"#0c4f06\",\n        color: theme.palette.getContrastText(\"#0c4f06\")\n    },\n    red0: {\n        backgroundColor: \"#de2618\",\n        color: theme.palette.getContrastText(\"#de2618\")\n    },\n    red1: {\n        backgroundColor: \"#9c0a00\",\n        color: theme.palette.getContrastText(\"#9c0a00\")\n    },\n    orange0: {\n        backgroundColor: deepOrange[500],\n        color: theme.palette.getContrastText(deepOrange[500])\n    },\n    orange1: {\n        backgroundColor: deepOrange[300],\n        color: theme.palette.getContrastText(deepOrange[300])\n    },\n    orange2: {\n        backgroundColor: deepOrange[200],\n        color: theme.palette.getContrastText(deepOrange[200])\n    },\n}))\n\nexport default function UserMenu(props) {\n    const styles = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [direction, setDirection] = useState(null);\n    const [open, setOpen] = useState(false);\n    const {logout} = useLoggedIn()\n\n    const user = jwtUtils.getUser()\n\n    const colors = Object.values(styles)\n\n    const stringToColor = (string) => {\n        let hash = 0;\n\n        for (let i = 0; i < string.length; i += 1) {\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\n        }\n\n        return colors[hash % colors.length];\n    }\n\n    const userAvatar = (user) => {\n        return {\n            className: stringToColor(user.firstName+user.lastName+user.mail),\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\n        };\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChoice = (direction) => {\n        setAnchorEl(null);\n        setDirection(direction);\n    };\n\n    const redirect = (direction) => {\n        return <Redirect to={direction} />\n    }\n\n    return user && <>\n        {direction ? <>\n            {redirect(direction)}\n            <UserMenu {...props} />\n        </> : <div style={props.style}>\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n                <IconButton style={props.style} onClick={handleClick}>\n                    <Avatar {...userAvatar(user)} />\n                </IconButton>\n            </Box>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper>\n                        <MenuList\n                            id=\"user-menu\"\n                            open={Boolean(anchorEl)}\n                        >\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\n                                Company's offers\n                            </MenuItem>}\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\n                                Company's partners\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\n                                My offers\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\n                                Create offer\n                            </MenuItem>}\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\n                                My applications\n                            </MenuItem>}\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\n                            <MenuItem onClick={() => {\n                                handleChoice(\"/\")\n                                logout()\n                            }}>Logout</MenuItem>\n                        </MenuList>\n                    </Paper>\n                </ClickAwayListener>\n            </Popover>\n        </div>}\n    </>\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nexport const Navbar = () => {\n\n    const {loggedIn} = useLoggedIn()\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Typography variant=\"h6\">\n                        e-Stella\n                    </Typography>\n                </Link>\n            </div>\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">All Offers</Button>\n                </Link>\n            </div>\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>}\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    zIndex: {\n        drawer: 1000\n    },\n    status: {\n        danger: {\n            main: '#d32f2f',\n            light: '#ff6659'\n        },\n        success: {\n            main: '#388e3c',\n            light: '#6abf69'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#ffffff'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        default:\n            return () => true\n    }\n}\n\nexport const filterOffers = (offers, filters) => {\n    let tmpOffers = offers\n    filters.forEach(filter => {\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\n    })\n    return tmpOffers\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import React, {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        if(isSelectable) {\n            setSelectedIdx(idx)\n            propsHandleSelect(item, idx)\n            scrollToTop()\n        }\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => \n                (\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected={selectedIdx === idx} data={extractData(item)} /> \n                )\n            )\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\nimport React from \"react\";\nimport {Grid, Typography} from '@material-ui/core'\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer) => {\n        if(props.onSelectedOffer) {\n            props.onSelectedOffer(offer)\n            scrollToTop()\n        }\n    }\n\n    const getView = () => offers.length > 0 ?\n    (<ListWithSelection\n        listItems={offers}\n        extractData={getData}\n        limit={props.limit}\n        propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n        isSelectable={!!props.onSelectedOffer}\n    />)\n    : \n    (<Grid container style={{height: '80vh', border: \"1px solid #eee\", padding: '2em', width: '100%'}} spacing={2} direction=\"column\">\n        <Grid item>\n            <img src=\"https://thumbs.dreamstime.com/b/job-offer-application-letter-response-career-opportunity-business-proposition-recruitment-agreement-man-receives-employment-188064915.jpg\"        \n                width=\"80%\"\n            />\n        </Grid>\n        <Grid item>\n            <Typography variant=\"h4\" style={{marginBottom: '3px'}}>No open offers!</Typography>\n            <Typography color=\"textSecondary\"> We're sorry but curently there are no offers that you can apply to. </Typography>\n        </Grid>\n    </Grid>)\n\n\n    return getView() \n    \n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\nimport Swal from \"sweetalert2\";\n\nexport const authFetch = (url, data, errorMessage) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, errorMessage)\n        .catch(httpError => {\n            if(httpError.code === 401)\n                jwtUtils.refreshToken().then(() => {\n                    authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n                    return checkedFetch(url, authData, errorMessage)\n                        .catch(httpError => {\n                            if(httpError.code === 401) {\n                                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                                localStorage.removeItem(loginAPI.authTokenStorageKey)\n                                Swal.fire({\n                                    text: \"Your session expired. We will take you to our login page!\",\n                                    icon: \"warning\"\n                                })\n                                .then(() => {\n                                    window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                                    window.location.reload()\n                                })\n                            } else {\n                                throw httpError\n                            }\n                        })\n                })\n            else {\n                throw httpError\n            }\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport {headers} from \"./headers\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n    },\n\n    getAllOffers: function(forCandidate = false){\n        const queryParam = forCandidate ? \"?only_started=true\" : \"\"\n        return checkedFetch(recruitmentServiceBasicAPILink + \"/api/offers\" + queryParam)\n            .then(response => response.json())\n    },\n\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: files\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID, files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                files: files\n            })\n        })\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n    },\n\n    getOffersFromOrganization() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\"\n        }).then(response => response.json())\n    },\n\n    deleteOffer(id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userTypes} from \"../../utils/Enums\";\nimport Swal from \"sweetalert2\";\n\nconst LandingOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        offersAPI.getAllOffers(true)\n            .then(data => setOffers(data || []))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Latest Offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n            See more!\n        </Button>\n    </>\n}\n\nconst LandingHrOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI\n            .getOffersFromHr()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\n            Go to your offers\n        </Button>\n    </>\n}\n\nconst LandingOrganizationOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() =>\n        offersAPI\n            .getOffersFromOrganization()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    , [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\n            Go to organization's offers\n        </Button>\n    </>\n}\n\nconst LandingList = () => {\n    const userType = jwtUtils.getUser()?.userType\n\n    switch (userType) {\n        case userTypes.HR:\n            return <LandingHrOffers />\n        case userTypes.ORGANIZATION:\n            return <LandingOrganizationOffers />\n        default:\n            return <LandingOffers />\n    }\n}\n\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\n    <Grid item xs={12} md={8}>\n        <Typography variant=\"h4\">\n            e-Stella - Everything you'll ever need\n        </Typography>\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n            </Grid>\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\n                <Grid item>\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n                <Grid item>\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n    <Grid item xs={12} md={4}>\n        <LandingList />\n    </Grid>\n</Grid>\n","import {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\"\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : (interviewId) => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/jobseeker/${interviewId}`).then(response => response.json()),\n\n    getNewestInterviewId: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}/interview`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNotesByInterviewId: (interviewId, password) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?interview_note=${interviewId}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': password\n            }\n        }).then(response => response.json())\n    },\n\n    getInterviewObjectById: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/${interviewId}`)\n        .then(response => response.json()),\n\n    getTaskStageUUIDByInterviewId: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages/byInterview/${interviewId}`)\n        .then(response => response.json())\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = (props) => {\n\n    const theme = useTheme()\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            <Action\n                text=\"Default View\"\n                onClick={props.onDefaultView}\n            >\n                <VoiceChatIcon />\n            </Action>\n            <Action\n                text=\"Whiteboard\"\n                onClick={props.onWhiteboard}\n            >\n                <DashboardIcon />\n            </Action>\n            <Action\n                text=\"Task\"\n                onClick={props.onTask}\n            >\n                <AssignmentIndIcon />\n            </Action>\n        </Fab>\n    )\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import {decodeBase64} from \"../../utils/hooks/Base64\"\n\nexport const getFirstLineFromTaskDescription = (descriptionInBase64) => {\n    const description = decodeBase64(descriptionInBase64)\n\n    const firstLine = description.split('\\n')[0]\n\n    return JSON.stringify(firstLine).replace( /\\W/g , '')\n}","import {Button, Card, CardContent, Divider, IconButton, Menu, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport {getFirstLineFromTaskDescription} from \"../tasksUtils\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport const Task = ({task, tasksOperations, shouldDisplayMenu}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n        {   shouldDisplayMenu &&\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n        }\n            <CardContent>\n                <Typography variant=\"h5\">{ getFirstLineFromTaskDescription(task.descriptionBase64) }</Typography>\n                <Typography variant=\"subtitle\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                {tasksOperations.map(taskOperation => <Button onClick={taskOperation.action}>{taskOperation.title}</Button>)}\n            </Menu>\n        </Card>\n    )\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message || \"Something went wrong!\")\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle,\n                text: errorSwalText || err,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport {checkedFetch} from '../chekedFetch'\nimport {withSwal} from '../../components/commons/formsCommons/WithSwal'\n\n\n\nconst fallbackTask1 = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\nconst fallbackTask2 = { id: 53, descriptionBase64: 'IyBBbHBoYWJldAoKIyMgRGVzY3JpcHRpb24KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGBiYHMKCiMjIEV4YW1wbGUKYGBgCmlucHV0OiA0CgpvdXRwdXQ6ICJiYmJiIgpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'WwogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMSwKICAgICJ0ZXN0RGF0YSI6IDEsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYiIKICB9LAogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMiwKICAgICJ0ZXN0RGF0YSI6IDIsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYmIiCiAgfSwKICB7CiAgICAidGVzdENhc2VJZCI6IDMsCiAgICAidGVzdERhdGEiOiA1LAogICAgImV4cGVjdGVkUmVzdWx0IjogImJiYmJiIgogIH0KXQ==', timeLimit: 70 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    getTasksByOrganization: (organizationId, password) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationId}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': password\n            }\n        }).then(response => response.json())\n        .catch(err => {\n            Swal.close()\n            Swal.fire({\n                icon: 'error',\n                text: `We're sorry, but we couldn't fetch tasks from this organization.`\n            })\n        })\n    },\n\n    getTasks: (tasksStageId) => {\n        if (tasksStageId) {\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${tasksStageId}`)\n                .then(response => {\n                    Swal.close()\n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    getNotesWithTasksByTaskUUID: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?task_note=${taskStageUUID}&with_tasks=true`, {\n            method: \"GET\",\n            headers: {\n                \"X-Dev-Password\": devPassword\n            }\n        })\n            .then(response => response.json())\n    },\n\n    getTasksFromOrganization: (organizationUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    getTasksFromTaskStage: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${taskStageUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    updateTasks: (task, credentials, setReload) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${credentials.organizationId}`, {\n            method: 'POST',\n            headers: {\n                'x-dev-password': credentials.password,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n        withSwal({\n            loadingTitle: 'Updating Task',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    assignTasks: (tasksIds, password, setReload, key, keyValue) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages?${key}=${keyValue}`, {\n            method: \"PUT\",\n            body: JSON.stringify({tasks: tasksIds}),\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': password\n            }\n        })\n        withSwal({\n            loadingTitle: 'Updating assigned tasks',\n            successSwalTitle: 'Task successfully assigned!',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    getTasksByInterviewId: (interviewId) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?interview=${interviewId}`, {\n            method: 'GET'\n        }).then(response => response.json())\n    }\n\n}","import {encodeBase64} from './Base64'\n\nexport const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const setDevPassword = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const getDevPassword = () => sessionStorage.getItem(devPasswordKey)\n\n    const getEncodedDevPassword = () => {\n        const password = getDevPassword()\n        return password ? encodeBase64(password) : ''\n    }\n\n    return {getDevPassword, setDevPassword, getEncodedDevPassword}\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport {Button, Divider, Grid, GridList, GridListTile, Typography} from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Task} from './crud/Task'\nimport {tasksApi} from '../../utils/apis/tasksAPI'\nimport {useDevPassword} from '../../utils/hooks/useDevPassword'\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    paper: {\n      position: 'absolute',\n      width: '50%',\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n\nexport const AssignTasks = ({ modalOptions, alreadyAssignedTasks, organizationTasks, setReload, assignKey, assignUUIDValue }) => {\n\n    const classes = useStyles()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const onAssign = (task) => {\n        const tasksIds = alreadyAssignedTasks.map(assignedTask => assignedTask.id)\n        tasksApi.assignTasks([...tasksIds, task.id], getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    const onDeassign = (task) => {\n        const newTasksIds = alreadyAssignedTasks.filter(assignedTask => assignedTask.id !== task.id).map(task => task.id)\n        tasksApi.assignTasks(newTasksIds, getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    return (\n        <Modal\n            open={modalOptions.open}\n            onClose={modalOptions.onClose}\n            className={classes.modal}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            style={{zIndex: 1000}}\n        >\n            <Fade in={modalOptions.open}>\n                <div className={classes.paper} style={getModalStyle()}>\n                    \n                    <Section title=\"Tasks you've already assigned:\" tasks={alreadyAssignedTasks} empty=\"No one has assigned any tasks for this application\" actionTitle=\"Deassign\" action={onDeassign} />\n                    <Divider style={{margin: '1em 0'}} />\n                    <Section title=\"Tasks you can assign:\" tasks={organizationTasks} empty=\"Your organization doesn't have any task.\" actionTitle=\"Assign\" action={onAssign} />\n\n                    <ModalButtons handleClose={modalOptions.handleClose} />\n                </div>\n            </Fade>\n        </Modal>\n    )\n\n}\n\nAssignTasks.propTypes = {\n    modalOptions: PropTypes.exact({\n        open: PropTypes.bool.isRequired,\n        handleClose: PropTypes.func.isRequired\n    })\n}\n\nconst ModalButtons = ({ handleClose }) => {\n\n    return (<Grid container direction=\"row\">\n                <Grid item xs={5}>\n                    <Typography color=\"textSecondary\">To assign task, expand menu and click \"Assign\"</Typography>\n                </Grid>\n                <Grid item xs={2} />\n                <Grid item xs={5}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClose} fullWidth>Job Done!</Button>\n                </Grid>\n            </Grid>)\n}\n\nconst Section = ({ title, tasks, empty, action, actionTitle }) => {\n\n    return (<div style={{margin: '1em 0', overflow: 'hidden', width: '100%'}}>\n        <Typography variant=\"h6\" color=\"textSecondary\" style={{marginBottom: '5px'}}>{title}</Typography>\n            {\n                tasks?.length > 0 ?\n                    <GridList style={{flexWrap: 'nowrap'}} cols={2.5}>\n                        {tasks.map((task, idx) => <GridListTile key={task}><Task task={task} tasksOperations={[{ title: actionTitle, action: () => action(task) }]} shouldDisplayMenu /></GridListTile>)}\n                    </GridList> :\n                    <Typography>{empty}</Typography>\n            }\n    </div>)\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit, text }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        {text ?? 'We need to validate, who you are, so please, provide password from your mail:'}\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import {useState} from 'react';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {useParams} from 'react-router-dom'\nimport {TasksPassword} from './TasksPassword';\n\nexport const WithDevPassword = ({ WrappedComponent, wrappedProps, createPassword, text }) => {\n\n    const params = useParams()\n    \n    const [password, setPassword] = useState(\"\")\n    const { setDevPassword, getDevPassword } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        setDevPassword(createPassword(params.id, password))\n        setPassword(password)\n    }\n\n    return !!password || getDevPassword() ? <WrappedComponent {...wrappedProps} id={params.id} {...params} /> : <TasksPassword handleSubmit={handleSubmit} text={text}/>\n} \n\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const EStellaAutocomplete = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={props.options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\n        />\n    )\n}\n\nEStellaAutocomplete.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Chip} from '@material-ui/core';\n\nexport const TagsList = ({ tags, deletable = false, onDelete = () => {} }) => {\n\n    const makeTag = (tag, idx) => {\n        const props = deletable ? {onDelete: () => onDelete(tag)} : {}\n        return (<Chip style={{margin: '10px'}} key={idx} label={tag} variant=\"outlined\" color=\"primary\" {...props} />)\n    }\n\n    return (\n        <div style={{display: 'flex', overflow: 'scroll'}}>\n            {tags.map((tag, idx) => makeTag(tag, idx))}\n        </div>\n    )\n}","import {Card, CardContent, Divider, Typography} from '@material-ui/core';\nimport {decodeBase64} from '../../utils/hooks/Base64'\nimport {TagsList} from './TagsList'\n\nexport const Note = ({ note }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{padding: '2em', width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n            <Typography variant=\"h6\" color=\"textSecondary\">{note.author}</Typography>\n            <TagsList tags={note.tags} />\n            <Divider />\n            <CardContent>\n                <Typography style={{whiteSpace:'pre-wrap'}}>{decodeBase64(note.text)}</Typography>\n            </CardContent>\n        </Card>\n    )\n}","import {Grid} from '@material-ui/core';\nimport {Note} from './Note';\n\nexport const NotesList = ({notes}) => {\n\n    return (\n        <Grid container>\n            {notes.map((note, idx) => (\n                <Grid item xs={12} style={{margin: '1em'}}>\n                    <Note note={note} key={idx} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange, view }) => {\n\n    const usableView = {menu: true, html: true, md: true, ...view}\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} view={usableView} />\n    )\n}\n","import {checkedFetch} from '../chekedFetch'\nimport {recruitmentServiceBasicAPILink} from './APILinks'\nimport { authFetch } from '../authFetch'\n\nexport const NoteApi = {\n\n    addNote: ({ key, paramId, note_body, dev_password }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'x-dev-password': dev_password,\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            }\n        })\n        \n    },\n\n    addNoteFromHr: ({ key, paramId, note_body }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n    }\n\n}","import {Button, Card, CardActions, Divider, TextField, Typography, useTheme} from '@material-ui/core'\nimport {MarkdownEditor} from '../commons/MarkdownEditor'\nimport {useState} from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {TagsList} from './TagsList'\nimport '../../App.css';\nimport {useDevMail} from '../../utils/hooks/useDevMail';\nimport {encodeBase64} from '../../utils/hooks/Base64';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {NoteApi} from '../../utils/apis/NoteApi';\nimport Swal from 'sweetalert2'\nimport {withSwal} from '../commons/formsCommons/WithSwal'\nimport { jwtUtils } from '../../utils/jwt/jwtUtils'\n\nexport const AddNote = ({ onCancel, uuid, uuid_key, setReload, shouldUseAuthFetchToPost }) => {\n\n    const theme = useTheme()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [noteText, setNoteText] = useState('')\n    const [tags, setTags] = useState([])\n    const [currentTag, setCurrentTag] = useState('')\n\n    const {getDevMail, setDevMail} = useDevMail()\n\n    const handleNoteTextChange = ({html, text}) => {\n        setNoteText(text)\n    }\n\n    const handleAddCurrentTag = () => {\n        setTags([...tags, currentTag])\n        setCurrentTag('')\n    }\n\n    const deleteTag = (tag) => {\n        setTags(tags.filter(item => item != tag))\n    }\n\n    const addNoteApiCall = (mail) => {\n        if (shouldUseAuthFetchToPost) {\n            return () => NoteApi.addNoteFromHr({\n                key: uuid_key,\n                paramId: uuid,\n                note_body: {\n                    author: mail,\n                    tags: tags,\n                    fileBase64: encodeBase64(noteText)\n                }\n            })\n        } else return () => NoteApi.addNote({\n            key: uuid_key,\n            paramId: uuid,\n            note_body: {\n                author: mail,\n                tags: tags,\n                fileBase64: encodeBase64(noteText)\n            },\n            dev_password: getEncodedDevPassword()\n        })\n    }\n\n    const doAddNote = (mail) => {\n        withSwal({\n            loadingTitle: 'Adding Note',\n            promise: addNoteApiCall(mail),\n            successSwalTitle: 'Note successfully added',\n            successFunction: () => {\n                setReload?.(reload => !reload)\n            }\n        })\n        setTags([])\n        setNoteText('')\n        onCancel()\n    }\n\n    const addNote = () => {\n        if (shouldUseAuthFetchToPost) {\n            const mail = jwtUtils.getUser().mail\n            doAddNote(mail)\n        } else {\n            addDevNote()\n        }\n    }\n\n    const addDevNote = () => {\n        const devMail = getDevMail()\n        if (!devMail) {\n            Swal.fire({\n                title: \"Missing informations!\",\n                html: 'Please, provide your mail, so everyone knows, who you are.<br /><input type=\"text\" id=\"mail\" class=\"swal2-input\" placeholder=\"Mail\">',\n                icon: 'warning',\n                preConfirm: () => {\n                    const mail = Swal.getPopup().querySelector('#mail').value\n                    if (!mail) {\n                        Swal.showValidationMessage(`Please enter your mail`)\n                    } else {\n                        setDevMail(mail)\n                    }\n                    return { mail }\n                }\n            }).then(result => {\n                doAddNote(result.value.mail)\n            })\n        } else {\n            doAddNote(devMail)\n        }\n    }\n\n    return (\n        <Card style={{marginLeft: 'auto', marginRight: 'auto', width: '80%', marginTop: '1em', padding: '1em', textAlign: 'left'}} variant='outlined'>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between', alignItems: 'base-line'}}>\n                <Typography style={{marginBottom: '10px'}}>Tags:</Typography>\n                <TagsList tags={tags} deletable onDelete={deleteTag} />\n            </div>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>\n                <TextField label=\"Add Tag\" variant=\"outlined\" value={currentTag} style={{width: '90%'}} onChange={({target}) => setCurrentTag(target.value)} />\n                <Button onClick={handleAddCurrentTag}><AddCircleOutlineIcon color=\"action\" /></Button>\n            </div>\n\n            <Divider style={{margin: '1em 0'}} />\n\n            <Typography>Note:</Typography>\n            <MarkdownEditor handleChange={handleNoteTextChange} style={{height: '100px'}} view={{menu: false, html: false}}/>\n            \n            <CardActions>\n                <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', justifyContent: 'space-between', width: '100%'}}> \n                    <Button size=\"small\" onClick={onCancel} style={{ border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main, width: '40%' }} varient=\"outline\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addNote} size=\"small\" style={{ background: theme.palette.secondary.dark, color: theme.palette.background.main, width: '40%' }} variant=\"contained\">\n                        Add\n                    </Button>\n                </div>\n            </CardActions>\n        </Card>\n    )\n}","export const useDevMail = () => {\n\n    const devMailKey = \"devMail\"\n\n    const setDevMail = (mail) => sessionStorage.setItem(devMailKey, mail)\n\n    const getDevMail = () => sessionStorage.getItem(devMailKey)\n\n    return {getDevMail, setDevMail}\n\n}","import {constants} from \"../../utils/constants\";\nimport {Box, Button, Divider, Grid, Typography} from '@material-ui/core'\nimport {EStellaAutocomplete} from \"../EStellaAutocomplete\";\nimport {useState} from 'react';\nimport {NotesList} from './NotesList'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {AddNote} from './AddNote'\n\n\nexport const NotesMenu = ({ notes, uuid, uuid_key, reload, setReload, shouldUseAuthFetchToPost = false }) => {\n\n    const [tag, setTag] = useState('')\n    const [showAdd, setShowAdd] = useState(false)\n\n    const getDistinctTags = () => new Array(...new Set(notes.flatMap(note => note.tags)))\n\n    const getNotes = () => tag ? notes.filter(note => note.tags.includes(tag)) : notes\n\n    const addNote = () => {\n        setShowAdd(true)\n    }\n\n    return (\n        <div style={{marginTop: `calc(${constants.navbar_height} + 3em)`, textAlign: 'center'}}>\n            \n            <Grid container direction=\"row\">\n                <Grid item xs={11}>\n                    <Typography variant=\"h5\">\n                        Notes\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <Button onClick={addNote}><AddCircleOutlineIcon color=\"action\" /></Button>\n                </Grid>\n            </Grid>\n\n            { showAdd && <AddNote onCancel={() => setShowAdd(false)} uuid={uuid} uuid_key={uuid_key} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> }\n\n            <Divider style={{marginTop: '1em'}} />\n\n            <Box m={2}>\n                <EStellaAutocomplete options={getDistinctTags()} label={\"Search for tags\"} onChange={(value) => setTag(value)} />\n            </Box>\n\n            {notes?.length > 0 ? <NotesList notes={getNotes()} /> : 'Oh no, there are no notes yet!' }\n        </div>\n    )\n}","import {Realtime} from \"ably/browser/static/ably-commonjs.js\"\nimport {v4 as uuid} from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {CodeEditor} from \"e-stella-code-editor\";\nimport React from \"react\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\n\nconst TaskWrapper = ({ toSolveTask = true, submitLeftOffset = 0, taskStageUUID,  task }) => {\n    const { pub, sub, clientId } = useAbly(`codeChanged/${taskStageUUID}/${task.id}`)\n\n    const fetchTasks = new Promise(resolve => resolve([task]))\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return <CodeEditor\n        codeCheckerBaseLink={codeCheckerLink}\n        fetchTasks={fetchTasks}\n        solverId={taskStageUUID}\n        absoluteOffset={{settings: { top: 0, right: 0 }, submit: {top: 0, left: submitLeftOffset}}}\n        outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n        sharingCodeFunctions={{ pub, sub, id: clientId }}\n    />\n}\n\nexport default TaskWrapper","import {useParams} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {Carousel} from 'react-responsive-carousel';\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport TaskWrapper from \"./TaskWrapper\";\nimport {Button, Grid} from \"@material-ui/core\";\n\nexport const MultipleTasksWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0, fetchTasks }) => {\n\n    let { taskStageUUID } = useParams()\n\n    if(!taskStageUUID) taskStageUUID = propId\n\n    const [tasks, setTasks] = useState([])\n    const [isFetching, setIsFetching] = useState(true)\n\n    const [currentSlide, setCurrentSlide] = useState(0)\n\n    const prev = () => setCurrentSlide(state => state - 1)\n    const next = () => setCurrentSlide(state => state + 1)\n    const updateCurrentSlide = (index) => setCurrentSlide(index)\n\n    useEffect(() =>\n        fetchTasks(taskStageUUID).then(tasks => {\n            setTasks(tasks)\n            setIsFetching(false)\n        }),\n        [setIsFetching, setTasks, taskStageUUID]\n    )\n\n    const editors = tasks.map(task => <TaskWrapper\n        task={task}\n        taskStageUUID={taskStageUUID}\n        toSolveTask={toSolveTask}\n        submitLeftOffset={submitLeftOffset}\n    />)\n\n    const PrevButton = () => <Button\n        onClick={prev}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === 0}\n        fullWidth>Previous Task</Button>\n\n    const NextButton = () => <Button\n        onClick={next}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === tasks.length - 1}\n        fullWidth>Next Task</Button>\n\n    return isFetching ? <CenteredCircularProgress size={100} /> : <div>\n        <Grid style={{padding: '1em', backgroundColor: \"#1e1e1e\"}} container spacing={2}>\n            <Grid item xs={12} md={6}><PrevButton /></Grid>\n            <Grid item xs={12} md={6}><NextButton /></Grid>\n        </Grid>\n        <Carousel\n            showIndicators={false}\n            showArrows={false}\n            showStatus={true}\n            selectedItem={currentSlide}\n            onChange={ind => updateCurrentSlide(ind)}\n            statusFormatter={(curr, items) => `Task ${curr} of ${items}`}\n        >\n            {editors}\n        </Carousel>\n    </div>\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useEffect, useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {AssignTasks} from \"../../tasks/AssignTasks\";\nimport {WithDevPassword} from \"../../tasks/WithDevPassword\"\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {NotesMenu} from '../../notes/NotesMenu';\nimport {Button, Divider, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\nimport {constants} from '../../../utils/constants'\nimport clsx from 'clsx';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Swal from \"sweetalert2\";\nimport {MultipleTasksWrapper} from \"../../tasks/MultipleTasksWrapper\";\n\nexport const JitsiWrapper = ({ admin, roomName, displayName, interviewId, companyId }) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n    const [taskStageUUID, setTaskStageUUID] = useState(null)\n\n    useEffect(() => {\n        interviewAPI.getTaskStageUUIDByInterviewId(interviewId)\n            .then(data => setTaskStageUUID(data.taskStageUUID))\n    }, [interviewId, companyId])\n\n    const getWhiteboardCode = () => {\n        if (roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return roomName\n    }\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <MultipleTasksWrapper fetchTasks={getTasksByInterviewUUID} submitLeftOffset={'25%'} id={taskStageUUID}/>\n            </div>\n        )\n    }\n\n    const getTasksByInterviewUUID = () => tasksApi.getTasksByInterviewId(interviewId)\n\n    return (\n        <div>\n            {\n                admin &&\n                    <AdminMeetingDrawer interviewId={interviewId} companyId={companyId} />\n            }\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={admin} roomName={roomName} displayName={displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}\n\n\nconst drawerWidth = 600;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\nconst AdminMeetingDrawer = ({ interviewId, companyId }) => {\n\n    const [openNotesModal, setOpenNotesModal] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [openTasksModal, setOpenTasksModal] = useState(false)\n\n    const { getDevPassword, setDevPassword } = useDevPassword()\n\n    const classes = useStyles()\n\n    const getNotesView = () => (\n        <WithDevPassword\n            WrappedComponent={NotesMenuWrapper}\n            wrappedProps={{\n                reload, setReload, interviewId\n            }}\n            createPassword={(id, password) => `${companyId}:${password}`}\n            text=\"Insert password\"\n        />\n    )\n\n    const doOpenTasksModal = () => {\n        if (getDevPassword()) {\n            setOpenTasksModal(true)\n        } else {\n            Swal.fire({\n                title: 'Provide your password from mail!',\n                input: 'text',\n                inputAttributes: {\n                    autocapitalize: 'off'\n                },\n                showCancelButton: true,\n                confirmButtonText: 'Submit'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    setDevPassword(`${companyId}:${result.value}`)\n                    setOpenTasksModal(true)\n                }\n            })\n        }\n    }\n\n    const closedView = (\n            <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`, display: 'flex', flexDirection: 'column'}}>\n                <ListItem>\n                    <Button onClick={() => setOpenNotesModal(true)}>\n                        <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                    </Button>\n                </ListItem>\n                    <Divider style={{margin: '1em 0'}} />\n                <ListItem>\n                    <Button onClick={() => doOpenTasksModal()}>\n                        <AssignmentIcon fontSize=\"large\" color=\"action\" />\n                    </Button>\n                </ListItem>\n            </List>\n    )\n\n    return (\n        <div>\n            {openNotesModal && (\n                <Button onClick={() => setOpenNotesModal(false)} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: openNotesModal,\n                    [classes.drawerClose]: !openNotesModal,\n                    })}\n                    classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: openNotesModal,\n                        [classes.drawerClose]: !openNotesModal,\n                    }),\n                    }}\n            >\n                {openNotesModal ? getNotesView() : closedView}\n                <AssignTasksWrapper openTasksModal={openTasksModal} setOpenTasksModal={setOpenTasksModal} interviewId={interviewId} organizationId={companyId} reload={reload} setReload={setReload} />\n            </Drawer>\n        </div>\n    )\n}\n\nconst NotesMenuWrapper = ({reload, setReload, interviewId}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        interviewAPI.getNotesByInterviewId(interviewId, getEncodedDevPassword())\n            .then(data => setNotes(data.notes))\n    }, [interviewId, reload])\n\n    return (\n        <NotesMenu\n            notes={notes}\n            uuid={interviewId}\n            uuid_key=\"interview_note\"\n            reload={reload}\n            setReload={setReload}\n        />\n    )\n}\n\nconst AssignTasksWrapper = ({openTasksModal, setOpenTasksModal, interviewId, organizationId, reload, setReload}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n\n    useEffect(() => {\n        if(devPassword) {\n        tasksApi.getTasksFromOrganization(organizationId, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksByInterviewId(interviewId)\n            .then(data => setAlreadyAssignedTasks(data))\n        }\n    }, [reload, organizationId, interviewId])\n\n    return (\n        <AssignTasks\n            modalOptions={{\n                open: openTasksModal,\n                handleClose: () => setOpenTasksModal(false)\n            }}\n            alreadyAssignedTasks={alreadyAssignedTasks}\n            organizationTasks={organizationTasks}\n            setReload={setReload}\n            assignKey=\"interview\"\n            assignUUIDValue={interviewId}\n        />\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\n\nexport const MeetingDisplayName = ({ roomName, interviewId, companyId }) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\n            <JitsiWrapper admin={true} roomName={roomName} displayName={shouldDisplayForm.name} interviewId={interviewId} companyId={companyId}/>\n    }\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(`${data?.firstName || \"\"} ${data?.lastName || \"\"}`)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} companyId={companyId} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId, companyId }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`} interviewId={interviewId} companyId={companyId}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"} interviewId={interviewId}/>\n    )\n}","import {useDropzone} from \"react-dropzone\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\n\nconst FilesDropzone = ({onDrop}) => {\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\n    return <Paper style={{\n        padding: \"2em\",\n        paddingTop: \"4em\",\n        paddingBottom: \"4em\",\n        backgroundColor: color,\n        justifyContent: \"center\",\n        display: \"flex\"\n    }} {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n            isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Drag and drop files here, or click to select them</p>\n        }\n    </Paper>\n}\n\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const jobSeekerAPI = {\n\n    getJobSeeker: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    getFiles: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    insertFiles: function(files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({files: files})\n        })\n    }\n}","import Swal from \"sweetalert2\";\nimport {useParams} from \"react-router-dom\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    }\n}));\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\n    const [file, setFile] = useState(null)\n\n    const classes = useStyles()\n\n    const handleChange = (event) => {\n        setFile(event.target.value)\n    }\n\n    const handleClose = () => {\n        setFile(null)\n        setOpen(false)\n    }\n\n    const handleSave = () => {\n        onSave(file)\n        setFile(null)\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Select file to attach</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={file}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={null}>\n                                    <em>None</em>\n                                </MenuItem>\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst FileCard = ({file, index, handleDelete}) => {\n    return <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </Paper>\n}\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n\n    const {loggedIn} = useLoggedIn()\n    const user = jwtUtils.getUser()\n\n    const [name, setName] = useState(user?.firstName || \"\")\n    const [surname, setSurname] = useState(user?.lastName || \"\")\n    const [email, setEmail] = useState(user?.mail || \"\")\n    const [files, setFiles] = useState([])\n    const [loadedFiles, setLoadedFiles] = useState([])\n    const [open, setOpen] = useState(false)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    useEffect(() => {\n        if(loggedIn)\n            jobSeekerAPI.getFiles().then(files => {\n                setLoadedFiles(files)\n            })\n    }, [])\n\n    const apply = () => {\n        if (validate()) {\n            if (files === []) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else {\n                validatedApply(files)\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        withSwal({\n            loadingTitle: \"Applying\",\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully applied for this offer!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't process your application for this offer\",\n        })\n    }\n\n    const validate = () => {\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    const handleDeleteFile = (index) => {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const onAttachFile = (newFile) => {\n        setFiles(oldFiles => oldFiles.concat([newFile]))\n    }\n\n    return (\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\n                <Button style={{height: \"100%\"}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={handleClickOpen}\n                        fullWidth>\n                    Attach saved file\n                </Button>\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\n            </Grid>}\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\n            </Grid>)}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item md={9} xs={false} />\n            <Grid item md={3} xs={12}>\n                <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={apply}\n                        fullWidth>\n                    Apply\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport React from \"react\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return <div>\n        <Card variant=\"outlined\"\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n            {cardContent}\n        </Card>\n    </div>\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Typography} from '@material-ui/core'\n\n\nexport const SingleMenu = ({ buttons, menuName, offer, history }) => {\n\n    const [anchor, setAnchor] = useState(null)\n\n    const handleClick = (event) => {\n        setAnchor(event.currentTarget)\n    } \n\n    const handleClose = () => {\n        setAnchor(null)\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick} variant=\"outlined\" color=\"primary\">{ menuName }</Button>\n    \n            <Menu\n                anchorEl={anchor}\n                keepMounted\n                open={!!anchor}\n                onClose={handleClose}\n            >\n                {buttons.map(button => (<MenuItem key={button.text}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                            </MenuItem>))}\n            </Menu>\n\n        </div>\n    )\n\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\nimport {SingleMenu} from './SingleMenu.js'\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const groups = (buttons) => buttons.reduce((groups, item) => {\n        const group = (groups[item.menu] || []);\n        group.push(item);\n        groups[item.menu] = group;\n        return groups;\n      }, {});\n\n    const getButtons = () => {\n        const user = jwtUtils.getUser()\n\n        if (user?.userType == \"hr\" || user?.userType == \"organization\") {\n            return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                        {\n                        Object.entries(groups(props.buttons)).map(([menu, buttons]) => {\n                            return <Box key={menu} mr={1} ml={1}>\n                                <SingleMenu menuName={menu} buttons={buttons} offer={offer} history={history} />\n                            </Box>\n                            })\n                        }\n                    </div>)\n        }\n\n        return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n            {props.buttons.map(button => {\n            return <Box key={button.text} mr={1} ml={1}>\n                <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                    <Typography>\n                        {button.text}\n                    </Typography>\n                </Button>\n            </Box>})}\n            </div>\n        )\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                {getButtons()}\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`),\n        menu: \"Apply menu\",\n        style: {color: 'primary', variant: 'contained'}\n    }]\n}\n","import React from \"react\";\n\nexport const PickUpOffer = () =>\n    <div>\n        Pick up offer\n    </div>","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"./EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../../utils/Enums\";\nimport {getFilterValueByType} from \"../../../utils/functions\";\nimport {EStellaAutocomplete} from '../../EStellaAutocomplete'\n\nexport const InDrawerFilter = (props) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        props.toggleDrawer()\n        props.onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\n\nexport const ActiveFilter = (props) => {\n\n    return (\n        <Grid item>\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\n                {getIconFromFilterType(props.filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {InDrawerFilter} from \"./InDrawerFilter\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = (props) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        props.onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        props.reloadOffers(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\n                                fixedOffers={props.fixedOffers}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    fixedOffers: PropTypes.array.isRequired,\n    reloadOffers: PropTypes.func.isRequired\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {Filter} from \"../filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterOffers} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [fetching, setFetching] = useState(true)\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer's details!\",\n                        icon: \"error\"\n                    })\n                })\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n                setFetching(false)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetching(false)\n                    setFetchError(true)\n                })\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = () =>\n        selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n\n    const offersList = () =>\n        <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return fetchError ? <Redirect to=\"/\" /> : (fetching ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter offers={offers}\n                            onFilterSubmitted={handleFilterSubmitted}\n                            fixedOffers={fixedOffers}\n                            reloadOffers={handleFilterSubmitted} />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView()} list={offersList()} />}\n        />)\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Edit offer\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Delete offer\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.go(0),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        },\n        menu: \"Applications Menu\"\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\n\nexport const ApplicationsList = ({applications, onSelectedApplication, forDev=false}) => {\n\n    const extractData = (applicationData) => {\n\n        const application = forDev ? applicationData.application : applicationData\n\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: applicationData\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return (\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n            isSelectable={!!onSelectedApplication}\n        />\n    )\n}","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId, devMails) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {\n            method: \"PUT\",\n            body: JSON.stringify({\"devs\": devMails}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n    },\n\n    getApplicationsForDev: function(organizationId, devMail, devPassword) {\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/applications/forDev/${devMail}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n        },\n\n    getNotesByApplicationIdFromHr: (applicationId) => {\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`)\n            .then(response => response.json())\n    },\n\n    getNotesByApplicationIdFromDev: (applicationId, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n    },\n\n    getAllPossibleStages: function() {\n        return checkedFetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    changeStartDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    startProcess: (id) => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    },\n\n    prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {validateEmail} from \"../../utils/functions\";\n\nexport const ApplicationDetails = ({application, isHR, reload, isDev}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id),\n                    successFunction: () => reload(),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        if ( nextStageRequiresDevs() ) {\n            const devMails = []\n            Swal.fire({\n                title: \"We need more info\",\n                icon: \"warning\",\n                text: 'Next stage of this appliaction requires people with technical knowledge. Please, insert their mails here, splitting them with commas (,)',\n                input: \"text\",\n                preConfirm: (devsMails) => {\n                    if (devsMails) {\n                        devsMails.split(\",\")\n                            .map(mail => mail.trim())\n                            .forEach(mail => devMails.push(mail))\n                        devMails.forEach(mail => {\n                            if(!validateEmail(mail)) {\n                                Swal.showValidationMessage(`${mail} is not a valid email`)\n                                devMails.length = 0\n                            } \n                        })\n                    } else {\n                        Swal.showValidationMessage(\"Please, add mails of such people, as you won't be able to change it later.\")\n                    }\n                }\n            }).then(result => {\n                if (result.isConfirmed) {\n                    doSetNextStage(devMails)\n                }\n            })\n        } else {\n            doSetNextStage([])\n        }\n    }\n\n    const doSetNextStage = (devMails) => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id, devMails),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const nextStageRequiresDevs = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"TASK\"], true)\n\n    const stageRequiresMeeting = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"HR_INTERVIEW\"])\n\n    const nextStageIsOneOf = (types, checkForNext) => {\n        let indexOfNextStage = application?.stages?.findIndex(stage => stage.id === application.stage.id)\n        if (checkForNext) indexOfNextStage += 1\n        return types.includes(application?.stages[indexOfNextStage]?.type)\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        isHR ? history.push(`/meeting/organizer/${application.id}`) : history.push(`/meeting/job_seeker/${application.id}`)\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={9}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>{ isHR || isDev ? 'Candidate' : 'You' } didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        {\n                            stageRequiresMeeting() && !getDisabled() && !isDev &&\n                                (<Grid item xs={3} ><Button color=\"secondary\" variant=\"contained\" onClick={teleportToMO} fullWidth><Typography variant=\"body2\">Plan meeting</Typography></Button></Grid>)\n                        }\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR && !isDev &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    Next Stage\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useEffect, useState} from 'react'\nimport {AssignTasks} from \"../tasks/AssignTasks\";\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\n\nexport const DevApplicationDetails = ({devApplication}) => {\n\n    console.log(devApplication)\n\n    const application = devApplication?.application\n\n    const { getEncodedDevPassword } = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n\n    const [openAssignTasks, setOpenAssignTasks] = useState(false)\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    useEffect(() => {\n        tasksApi.getTasksFromOrganization(devApplication.organizationUUID, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksFromTaskStage(devApplication.taskStageUUID, devPassword)\n            .then(data => setAlreadyAssignedTasks(data))\n    }, [devApplication, reload])\n\n    const assignTask = () => {\n        setOpenAssignTasks(true)\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName || devApplication?.position}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        <Grid item xs={12}>\n{/*                         UNCOMMENT AFTER MERGE WITH NOTES - ES-231 I THINK SO\n                            <div style={{display: 'flex', gap: '1em', flexFlow: 'row wrap'}}>\n                            {\n                                notes.map(note => <SingleNote note={note} />)\n                            }\n                            </div>\n                             */}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={assignTask}>Assign Task</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <div>\n            <ListElementDetails cardContent={getCardContent()}/>\n            <AssignTasks\n                modalOptions={{open: openAssignTasks, handleClose: () => setOpenAssignTasks(false)}}\n                alreadyAssignedTasks={alreadyAssignedTasks}\n                organizationTasks={organizationTasks}\n                setReload={setReload}\n                assignKey=\"taskStage\"\n                assignUUIDValue={devApplication.taskStageUUID}\n            />\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR, isDev}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                !isDev &&\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import {useState} from 'react'\nimport {Button, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {constants} from \"../../utils/constants\";\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {NotesMenu} from './NotesMenu'\n\nconst drawerWidth = 600;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\n\nexport const NotesDrawer = ({ notes, uuid, uuid_key, reload, setReload, anchor = \"left\", shouldUseAuthFetchToPost = false }) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState(false)\n\n    const handleNoteClick = () => {\n        setOpen(true)\n    }\n\n    const closeNote = () => {\n        setOpen(false)\n    }\n\n    const closedView = (<List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                            <ListItem>\n                                <Button onClick={handleNoteClick}>\n                                    <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                                </Button>\n                            </ListItem>\n                        </List>)\n\n    const getCloseIconStyling = () => anchor === \"left\" ? {left: '20px'} : {right: '20px'}\n\n    return (\n        <div>\n            {open && (\n                <Button onClick={closeNote} style={{position:'absolute', top: '5em', zIndex: '10001', ...getCloseIconStyling()}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                  })}\n                  classes={{\n                    paper: clsx({\n                      [classes.drawerOpen]: open,\n                      [classes.drawerClose]: !open,\n                    }),\n                  }}\n                anchor={anchor}\n            >\n                {open ? <NotesMenu notes={notes} uuid={uuid} uuid_key={uuid_key} reload={reload} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> : closedView}\n            </Drawer>\n        </div>\n    )\n}","import {Redirect, useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {DevApplicationDetails} from './DevApplicationDetails';\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\nimport {NotesDrawer} from '../notes/NotesDrawer'\nimport { applicationsAPI } from \"../../utils/apis/applicationsAPI\";\n\nexport const ApplicationsView = ({getApplications, isHR, isDev, mailInBase64, organizationUUID}) => {\n\n    const {id} = useParams()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const devPassword = getEncodedDevPassword()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [selectedApplicationNotes, setSelectedApplicationNotes] = useState([])\n\n    const text = isDev ? `We weren't able to get this offer's applications! You will be redirected to main page.` : isHR ? `We weren't able to get this offer's applications! You will be redirected to your offers.` : `We weren't able to get your applications!`\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id, mailInBase64, devPassword)\n            .then(data => {\n                const applications = isDev ? data.filter(application => application.application.status !== \"REJECTED\") : data\n                setApplications(applications)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: text,\n                    icon: \"error\"\n                }).then(() => {\n                    setFetchError(true)\n                    setFetching(false)\n                })\n            })\n    }, [setApplications, getApplications, id, reload])\n\n    useEffect(() => {\n        if (selectedApplication && isHR) {\n            applicationsAPI.getNotesByApplicationIdFromHr(selectedApplication.id)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        } else if (selectedApplication && isDev) {\n            applicationsAPI.getNotesByApplicationIdFromDev(selectedApplication.application.id, devPassword)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        }\n    }, [selectedApplication, reload])\n\n    const getNotesDrawerAnchor = () => isHR ? \"left\" : isDev ? \"right\" : \"none\"\n    const getNotesDrawerStyle = () => isDev ? {marginRight: '3em'} : {marginLeft: '3em'}\n    const getSelectedApplicationId = () => isDev ? selectedApplication?.application?.id : selectedApplication?.id\n\n    const getStandardView = (innerApplications, WrappedComponent = ApplicationDetails, wrappedProps = {application: selectedApplication, isHR, reload: () => setReload(!reload), isDev}, forDev=false) => (\n        <>\n            <div style={{...getNotesDrawerStyle()}}>\n                <StandardViewAndFilterLayout\n                    filter={null}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <WrappedComponent {...wrappedProps}  /> :\n                                <div>Select application</div>}\n                            list={<ApplicationsList\n                                forDev={forDev}\n                                applications={innerApplications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                />\n            </div>\n            { \n                (isHR || isDev) && getSelectedApplicationId() &&\n                <NotesDrawer\n                    notes={selectedApplicationNotes}\n                    uuid={getSelectedApplicationId()}\n                    uuid_key=\"cv_note\"\n                    reload={reload}\n                    setReload={setReload}\n                    anchor={getNotesDrawerAnchor()}\n                    shouldUseAuthFetchToPost={isHR}\n                /> \n            }\n        </>\n    )\n\n    const getDevView = () => getStandardView(applications.map(application => {\n        return {\n            ...application,\n            organizationUUID\n        }\n    }), DevApplicationDetails, {devApplication: {...selectedApplication, organizationUUID}, isDev, reload: () => setReload(!reload)}, true)\n\n    const getView = () => isDev ? getDevView() : getStandardView(applications)\n\n    return fetchError ? <Redirect to={isHR ? '/hr/offers' : '/'} />\n        : (fetching ? <CenteredCircularProgress size={80} />\n            : (applications?.length !== 0 && applications !== undefined ?\n                getView()\n                 : <EmptyApplicationsView isHR={isHR} isDev={isDev} />\n            )\n        )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\nimport React from \"react\";\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                color=\"secondary\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect, useState} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n    const [fetchError, setFetchError] = useState(false)\n\n    const history = useHistory()\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => setFetchError(true))\n                })\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => history.push('/hr/offers'),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\n        <Grid container spacing={2}>\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    minRows: 8,\n                    maxRows: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        form=\"offer-form\"\n                        color=\"primary\"\n                        fullWidth>\n                    Save offer\n                </Button>\n            </Grid>\n        </Grid></div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get process data!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get possible stages!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n    }, [reload, processId])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        if(items !== getStages()) {\n            withSwal({\n                loadingTitle: \"Updating stages\",\n                promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n                successSwalTitle: \"Stages Updated\",\n                successFunction: () => setReload(reload => !reload)\n            })\n        }\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\n        firstListItems={getStages()}\n        secondListItems={getPossibleStages()}\n        //temporary solution - would be the best to actually change TwoColumnDnD to fire callback about setting items length\n        forbiddenIndexes={[0, getStages().length]}\n        warningFunction={() => fireSwal(\n            \"You can't do this!\",\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\n            \"warning\"\n        )}\n        itemRender={(item) => (\n            <Box m={1}>\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                    <CardContent>\n                        <Typography>{item.type}</Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )}\n        onFirstListChange={(items) => handleSubmit(items)}\n        leftSubmitGridProps={{xs: 10}}\n        centerSubmitGridProps={{xs: 1}}\n        rightSubmitGridProps={{xs: 1}}\n        materialButtonProps={{variant: \"outlined\"}}\n        submitDivStyle={{marginTop: \"15px\"}}\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n    />\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageDate = ({selectedDate, onChange, processStartDate, disabled, label}) => {\n\n    const handleDateChange = (date) => {\n        if (!processStartDate || date > new Date(processStartDate)) {\n            onChange(date)\n        } else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than today!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n            disabled={disabled}\n            label={label}\n        />\n}\n\nManageDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageDate} from \"./ManageDate\";\nimport {Button, Card, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport Swal from \"sweetalert2\";\nimport {useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const Dates = ({ process, reload, setReload }) => {\n\n    const [selectedEndDate, setSelectedEndDate] = useState(process?.endDate || new Date().toLocaleDateString())\n    const [selectedStartDate, setSelectedStartDate] = useState(process?.startDate || new Date().toLocaleDateString())\n    \n    const isProcessStarted = () => process?.startDate != null && new Date(process?.startDate) <= new Date()\n\n    const startProcess = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after you start your process\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Starting process\",\n                    promise: () => processAPI.startProcess(process.id),\n                    successSwalTitle: \"Process Started!\",\n                    successFunction: () => setReload(!reload)\n                })\n            }\n        })\n    }\n\n    const handleEndSubmit = () => {\n        withSwal({\n            loadingTitle: \"Updating end date\",\n            promise: () => processAPI.changeEndDate(process.id, selectedEndDate),\n            successSwalTitle: \"Date updated\",\n            successFunction: () => setReload(!reload)\n        })\n    }\n\n    const handleStartSubmit = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after the date your process will start\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Updating start date\",\n                    promise: () => processAPI.changeStartDate(process.id, selectedStartDate),\n                    successSwalTitle: \"Date updated\",\n                    successFunction: () => setReload(!reload)\n                })      \n            }\n        })\n    }\n\n    return (\n        <>\n            <Grid container spacing={3} style={{height: \"100%\", textAlign: 'center'}} direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule Start Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedStartDate}\n                                        onChange={(date) => setSelectedStartDate(date)}\n                                        label=\"Start of recruitment process\"\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleStartSubmit} disabled={isProcessStarted()}>Schedule</Button>\n                            </div>\n                            <Divider style={{marginTop: '1em', marginBottom: '1em'}} />\n                            <Typography variant=\"h6\" style={{marginBottom: '5px'}}>Or</Typography>\n                            <Button variant=\"contained\" color=\"primary\" onClick={startProcess} disabled={isProcessStarted()}>Start your process now!</Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule End Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedEndDate}\n                                        onChange={(date) => setSelectedEndDate(date)}\n                                        processStartDate={process?.startDate}\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleEndSubmit}>Schedule</Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\n","import {ManageStages} from \"./ManageStages\";\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Dates} from \"./Dates\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [fetchError, setFetchError] = useState(false)\n    const [process, setProcess] = useState(null)\n\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [id, reload])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const ManageProcessInside = () =>\n        process == null ? <CenteredCircularProgress size={80} /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"1em\", marginTop: '1em'}}>\n                            <Dates process={process} reload={reload} setReload={setReload} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid item style={{marginTop: '1em'}}>\n                            <ManageStages processId={id}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n\n    return fetchError ? <Redirect to=\"/\" /> : <ManageProcessInside />\n}","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const LoginForm = (props) => {\n\n    const {loggedIn, login} = useLoggedIn()\n\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Logging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                login()\n                props.reload.setReload(!props.reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(props.onSubmit) {\n            props.onSubmit(data)\n        }\n    }\n\n    return loggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <FormField\n                            control={control}\n                            name=\"login\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Login\"\n                            }}\n                        />\n                        <FormField\n                            control={control}\n                            name=\"password\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Password\",\n                                autoComplete: \"off\",\n                                type: \"password\"\n                            }}\n                        />\n                        <Grid item xs={false} sm={8} />\n                        <Grid item xs={12} sm={4}>\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth color=\"primary\">Login</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Card>\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const CompanyRegistration = () => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import React, {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = () => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [outsideValues, setOutsideValues] = useState(null)\n    const [fetchError, setFetchError] = useState(false)\n    const [userData, setUserData] = useState(null)\n\n    let redirectPath = \"/\"\n\n    const type = paramType || propType\n\n    useEffect(() => {\n        if(type === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    setOutsideValues({hosts: data?.hosts || [], guest: data?.application?.jobSeeker?.user?.mail || '', uuid: data?.id})\n                })\n                .catch(() =>\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We couldn't find the interview data for this application! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => {\n                        setFetchError(true)\n                    })\n                )\n        } else {\n            setUserData({uuid, userType: type})\n        }\n    }, [type, uuid])\n\n    const getStillFetching = () => type === \"organizer\" ? !!outsideValues : !!userData \n\n    return fetchError ? <Redirect to={redirectPath} /> : (\n        getStillFetching() ? <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                                userData={userData}\n                                outsideJwt={jwtUtils.getAuthToken()}\n                                drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}}\n                                outsideMeetingValues={outsideValues} />: <CenteredCircularProgress size={80} />\n    )\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {hrOfferButtons} from \"../HrOfferButtons\";\nimport {theme} from \"../../../utils/theme\";\nimport {OffersView} from \"./OffersView\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst marginWithDrawer = \"100px\"\n\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\n    <OffersView\n        getOffers={() => offersAPI.getOffersFromHr()}\n        buttons={hrOfferButtons(theme)}\n    />\n    <Drawer\n        variant=\"permanent\"\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\n    >\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n            <ListItem>\n                <Link to=\"/hr/offers/add\">\n                    <IconButton>\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                    </IconButton>\n                </Link>\n            </ListItem>\n        </List>\n    </Drawer>\n</div>\n\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Box from \"@material-ui/core/Box\";\nimport FilesDropzone from \"./FilesDropzone\";\n\nfunction _base64ToArrayBuffer(base64) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst FilesChangedTip = ({onSaveFiles}) =>\n    <Paper elevation={0} variant=\"outlined\" style={{\n        padding: \"1em\",\n        paddingLeft: \"1em\",\n        backgroundColor: deepOrange[100],\n        display: \"flex\"\n    }}>\n        <Grid container>\n            <Grid item xs={12} md={9} lg={12}>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    height=\"100%\"\n                >\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={12}>\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\n            </Grid>\n        </Grid>\n    </Paper>\n\nconst OldFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\n\nconst NewFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\n    const ch = <>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\n            >\n                <GetAppOutlined/>\n            </IconButton>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </>\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n        {initialFiles.some(a => a.id === file.id) ?\n            <OldFilePaper>{ch}</OldFilePaper>:\n            <NewFilePaper>{ch}</NewFilePaper>}\n    </Grid>\n}\n\nexport const FilesPage = () => {\n    const [downloadedFiles, setDownloadedFiles] = useState([])\n    const [files, setFiles] = useState([])\n\n\n    const downloadedFilesSet = new Set(downloadedFiles)\n    const filesSet = new Set(files)\n\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\n\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\n        f.sort((a, b) => a.id - b.id)\n        setDownloadedFiles(f)\n        setFiles(f)\n    })\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    useEffect(\n        fetchFiles,\n    []\n    )\n\n    function handleDownload(fileName, base64) {\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    function handleDelete(index) {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    function onSaveFiles() {\n        withSwal({\n            title: \"Saving files\",\n            promise: () => jobSeekerAPI.insertFiles(files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved your files!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't save these files for you\",\n            successFunction: fetchFiles\n        })\n    }\n\n    return <div>\n        <Grid container spacing={2}>\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\n                </Grid>\n                {files.map((value, index) =>\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\n                )}\n            </Grid>\n            <Grid item xs={false} md={6} lg={10} />\n            <Grid item xs={12} md={6} lg={2}>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {userTypes} from \"../../utils/Enums\";\n\n\nfunction UserInfo({label, value}) {\n    return <><Grid item xs={12} sm={3}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\n    </Grid>\n    <Grid item xs={12} sm={9}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\n    </Grid></>\n}\n\nfunction displayType(userType) {\n    switch (userType) {\n        case userTypes.JOB_SEEKER:\n            return \"Candidate\"\n\n        case userTypes.HR:\n            return \"Human Resources Specialist\"\n\n        case userTypes.ORGANIZATION:\n            return \"Organization\"\n\n        default:\n            return undefined\n    }\n}\n\nexport const ProfilePage = () => {\n    const user = jwtUtils.getUser()\n    return <Grid container>\n        <Grid item lg={2} md={1} sm={false}/>\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\n            <UserInfo label=\"ID:\" value={user.userId} />\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\n            <UserInfo label=\"Mail:\" value={user.mail} />\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\n        </Grid>\n        <Grid item lg={2} md={1} sm={false}/>\n    </Grid>\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const userAPI = {\n\n    updateUser: function (userRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userRequest)\n        })\n    },\n\n    updatePersonalData: function (personalData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(personalData)\n        })\n    },\n\n    updatePassword: function (passwordRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(passwordRequest)\n        })\n    }\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../commons/formsCommons/FormField\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useEffect} from \"react\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userAPI} from \"../../utils/apis/UserAPI\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst EditPersonalInfoForm = () => {\n    const user = jwtUtils.getUser()\n    const defaultFormState = {\n        mail: user.mail,\n        firstName: user.firstName,\n        lastName: user.lastName\n    }\n\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = ({firstName, lastName}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\n            successSwalTitle: \"Successful change!\",\n            errorSwalTitle: \"We couldn't change your personal data!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"mail\"\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Email\",\n                                disabled: true\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"firstName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"First Name\",\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"lastName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Last Name\",\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nconst EditPasswordForm = () => {\n    const defaultFormState = {\n        oldPassword: \"\",\n        newPassword: \"\",\n        repeatedPassword: \"\"\n    }\n\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const newPasswordInput = watch(\"newPassword\")\n\n    useEffect(\n        () => {\n            if(newPasswordInput)\n                trigger(\"repeatedPassword\")\n        },\n        [newPasswordInput, trigger]\n    )\n\n    const onSubmit = ({oldPassword, newPassword}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\n            successSwalTitle: \"Successfully changed password!\",\n            errorSwalTitle: \"We couldn't change your password!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"oldPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Current password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"newPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"New password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"repeatedPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Repeat password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nexport const SettingsPage = () => {\n    return <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <EditPersonalInfoForm />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <EditPasswordForm />\n            </Grid>\n        </Grid>\n    </>\n}","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid} from \"@material-ui/core\";\nimport {FilesPage} from \"./FilesPage\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\nimport {ProfilePage} from \"./ProfilePage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction TabPanel({ children, value, tabName, ...other }) {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== tabName}\n            id={`tabpanel-${tabName}`}\n            aria-labelledby={`tab-${tabName}`}\n            style={{padding: \"1em\", color: \"primary\"}}\n            {...other}\n        >\n            {value === tabName && <Box>{children}</Box>}\n        </div>\n    );\n}\n\nfunction a11yProps(tabName) {\n    return {\n        id: `tab-${tabName}`,\n        'aria-controls': `tabpanel-${tabName}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    indicator: {\n        left: \"0px\"\n    }\n}));\n\nexport default function SettingsOverlay(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const state = props.location?.state\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\n    const user = jwtUtils.getUser();\n\n    const handleChange = (event, newValue) => setValue(newValue)\n\n    return user ? (<Grid container>\n        <Box clone order={{xs: 2, md: 1}}>\n            <Grid item xs={12} md={9} lg={10}>\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\n                    <ProfilePage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\n                    <SettingsPage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\n                    <FilesPage />\n                </TabPanel>\n            </Grid>\n        </Box>\n        <Box clone order={{xs: 1, md: 2}}>\n            <Grid item xs={12} md={3} lg={2}>\n                <Tabs\n                    value={value}\n                    orientation=\"vertical\"\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"settings tabs\"\n                >\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\n                </Tabs>\n            </Grid>\n        </Box>\n        </Grid>) : <Redirect to=\"/\" />;\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            }\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\n\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\n    <Box mt={0} mb={0}>\n        <Grid container>\n            {users.map((user, idx) =>\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                    <Grid container>\n                        <Grid item xs={11}>\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\n                                                 mail={user.mail}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Box mt={3}>\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\n                                    <ClearIcon fontSize=\"medium\"/>\n                                </IconButton>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>)}\n        </Grid>\n    </Box>","import {Grid} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\n\nexport const OrganizationPartnersManagement = (props) => {\n\n    const [users, setUsers] = useState([])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n        organizationsAPI.getHrPartnersByOrganization()\n            .then(data => {\n                updateUsers(data)\n            })\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\n        </Grid>\n    </div>\n}","import {Card, Typography} from '@material-ui/core';\n\nexport const SingleTestCase = ({ testCase }) => {\n\n    return (\n        <Card style={{margin: '1em 0', padding: '1em', height: '8vh'}}>\n            <Typography variant=\"body1\">\n                Test Data: {testCase?.testData} <br />\n                Expected Result: {testCase?.expectedResult}\n            </Typography>\n        </Card>\n    )\n}","import {Card, Typography, useTheme} from '@material-ui/core'\n\nexport const SingleResult = ({ result }) => {\n\n    const theme = useTheme()\n\n    console.log(result)\n\n    const getBackgroundColor = () => result?.err || !result?.passed ? theme.status.danger.light : theme.status.success.light\n\n    const getText = () => result?.err ? `Error: ${result.err}` : `Result: ${result.result}`\n\n    return (\n        <Card style={{backgroundColor: getBackgroundColor(), margin: '1em 0', padding: '1em', height: '8vh', alignItems: 'center', display: 'flex'}}>\n            <Typography variant=\"body1\">\n                {getText()}\n            </Typography>\n        </Card>\n    )\n}","import MonacoEditor from 'react-monaco-editor';\nimport {decodeBase64} from '../../../utils/hooks/Base64';\nimport {MarkdownViewer} from '../../commons/MarkdownViewer';\nimport {Card, Typography} from '@material-ui/core'\nimport { useState, useRef, useEffect } from 'react'\nimport {SingleTestCase} from './SingleTestCase'\nimport {SingleResult} from './SingleResult'\n\nexport const SingleTaskReview = ({ task }) => {\n    const { code, results, tests, description } = task\n\n    const decodedResults = JSON.parse(decodeBase64(decodeBase64(results)))\n    const decodedTestCases = JSON.parse(decodeBase64(tests))\n\n    const [height, setHeight] = useState(0)\n    const ref = useRef(null)\n\n    useEffect(() => {\n        setHeight(ref.current.clientHeight)\n    })\n\n    return (\n        <div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', width: \"100%\", height: \"40%\"}}>\n                <MonacoEditor\n                    value={decodeBase64(code)}\n                    theme=\"vs-dark\"\n                    language=\"plain-text\"\n                    width=\"100%\"\n                    height={`${height+2}px`}\n                    options={{readOnly: true}}\n                />\n                <Card style={{ padding: '1em', width: '100%' }} variant=\"outlined\" ref={ref}>\n                    <MarkdownViewer markdown={decodeBase64(description)} />\n                </Card>\n            </div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', marginTop: '2em', justifyContent: 'space-between'}}>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Test Cases:</Typography>\n                    {decodedTestCases.map((testCase, idx) => (<SingleTestCase key={idx} testCase={testCase}/>))}\n                </Card>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Results:</Typography>\n                    {decodedResults.map((result, idx) => (<SingleResult key={idx} result={result} />))}\n                </Card>\n            </div>\n        </div>\n    )\n}","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel} from 'react-responsive-carousel';\nimport {SingleTaskReview} from './SingleTaskReview'\n\nexport const TasksCarousel = ({ tasks }) => {\n\n    return (\n        <div style={{ marginLeft: '5em'}}>\n            <Carousel\n                infiniteLoop\n            >\n                {tasks.map((task, idx) => <SingleTaskReview task={task} key={idx} />)}\n            </Carousel>\n        </div>\n    )\n}","import {useEffect, useState} from 'react'\nimport {tasksApi} from '../../../utils/apis/tasksAPI';\nimport {useDevPassword} from '../../../utils/hooks/useDevPassword'\nimport {NotesDrawer} from '../../notes/NotesDrawer';\nimport {TasksCarousel} from './TasksCarousel'\nimport Swal from 'sweetalert2'\nimport {useHistory} from 'react-router-dom'\nimport {Typography} from '@material-ui/core'\nimport CenteredCircularProgress from '../../commons/CenteredCircularProgress'\n\nexport const ReviewTask = ({ id: taskStageUUID }) => {\n\n    const { getEncodedDevPassword } = useDevPassword()\n    \n    const history = useHistory()\n\n    const [notes, setNotes] = useState([])\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n       tasksApi.getNotesWithTasksByTaskUUID(taskStageUUID, getEncodedDevPassword())\n            .then(data => {\n                setNotes(data?.notes || [])\n                setTasks(data?.tasks || [])\n                setIsFetching(false)\n            })\n            .catch( err => {\n                    setIsFetching(false)\n                    Swal.fire({\n                        title: \"You're not supposed to be here!\",\n                        text: \"We're sorry, but password you have provided was incorrect.\",\n                        icon: \"error\"\n                    }).then(() => {\n                        history.push('/')\n                    })\n                }   \n            )\n    }, [taskStageUUID, reload])\n\n    \n\n    return(\n        <div>\n            {\n                isFetching ? <CenteredCircularProgress size={100} /> : (\n                    <div>\n                        <NotesDrawer notes={notes} uuid={taskStageUUID} uuid_key=\"task_note\" reload={reload} setReload={setReload} />\n                        { tasks?.length > 0 && !isFetching ? <TasksCarousel tasks={tasks} /> : <Typography variant=\"h5\" style={{textAlign: 'center'}}> There are no tasks results to show! </Typography>}\n                    </div>\n                )\n            }\n        </div>\n    )\n}","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    const addTestCaseAndClearFields = () => {\n        addTestCase(testCase)\n        setTestCase({})\n    }\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCaseAndClearFields(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    useEffect(() => {\n        handleSubmit(testCases)\n    }, [testCases])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {encodeBase64} from '../../../utils/hooks/Base64';\n\nlet task = {id: null}\n\nconst clearTask = () => task = {id: null}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(setReload, credentials)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n    task['testsBase64'] = encodeBase64(JSON.stringify(testCases))\n}\n\nconst createTests = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(setReload, credentials)\n        }\n    })\n}\n\nconst createTimeLimit = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            create(setReload, credentials)\n        }\n    })\n}\n\nconst create = (setReload, credentials) => {\n    tasksApi.updateTasks(task, credentials, setReload)\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\n\nexport const TasksList = ({ fetchTasks, organizationId }) => {\n\n    const [reload, setReload] = useState(false)\n\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        fetchTasks(organizationId, getEncodedDevPassword())\n            .then(data => {\n                setTasks(data)\n            })\n    }, [fetchTasks, organizationId, reload])\n\n    const addTask = () => {\n        createTask(setReload, { password: getEncodedDevPassword(), organizationId })\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginRight: '5%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={[]}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n                anchor=\"right\"\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","import {useState} from 'react'\nimport {Drawer, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {TasksList} from './tasks/crud/TasksList';\nimport {ApplicationsView} from './applications/ApplicationsView'\n\nexport const DevView = ({ fetchTasks, getApplications, id, mailInBase64 }) => {\n\n    const [view, setView] = useState('edit')\n\n    const getView = () => {\n        if (view === 'edit') {\n            return (\n                <TasksList\n                    fetchTasks={fetchTasks}\n                    organizationId={id}\n                />\n            )\n        } else if (view === 'assign') {\n            return (\n                <ApplicationsView\n                    isHR={false}\n                    isDev={true}\n                    getApplications={getApplications}\n                    mailInBase64={mailInBase64}\n                    organizationUUID={id}\n                />\n            )\n        } else return null\n    }\n\n    return (\n    <div>\n        <div style={{marginLeft: '10%'}}>\n            {getView()}\n        </div>\n        <Drawer\n            open\n            variant=\"permanent\"\n        >\n            <List style={{marginTop: '5em'}}>\n                <ListItem button onClick={() => setView('edit')}>\n                    <ListItemIcon>\n                        <EditIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Edit Tasks\" />\n                </ListItem>\n                <ListItem button onClick={() => setView('assign')}>\n                    <ListItemIcon>\n                        <AssignmentIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Assign Task\" />\n                </ListItem>\n            </List>\n        </Drawer>\n    </div>\n    )\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"./theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {MultipleTasksWrapper} from \"../components/tasks/MultipleTasksWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\nimport {WithDevPassword} from \"../components/tasks/WithDevPassword\";\nimport {ReviewTask} from \"../components/tasks/review/ReviewTask\";\nimport {Note} from '../components/notes/Note';\nimport {tasksApi} from './apis/tasksAPI'\nimport {DevView} from '../components/DevView'\n\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/offers/:id\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/assign/:id/:mailInBase64\", <WithDevPassword WrappedComponent={DevView} wrappedProps={{ fetchTasks: (id, password) => tasksApi.getTasksByOrganization(id, password), getApplications: (organizationId, devMail, devPassword) => applicationsAPI.getApplicationsForDev(organizationId, devMail, devPassword) }} createPassword={(id, password) => `${id}:${password}`} />),\n    createRoute('/task/:taskStageUUID', <MultipleTasksWrapper fetchTasks={(id) => tasksApi.getTasks(id)} />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\n    createRoute(\"/settings\", <SettingsOverlay />),\n    createRoute(\"/tasks/review/:id\", <WithDevPassword WrappedComponent={ReviewTask} wrappedProps={{}} createPassword={(id, password) => `${password}:${id}`} />),\n    createRoute(\"/note\", <Note text=\"Note text as we can see\" tags={[\"Applied\", \"Some tag\", \"Some other tag\"]} />),\n    createRoute(\"*\", <div>Page</div>)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./utils/theme\"\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}