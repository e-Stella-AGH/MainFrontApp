{"version":3,"sources":["utils/hooks/Base64.js","utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/chekedFetch.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/tasks/tasksUtils.js","components/tasks/crud/Task.js","components/commons/formsCommons/WithSwal.js","utils/apis/tasksAPI.js","utils/hooks/useDevPassword.js","components/tasks/AssignTasks.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/WithDevPassword.js","components/EStellaAutocomplete.js","components/notes/TagsList.js","components/notes/Note.js","components/notes/NotesList.js","components/commons/MarkdownEditor.js","utils/apis/NoteApi.js","components/notes/AddNote.js","utils/hooks/useDevMail.js","components/notes/NotesMenu.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/tasks/MultipleTasksWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/commons/formsCommons/FormField.js","components/auth/login/LoginForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/SingleMenu.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","utils/procesStages.js","components/commons/filter/ActiveFilter.js","components/commons/filter/Filter.js","components/commons/sorter/Sorter.js","components/commons/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/commons/filter/EStellaSlider.js","components/offers/InDrawerFilter.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","components/applications/ApplicationTimeline.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","components/applications/DevApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/filters/CustomSwitch.js","components/applications/filters/InDrawerFilter.js","components/notes/NotesDrawer.js","components/applications/ApplicationsView.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageDate.js","components/process/manage/Dates.js","components/process/manage/ManageProcess.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","components/tasks/review/SingleTestCase.js","components/tasks/review/SingleResult.js","components/tasks/review/SingleTaskReview.js","components/tasks/review/TasksCarousel.js","components/tasks/review/ReviewTask.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/DevView.js","components/Page404.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["decodeBase64","base64","Buffer","toString","encodeBase64","string","constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","HttpError","code","message","Error","checkedFetch","url","data","errorMessage","clone","json","status","result","checkResponseStatusOrThrowError","jwtAPI","userId","refreshToken","refreshApiPath","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","localStorage","getItem","getRefreshToken","setItem","get","deleteAuthToken","removeItem","deleteRefreshToken","undefined","catch","Swal","fire","text","icon","window","history","pushState","urlPath","location","reload","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","useHistory","useState","loggedIn","setLoggedIn","logout","push","filterTypes","operators","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginTop","textDecoration","src","alt","width","marginLeft","Button","marginRight","createTheme","danger","main","light","success","secondary","card","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterItems","items","tmpItems","forEach","item","arg","minSalary","maxSalary","organization","includes","operator","filterTags","map","tag","tags","innerTag","some","stage","createFilterFunction","getIconFromFilterType","ListElement","selected","idx","selectedStyle","marginBottom","Card","variant","CardContent","Typography","first","Divider","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","overflowY","handleSelect","getListItems","OffersList","getData","offer","onSelectedOffer","handleShortOfferSelect","Grid","container","border","padding","spacing","defaultProps","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","httpError","offersAPI","offerId","forCandidate","queryParam","surname","files","offerData","offerID","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","title","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","margin","xs","md","flexDirection","sm","Image1","Image2","Image3","interviewAPI","interviewId","applicationId","MeetingFab","onDefaultView","onWhiteboard","onTask","shouldShow","defaultViewAction","whiteboardAction","mainButtonStyles","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","err","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Uint8Array","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","paper","boxShadow","shadows","GenericFileViewer","handleClose","classes","txt","setTxt","fileName","indexOf","File","fileBase64","Modal","onClose","getViewer","getFirstLineFromTaskDescription","descriptionInBase64","firstLine","Task","task","tasksOperations","shouldDisplayMenu","menuAnchor","setMenuAnchor","descriptionBase64","timeLimit","descriptionFileName","Menu","keepMounted","taskOperation","action","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","showLoading","Math","floor","isStatus2xx","close","swalResult","isConfirmed","fallbackTask1","testsBase64","fallbackTask2","tasksApi","organizationId","tasksStageId","taskStageUUID","devPassword","organizationUUID","credentials","setReload","tasksIds","keyValue","tasks","errorSwalTile","useDevPassword","devPasswordKey","getDevPassword","sessionStorage","setDevPassword","getEncodedDevPassword","deleteDevPassword","modal","AssignTasks","modalOptions","alreadyAssignedTasks","organizationTasks","assignKey","assignUUIDValue","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","top","left","transform","empty","actionTitle","newTasksIds","assignedTask","ModalButtons","Section","overflow","GridList","flexWrap","cols","GridListTile","TasksPassword","handleSubmit","setPassword","TextField","onChange","target","label","onKeyPress","preventDefault","useKeyPress","CardActions","WithDevPassword","WrappedComponent","wrappedProps","createPassword","params","useParams","bottom","showCancelButton","EStellaAutocomplete","options","Autocomplete","onSelect","renderInput","TagsList","deletable","onDelete","Chip","makeTag","Note","note","author","whiteSpace","NotesList","notes","MarkdownEditor","handleChange","view","usableView","menu","html","renderHTML","NoteApi","paramId","note_body","dev_password","param","AddNote","onCancel","uuid","uuid_key","shouldUseAuthFetchToPost","noteText","setNoteText","setTags","currentTag","setCurrentTag","devMailKey","getDevMail","setDevMail","useDevMail","addNoteApiCall","doAddNote","addDevNote","devMail","preConfirm","getPopup","querySelector","showValidationMessage","gap","flexFlow","varient","NotesMenu","setTag","showAdd","setShowAdd","m","Set","flatMap","ably","Realtime","process","TaskWrapper","toSolveTask","submitLeftOffset","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","outerMonacoWrapperStyle","codeCheckerBaseLink","fetchTasks","solverId","taskStartedCallback","absoluteOffset","settings","right","submit","sharingCodeFunctions","MultipleTasksWrapper","propId","setTasks","isFetching","setIsFetching","currentSlide","setCurrentSlide","prev","state","next","editors","PrevButton","disabled","NextButton","showIndicators","showArrows","showStatus","selectedItem","ind","statusFormatter","curr","JitsiWrapper","admin","roomName","displayName","companyId","interviewKind","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","setTaskStageUUID","setShouldShow","getTasksByInterviewUUID","isHRInterview","client_id","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","AdminMeetingDrawer","openNotesModal","setOpenNotesModal","openTasksModal","setOpenTasksModal","closedView","List","ListItem","fontSize","input","inputAttributes","autocapitalize","Drawer","clsx","NotesMenuWrapper","setNotes","AssignTasksWrapper","setOrganizationTasks","setAlreadyAssignedTasks","MeetingDisplayNameForm","setName","mt","mb","onSubmit","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","error","helperText","LoginForm","shouldRedirectIfLoggedIn","useForm","mode","defaultValues","control","reset","paddingBottom","rules","required","pattern","defaultValue","autoComplete","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","getForm","innerReload","onNameFormSubmit","Meeting","Fetched","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","paddingTop","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","setFile","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","DialogActions","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","newFiles","oldFiles","concat","handleDeleteFile","_","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","SingleMenu","buttons","menuName","anchor","setAnchor","button","OfferDetails","getButtons","entries","reduce","groups","group","mr","ml","component","localization","skill","level","p","description","getCardContent","PickUpOffer","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","ActiveFilter","lastLabelWord","avatar","Filter","onFilterSubmitted","reloadItems","InDrawerFilter","InDrawerFilterProps","setFilters","toggleDrawer","handleFilterDelete","newFilters","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","fixedItems","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","companyOptions","positionOptions","screen","calculateWidth","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","fetching","setFetching","fixedOffers","setFixedOffers","setSort","handleFilterSubmitted","getOffers","NaN","UnauthenticatedPage","withUserAuth","permittedTypes","hrOfferButtons","ApplicationsList","applications","onSelectedApplication","forDev","applicationData","application","jobSeeker","EmptyFilterApplicationsView","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","FileViewerWrapper","undecodedFile","applicationsAPI","devMails","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","changeEndDate","date","preparedDate","this","prepareDate","changeStartDate","startProcess","getDate","getMonth","getFullYear","ApplicationDetails","isHR","isDev","rejectApplication","cancelButtonText","nextStage","nextStageRequiresDevs","devsMails","trim","doSetNextStage","nextStageIsOneOf","types","checkForNext","indexOfNextStage","findIndex","getDisabled","teleportToMO","offerName","applicationDate","seekerFiles","DevApplicationDetails","devApplication","openAssignTasks","setOpenAssignTasks","assignTask","EmptyApplicationsView","Image","CustomSwitch","checked","setChecked","getName","FormGroup","row","FormControlLabel","Switch","ApplicationsInDrawerFilter","possibleStages","statuses","acc","toggledStages","setToggledStages","toggledApplicationStatuses","setToggledApplicationStatuses","tagsOptions","setTagsOptions","onTagAdd","onRemoveTag","onOperatorChange","currentTags","possibleFilters","handleStateChange","isToggled","toggle","toggled","FilterCard","TagsFilter","RadioButtons","FormLabel","RadioGroup","Radio","NotesDrawer","ApplicationsView","getApplications","mailInBase64","selectedApplication","setSelectedApplication","setApplications","selectedApplicationNotes","setSelectedApplicationNotes","fixedApplications","setFixedApplications","areFiltersValid","getNotesDrawerAnchor","getNotesDrawerStyle","getSelectedApplicationId","getFilterView","getStandardView","innerApplications","fixedInnerApplications","mapApplicationForDev","EmptySelectedApplicationView","OfferFormSkillList","defaultFormState","s","form","lg","onSkillDelete","OfferForm","watch","trigger","updateOffer","formResult","parseInt","creatorId","multiline","minRows","maxRows","ManageStages","processId","setStages","setPossibleStages","finally","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","onFirstListChange","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageDate","processStartDate","prototype","addDays","days","valueOf","setDate","Dates","getDateOrDefault","stringDate","shouldAddDayToDefault","endDate","selectedEndDate","setSelectedEndDate","startDate","selectedStartDate","setSelectedStartDate","isProcessStarted","fireInvalidDateSwal","ManageProcess","setProcess","showHelp","ManageProcessInside","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RegistrationRouting","setRender","getRegistrationForm","MeetingOrganizerWrapper","propType","paramType","outsideValues","setOutsideValues","userData","setUserData","possibleHosts","setPossibleHosts","hosts","guest","meetingOrganizerBaseLink","outsideJwt","drawerStyle","outsideMeetingValues","allowedHostsMails","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","React","subPage","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","SingleTestCase","testCase","testData","expectedResult","SingleResult","passed","SingleTaskReview","results","tests","decodedResults","decodedTestCases","setHeight","ref","useRef","current","clientHeight","language","readOnly","TasksCarousel","infiniteLoop","ReviewTask","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","labelPlacement","Form","addTestCase","setTestCase","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","createTimeLimit","TasksList","createTask","DevView","ListItemIcon","ListItemText","Page404","createRoute","path","getRoutes","routes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f906939b.chunk.js","sourcesContent":["\nexport const decodeBase64 = (base64) => new Buffer(base64, \"base64\").toString('ascii')\n\nexport const encodeBase64 = (string) => new Buffer(string).toString('base64')\n\n","export const constants = {\n    navbar_height: \"60px\"\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","// export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/organizations\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                name,\n                mail: login,\n                password\n            })\n        })\n    }\n}","class HttpError extends Error {\n    constructor(code, message) {\n        super(message)\n        this.code = code\n    }\n}\n\nconst checkResponseStatusOrThrowError = (result, errorMessage) => {\n    const {status, data} = result\n    if(status < 200 || status > 299) {\n        throw new HttpError(status, data.message || errorMessage || \"Something went wrong\")\n    }\n}\n\nexport const checkedFetch = (url, data, errorMessage) => {\n    return fetch(url, data)\n        .then(response => {\n            const clonedResponse = response.clone()\n            return clonedResponse.json().then(data => ({status: response.status, data: data, response: response}))\n        })\n        .then(result => {\n            checkResponseStatusOrThrowError(result, errorMessage)\n            return result.response\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        checkedFetch(\n            recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        )\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\nimport Swal from \"sweetalert2\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n                .then(response => {\n                    localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\n                    localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey));\n                    return response;\n                })\n                .catch(() => {\n                    localStorage.removeItem(loginAPI.authTokenStorageKey)\n                    localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                    Swal.fire({\n                        text: \"Your session expired. We will take you to our login page!\",\n                        icon: \"warning\"\n                    })\n                    .then(() => {\n                        window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                        window.location.reload()\n                    })\n                })\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import {jwtUtils} from \"../jwt/jwtUtils\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {loginAPI} from \"../apis/LoginAPI\";\n\nexport const useLoggedIn = () => {\n    const history = useHistory()\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\n\n    const logout = () => {\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n        setLoggedIn(false)\n        history.push(\"/\")\n        window.location.reload()\n    }\n\n    const login = () => {\n        setLoggedIn(true)\n        window.location.reload()\n    }\n\n    return { loggedIn, login, logout }\n}","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n    //add more for applications\n    TAGS: \"Tags\",\n    APPLICATION_STAGE: \"Application Stage\",\n    PROCESS_STAGE: \"Recruitment Process Stage\"\n}\n\nexport const operators = {\n    AND: \"And\",\n    OR: \"Or\"\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const userMenuTabs = {\n    PROFILE: \"profile\",\n    SETTINGS: \"settings\",\n    FILES: \"files\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import React, {useState} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport {userTypes} from \"../../utils/Enums\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    purple0: {\n        backgroundColor: deepPurple[300],\n        color: theme.palette.getContrastText(deepPurple[300])\n    },\n    purple1: {\n        backgroundColor: deepPurple[200],\n        color: theme.palette.getContrastText(deepPurple[100])\n    },\n    pink0: {\n        backgroundColor: \"#b53387\",\n        color: theme.palette.getContrastText(\"#b53387\")\n    },\n    green0: {\n        backgroundColor: \"#0c4f06\",\n        color: theme.palette.getContrastText(\"#0c4f06\")\n    },\n    red0: {\n        backgroundColor: \"#de2618\",\n        color: theme.palette.getContrastText(\"#de2618\")\n    },\n    red1: {\n        backgroundColor: \"#9c0a00\",\n        color: theme.palette.getContrastText(\"#9c0a00\")\n    },\n    orange0: {\n        backgroundColor: deepOrange[500],\n        color: theme.palette.getContrastText(deepOrange[500])\n    },\n    orange1: {\n        backgroundColor: deepOrange[300],\n        color: theme.palette.getContrastText(deepOrange[300])\n    },\n    orange2: {\n        backgroundColor: deepOrange[200],\n        color: theme.palette.getContrastText(deepOrange[200])\n    },\n}))\n\nexport default function UserMenu(props) {\n    const styles = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [direction, setDirection] = useState(null);\n    const [open, setOpen] = useState(false);\n    const {logout} = useLoggedIn()\n\n    const user = jwtUtils.getUser()\n\n    const colors = Object.values(styles)\n\n    const stringToColor = (string) => {\n        let hash = 0;\n\n        for (let i = 0; i < string.length; i += 1) {\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\n        }\n\n        return colors[hash % colors.length];\n    }\n\n    const userAvatar = (user) => {\n        return {\n            className: stringToColor(user.firstName+user.lastName+user.mail),\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\n        };\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChoice = (direction) => {\n        setAnchorEl(null);\n        setDirection(direction);\n    };\n\n    const redirect = (direction) => {\n        return <Redirect to={direction} />\n    }\n\n    return user && <>\n        {direction ? <>\n            {redirect(direction)}\n            <UserMenu {...props} />\n        </> : <div style={props.style}>\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n                <IconButton style={props.style} onClick={handleClick}>\n                    <Avatar {...userAvatar(user)} />\n                </IconButton>\n            </Box>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper>\n                        <MenuList\n                            id=\"user-menu\"\n                            open={Boolean(anchorEl)}\n                        >\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\n                                Company's offers\n                            </MenuItem>}\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\n                                Company's partners\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\n                                My offers\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\n                                Create offer\n                            </MenuItem>}\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\n                                My applications\n                            </MenuItem>}\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\n                            <MenuItem onClick={() => {\n                                handleChoice(\"/\")\n                                logout()\n                            }}>Logout</MenuItem>\n                        </MenuList>\n                    </Paper>\n                </ClickAwayListener>\n            </Popover>\n        </div>}\n    </>\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nexport const Navbar = () => {\n\n    const {loggedIn} = useLoggedIn()\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginTop: '-5px'}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <img src=\"https://imgur.com/5LUwfu8.png\" alt=\"logo\" width=\"30%\" />\n                </Link>\n            </div>\n            <div style={{marginLeft: '-30em'}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">All Offers</Button>\n                </Link>\n            </div>\n            <div style={{marginRight: '1%', marginLeft: 'auto'}}>\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>}\n            </div>\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    zIndex: {\n        drawer: 1000\n    },\n    status: {\n        danger: {\n            main: '#d32f2f',\n            light: '#ff6659'\n        },\n        success: {\n            main: '#388e3c',\n            light: '#6abf69'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#ffffff'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes, operators} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        //add more for applications\n        case filterTypes.TAGS:\n            if (filter.value && filter.operator) {\n                const filterTags = filter.value.map(tag => tag.toLowerCase())\n                switch (filter.operator) {\n                    case operators.AND:\n                        return (arg) => arg.tags.length > 0 && filterTags.every(tag => arg.tags.map(innerTag => innerTag.toLowerCase()).includes(tag))\n                    case operators.OR:\n                        return (arg) => arg.tags.length > 0 && filterTags.some(tag => arg.tags.map(innerTag => innerTag.toLowerCase()).includes(tag))\n                    default:\n                        return () => true\n                }\n            } else {\n                return () => true\n            }\n        case filterTypes.APPLICATION_STAGE:\n            return filter.value ? (arg) => filter.value.includes(arg?.status) : () => true\n        case filterTypes.PROCESS_STAGE:\n            return filter.value ? (arg) => filter.value.includes(arg?.stage?.type) : () => true\n        default:\n            return () => true\n    }\n}\n\nexport const filterItems = (items, filters) => {\n    let tmpItems = items\n    filters.forEach(filter => {\n        tmpItems = tmpItems.filter(item => (createFilterFunction(filter))(item))\n    })\n    return tmpItems\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import React, {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        if(isSelectable) {\n            setSelectedIdx(idx)\n            propsHandleSelect(item, idx)\n            scrollToTop()\n        }\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => \n                (\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected={selectedIdx === idx} data={extractData(item)} /> \n                )\n            )\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\nimport React from \"react\";\nimport {Grid, Typography} from '@material-ui/core'\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer) => {\n        if(props.onSelectedOffer) {\n            props.onSelectedOffer(offer)\n            scrollToTop()\n        }\n    }\n\n    const getView = () => offers.length > 0 ?\n    (<ListWithSelection\n        listItems={offers}\n        extractData={getData}\n        limit={props.limit}\n        propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n        isSelectable={!!props.onSelectedOffer}\n    />)\n    : \n    (<Grid container style={{height: '80vh', border: \"1px solid #eee\", padding: '2em', width: '100%'}} spacing={2} direction=\"column\">\n        <Grid item>\n            <img src=\"https://thumbs.dreamstime.com/b/job-offer-application-letter-response-career-opportunity-business-proposition-recruitment-agreement-man-receives-employment-188064915.jpg\"        \n                width=\"80%\"\n            />\n        </Grid>\n        <Grid item>\n            <Typography variant=\"h4\" style={{marginBottom: '3px'}}>No open offers!</Typography>\n            <Typography color=\"textSecondary\"> We're sorry but curently there are no offers that you can apply to. </Typography>\n        </Grid>\n    </Grid>)\n\n\n    return getView() \n    \n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\nimport Swal from \"sweetalert2\";\n\nexport const authFetch = (url, data, errorMessage) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, errorMessage)\n        .catch(httpError => {\n            if(httpError.code === 401)\n                jwtUtils.refreshToken().then(() => {\n                    authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n                    return checkedFetch(url, authData, errorMessage)\n                        .catch(httpError => {\n                            if(httpError.code === 401) {\n                                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                                localStorage.removeItem(loginAPI.authTokenStorageKey)\n                                Swal.fire({\n                                    text: \"Your session expired. We will take you to our login page!\",\n                                    icon: \"warning\"\n                                })\n                                .then(() => {\n                                    window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                                    window.location.reload()\n                                })\n                            } else {\n                                throw httpError\n                            }\n                        })\n                })\n            else {\n                throw httpError\n            }\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport {headers} from \"./headers\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n    },\n\n    getAllOffers: function(forCandidate = false){\n        const queryParam = forCandidate ? \"?only_started=true\" : \"\"\n        return checkedFetch(recruitmentServiceBasicAPILink + \"/api/offers\" + queryParam)\n            .then(response => response.json())\n    },\n\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: files\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID, files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                files: files\n            })\n        })\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n    },\n\n    getOffersFromOrganization() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\"\n        }).then(response => response.json())\n    },\n\n    deleteOffer(id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userTypes} from \"../../utils/Enums\";\nimport Swal from \"sweetalert2\";\n\nconst LandingOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        offersAPI.getAllOffers(true)\n            .then(data => setOffers(data || []))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Latest Offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n            See more!\n        </Button>\n    </>\n}\n\nconst LandingHrOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI\n            .getOffersFromHr()\n            .then(data => setOffers(data || []))\n            .catch(() =>\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            )\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\n            Go to your offers\n        </Button>\n    </>\n}\n\nconst LandingOrganizationOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() =>\n        offersAPI\n            .getOffersFromOrganization()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    , [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\n            Go to organization's offers\n        </Button>\n    </>\n}\n\nconst LandingList = () => {\n    const userType = jwtUtils.getUser()?.userType\n\n    switch (userType) {\n        case userTypes.HR:\n            return <LandingHrOffers />\n        case userTypes.ORGANIZATION:\n            return <LandingOrganizationOffers />\n        default:\n            return <LandingOffers />\n    }\n}\n\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\n    <Grid item xs={12} md={8}>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <img src=\"https://imgur.com/5LUwfu8.png\" alt=\"logo\" width=\"30%\" style={{marginTop: '-7px'}} />\n            <Typography variant=\"h4\">\n                Everything you'll ever need\n            </Typography>\n        </div>\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n            </Grid>\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\n                <Grid item>\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n                <Grid item>\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n    <Grid item xs={12} md={4}>\n        <LandingList />\n    </Grid>\n</Grid>\n","import {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\"\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : (interviewId) => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/jobseeker/${interviewId}`).then(response => response.json()),\n\n    getNewestInterviewId: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}/interview?with_possible_hosts=true`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNotesByInterviewId: (interviewId, password) => {\n        const fetchToUse = password ? checkedFetch : authFetch\n        const headers = password ? {\n            'x-dev-password': password\n        } : {}\n        return fetchToUse(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?interview_note=${interviewId}`, {\n            method: 'GET',\n            headers\n        }).then(response => response.json())\n    },\n\n    getInterviewObjectById: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/${interviewId}`)\n        .then(response => response.json()),\n\n    getTaskStageUUIDByInterviewId: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages/byInterview/${interviewId}`)\n        .then(response => response.json())\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = ({ onDefaultView, onWhiteboard, onTask, shouldShow }) => {\n\n    const theme = useTheme()\n\n    const defaultViewAction = (<Action\n                                    text=\"Default View\"\n                                    onClick={onDefaultView}\n                                >\n                                    <VoiceChatIcon />\n                                </Action>)\n\n    const whiteboardAction = (<Action\n                                    text=\"Whiteboard\"\n                                    onClick={onWhiteboard}\n                                >\n                                    <DashboardIcon />\n                                </Action>)\n\n    const taskAction = (<Action\n                            text=\"Task\"\n                            onClick={onTask}\n                        >\n                            <AssignmentIndIcon />\n                        </Action>)\n    \n    const map = {\n        'task': taskAction,\n        'whiteboard': whiteboardAction,\n        'default': defaultViewAction\n    }\n\n    const getActionsToDisplay = () => shouldShow.filter(key => key in map).map(key => map[key])\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            {getActionsToDisplay()}\n        </Fab>\n    )\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import {decodeBase64} from \"../../utils/hooks/Base64\"\n\nexport const getFirstLineFromTaskDescription = (descriptionInBase64) => {\n    const description = decodeBase64(descriptionInBase64)\n\n    const firstLine = description.split('\\n')[0]\n\n    return JSON.stringify(firstLine).replace( /\\W/g , '')\n}","import {Button, Card, CardContent, Divider, IconButton, Menu, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport {getFirstLineFromTaskDescription} from \"../tasksUtils\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport const Task = ({task, tasksOperations, shouldDisplayMenu}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n        {   shouldDisplayMenu &&\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n        }\n            <CardContent>\n                <Typography variant=\"h5\">{ getFirstLineFromTaskDescription(task.descriptionBase64) }</Typography>\n                <Typography variant=\"subtitle\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                {tasksOperations.map(taskOperation => <Button onClick={taskOperation.action}>{taskOperation.title}</Button>)}\n            </Menu>\n        </Card>\n    )\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message)\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle || \"Something went wrong!\",\n                text: err || errorSwalText,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport {checkedFetch} from '../chekedFetch'\nimport {withSwal} from '../../components/commons/formsCommons/WithSwal'\nimport {headers} from \"./headers\";\n\n\n\nconst fallbackTask1 = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\nconst fallbackTask2 = { id: 53, descriptionBase64: 'IyBBbHBoYWJldAoKIyMgRGVzY3JpcHRpb24KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGBiYHMKCiMjIEV4YW1wbGUKYGBgCmlucHV0OiA0CgpvdXRwdXQ6ICJiYmJiIgpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'WwogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMSwKICAgICJ0ZXN0RGF0YSI6IDEsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYiIKICB9LAogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMiwKICAgICJ0ZXN0RGF0YSI6IDIsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYmIiCiAgfSwKICB7CiAgICAidGVzdENhc2VJZCI6IDMsCiAgICAidGVzdERhdGEiOiA1LAogICAgImV4cGVjdGVkUmVzdWx0IjogImJiYmJiIgogIH0KXQ==', timeLimit: 70 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    getTasksByOrganization: (organizationId, password) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationId}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': password\n            }\n        }).then(response => response.json())\n        .catch(err => {\n            Swal.close()\n            Swal.fire({\n                icon: 'error',\n                text: `We're sorry, but we couldn't fetch tasks from this organization.`\n            })\n        })\n    },\n\n    getTasks: (tasksStageId) => {\n        if (tasksStageId) {\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks/inProgress/?taskStage=${tasksStageId}`)\n                .then(response => {\n                    Swal.close()\n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    getNotesWithTasksByTaskUUID: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?task_note=${taskStageUUID}&with_tasks=true`, {\n            method: \"GET\",\n            headers: {\n                \"X-Dev-Password\": devPassword\n            }\n        })\n            .then(response => response.json())\n    },\n\n    getTasksFromOrganization: (organizationUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    getTasksFromTaskStage: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${taskStageUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    updateTasks: (task, credentials, setReload) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${credentials.organizationId}`, {\n            method: 'POST',\n            headers: {\n                'x-dev-password': credentials.password,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n        withSwal({\n            loadingTitle: 'Updating Task',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    assignTasks: (tasksIds, password, setReload, key, keyValue) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages?${key}=${keyValue}`, {\n            method: \"PUT\",\n            body: JSON.stringify({tasks: tasksIds}),\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': password\n            }\n        })\n        withSwal({\n            loadingTitle: 'Updating assigned tasks',\n            successSwalTitle: 'Task successfully assigned!',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    getTasksByInterviewId: (interviewId) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks/inProgress?interview=${interviewId}`, {\n            method: 'GET'\n        }).then(response => response.json())\n    },\n\n    startTask: (taskStageUUID, task) => {\n            const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks/taskStarted?taskStage=${taskStageUUID}&task=${task.id}`, {\n                    method: \"PUT\",\n                    headers: headers\n                }\n            )\n            withSwal({\n                loadingTitle: 'Starting task',\n                successSwalTitle: 'You may begin!',\n                promise,\n                errorSwalTile: 'Something went wrong',\n                errorSwalText: \"We couldn't start your task. Please try again.\"\n            })\n\n    }\n}","import {encodeBase64} from './Base64'\n\nexport const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const setDevPassword = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const getDevPassword = () => sessionStorage.getItem(devPasswordKey)\n\n    const getEncodedDevPassword = () => {\n        const password = getDevPassword()\n        return password ? encodeBase64(password) : ''\n    }\n\n    const deleteDevPassword = () => sessionStorage.removeItem(devPasswordKey)\n\n    return {getDevPassword, setDevPassword, getEncodedDevPassword, deleteDevPassword}\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport {Button, Divider, Grid, GridList, GridListTile, Typography} from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Task} from './crud/Task'\nimport {tasksApi} from '../../utils/apis/tasksAPI'\nimport {useDevPassword} from '../../utils/hooks/useDevPassword'\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    paper: {\n      position: 'absolute',\n      width: '50%',\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n\nexport const AssignTasks = ({ modalOptions, alreadyAssignedTasks, organizationTasks, setReload, assignKey, assignUUIDValue }) => {\n\n    const classes = useStyles()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const onAssign = (task) => {\n        const tasksIds = alreadyAssignedTasks.map(assignedTask => assignedTask.id)\n        tasksApi.assignTasks([...tasksIds, task.id], getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    const onDeassign = (task) => {\n        const newTasksIds = alreadyAssignedTasks.filter(assignedTask => assignedTask.id !== task.id).map(task => task.id)\n        tasksApi.assignTasks(newTasksIds, getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    return (\n        <Modal\n            open={modalOptions.open}\n            onClose={modalOptions.onClose}\n            className={classes.modal}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            style={{zIndex: 1000}}\n        >\n            <Fade in={modalOptions.open}>\n                <div className={classes.paper} style={getModalStyle()}>\n                    \n                    <Section title=\"Tasks you've already assigned:\" tasks={alreadyAssignedTasks} empty=\"No one has assigned any tasks for this application\" actionTitle=\"Deassign\" action={onDeassign} />\n                    <Divider style={{margin: '1em 0'}} />\n                    <Section title=\"Tasks you can assign:\" tasks={organizationTasks} empty=\"Your organization doesn't have any task.\" actionTitle=\"Assign\" action={onAssign} />\n\n                    <ModalButtons handleClose={modalOptions.handleClose} />\n                </div>\n            </Fade>\n        </Modal>\n    )\n\n}\n\nAssignTasks.propTypes = {\n    modalOptions: PropTypes.exact({\n        open: PropTypes.bool.isRequired,\n        handleClose: PropTypes.func.isRequired\n    })\n}\n\nconst ModalButtons = ({ handleClose }) => {\n\n    return (<Grid container direction=\"row\">\n                <Grid item xs={5}>\n                    <Typography color=\"textSecondary\">To assign task, expand menu and click \"Assign\"</Typography>\n                </Grid>\n                <Grid item xs={2} />\n                <Grid item xs={5}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClose} fullWidth>Job Done!</Button>\n                </Grid>\n            </Grid>)\n}\n\nconst Section = ({ title, tasks, empty, action, actionTitle }) => {\n\n    return (<div style={{margin: '1em 0', overflow: 'hidden', width: '100%'}}>\n        <Typography variant=\"h6\" color=\"textSecondary\" style={{marginBottom: '5px'}}>{title}</Typography>\n            {\n                tasks?.length > 0 ?\n                    <GridList style={{flexWrap: 'nowrap'}} cols={2.5}>\n                        {tasks.map((task, idx) => <GridListTile key={task}><Task task={task} tasksOperations={[{ title: actionTitle, action: () => action(task) }]} shouldDisplayMenu /></GridListTile>)}\n                    </GridList> :\n                    <Typography>{empty}</Typography>\n            }\n    </div>)\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit, text }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        {text ?? 'We need to validate, who you are, so please, provide password from your mail:'}\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import {useState} from 'react';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {useParams} from 'react-router-dom'\nimport {TasksPassword} from './TasksPassword';\nimport {Button, useTheme} from '@material-ui/core';\nimport Swal from 'sweetalert2'\n\nexport const WithDevPassword = ({ WrappedComponent, wrappedProps, createPassword, text }) => {\n\n    const params = useParams()\n\n    const theme = useTheme()\n    \n    const [password, setPassword] = useState(\"\")\n    const { setDevPassword, getDevPassword, deleteDevPassword } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        setDevPassword(createPassword(params.id, password))\n        setPassword(password)\n    }\n\n    const clearDevPassword = () => {\n        Swal.fire({\n            icon: 'warning',\n            title: 'Are you sure?',\n            text: 'This operation cannot be undone',\n            showCancelButton: true\n        }).then(result => {\n            if (result.isConfirmed) {\n                deleteDevPassword()\n                setPassword(\"\")\n            }\n        })\n    }\n\n    return !!password || getDevPassword() ? (\n        <>\n            <Button style={{ \n                    background: theme.status.danger.main,\n                    color: theme.palette.background.main,\n                    position: 'absolute',\n                    bottom: '3em',\n                    left: '1em',\n                    zIndex: 1660\n                }}\n                onClick={clearDevPassword}\n                size=\"large\"\n            >Reset my password</Button>\n            <WrappedComponent {...wrappedProps} id={params.id} {...params} />\n        </>\n        ) : <TasksPassword handleSubmit={handleSubmit} text={text}/>\n} \n\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const EStellaAutocomplete = ({ options, label, onChange }) => {\n\n    const handleChange = ({ target }) => {\n        onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={label} />}\n        />\n    )\n}\n\nEStellaAutocomplete.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Chip} from '@material-ui/core';\nimport {Typography} from '@material-ui/core';\n\nexport const TagsList = ({ tags, deletable = false, onDelete = () => {} }) => {\n\n    const makeTag = (tag, idx) => {\n        const props = deletable ? {onDelete: () => onDelete(tag)} : {}\n        return (<Chip style={{margin: '10px'}} key={idx} label={tag} variant=\"outlined\" color=\"primary\" {...props} />)\n    }\n\n    return (\n        <div style={{display: 'flex', overflow: 'scroll'}}>\n            { tags.length > 0 ? tags.map((tag, idx) => makeTag(tag, idx)) : <Typography variant=\"body1\">You haven't added any tags yet</Typography>}\n        </div>\n    )\n}","import {Card, CardContent, Divider, Typography} from '@material-ui/core';\nimport {decodeBase64} from '../../utils/hooks/Base64'\nimport {TagsList} from './TagsList'\n\nexport const Note = ({ note }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{padding: '2em', width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n            <Typography variant=\"h6\" color=\"textSecondary\">{note.author}</Typography>\n            <TagsList tags={note.tags} />\n            <Divider />\n            <CardContent>\n                <Typography style={{whiteSpace:'pre-wrap'}}>{decodeBase64(note.text)}</Typography>\n            </CardContent>\n        </Card>\n    )\n}","import {Grid} from '@material-ui/core';\nimport {Note} from './Note';\n\nexport const NotesList = ({notes}) => {\n\n    return (\n        <Grid container>\n            {notes.map((note, idx) => (\n                <Grid item xs={12} style={{margin: '1em'}}>\n                    <Note note={note} key={idx} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange, view }) => {\n\n    const usableView = {menu: true, html: true, md: true, ...view}\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} view={usableView} />\n    )\n}\n","import {checkedFetch} from '../chekedFetch'\nimport {recruitmentServiceBasicAPILink} from './APILinks'\nimport { authFetch } from '../authFetch'\n\nexport const NoteApi = {\n\n    addNote: ({ key, paramId, note_body, dev_password }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'x-dev-password': dev_password,\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            }\n        })\n        \n    },\n\n    addNoteFromHr: ({ key, paramId, note_body }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n    }\n\n}","import {Button, Card, CardActions, Divider, TextField, Typography, useTheme} from '@material-ui/core'\nimport {MarkdownEditor} from '../commons/MarkdownEditor'\nimport {useState} from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {TagsList} from './TagsList'\nimport '../../App.css';\nimport {useDevMail} from '../../utils/hooks/useDevMail';\nimport {encodeBase64} from '../../utils/hooks/Base64';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {NoteApi} from '../../utils/apis/NoteApi';\nimport Swal from 'sweetalert2'\nimport {withSwal} from '../commons/formsCommons/WithSwal'\nimport { jwtUtils } from '../../utils/jwt/jwtUtils'\n\nexport const AddNote = ({ onCancel, uuid, uuid_key, setReload, shouldUseAuthFetchToPost }) => {\n\n    const theme = useTheme()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [noteText, setNoteText] = useState('')\n    const [tags, setTags] = useState([])\n    const [currentTag, setCurrentTag] = useState('')\n\n    const {getDevMail, setDevMail} = useDevMail()\n\n    const handleNoteTextChange = ({html, text}) => {\n        setNoteText(text)\n    }\n\n    const handleAddCurrentTag = () => {\n        setTags([...tags, currentTag])\n        setCurrentTag('')\n    }\n\n    const deleteTag = (tag) => {\n        setTags(tags.filter(item => item != tag))\n    }\n\n    const addNoteApiCall = (mail) => {\n        if (shouldUseAuthFetchToPost) {\n            return () => NoteApi.addNoteFromHr({\n                key: uuid_key,\n                paramId: uuid,\n                note_body: {\n                    author: mail,\n                    tags: tags,\n                    fileBase64: encodeBase64(noteText)\n                }\n            })\n        } else return () => NoteApi.addNote({\n            key: uuid_key,\n            paramId: uuid,\n            note_body: {\n                author: mail,\n                tags: tags,\n                fileBase64: encodeBase64(noteText)\n            },\n            dev_password: getEncodedDevPassword()\n        })\n    }\n\n    const doAddNote = (mail) => {\n        withSwal({\n            loadingTitle: 'Adding Note',\n            promise: addNoteApiCall(mail),\n            successSwalTitle: 'Note successfully added',\n            successFunction: () => {\n                setReload?.(reload => !reload)\n            }\n        })\n        setTags([])\n        setNoteText('')\n        onCancel()\n    }\n\n    const addNote = () => {\n        if (shouldUseAuthFetchToPost) {\n            const mail = jwtUtils.getUser().mail\n            doAddNote(mail)\n        } else {\n            addDevNote()\n        }\n    }\n\n    const addDevNote = () => {\n        const devMail = getDevMail()\n        if (!devMail) {\n            Swal.fire({\n                title: \"Missing informations!\",\n                html: 'Please, provide your mail, so everyone knows, who you are.<br /><input type=\"text\" id=\"mail\" class=\"swal2-input\" placeholder=\"Mail\">',\n                icon: 'warning',\n                preConfirm: () => {\n                    const mail = Swal.getPopup().querySelector('#mail').value\n                    if (!mail) {\n                        Swal.showValidationMessage(`Please enter your mail`)\n                    } else {\n                        setDevMail(mail)\n                    }\n                    return { mail }\n                }\n            }).then(result => {\n                doAddNote(result.value.mail)\n            })\n        } else {\n            doAddNote(devMail)\n        }\n    }\n\n    return (\n        <Card style={{marginLeft: 'auto', marginRight: 'auto', width: '80%', marginTop: '1em', padding: '1em', textAlign: 'left'}} variant='outlined'>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between', alignItems: 'base-line'}}>\n                <Typography style={{marginBottom: '10px'}}>Tags:</Typography>\n                <TagsList tags={tags} deletable onDelete={deleteTag} />\n            </div>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>\n                <TextField label=\"Add Tag\" variant=\"outlined\" value={currentTag} style={{width: '90%'}} onChange={({target}) => setCurrentTag(target.value)} />\n                <Button onClick={handleAddCurrentTag}><AddCircleOutlineIcon color=\"action\" /></Button>\n            </div>\n\n            <Divider style={{margin: '1em 0'}} />\n\n            <Typography>Note:</Typography>\n            <MarkdownEditor handleChange={handleNoteTextChange} style={{height: '100px'}} view={{menu: false, html: false}}/>\n            \n            <CardActions>\n                <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', justifyContent: 'space-between', width: '100%'}}> \n                    <Button size=\"small\" onClick={onCancel} style={{ border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main, width: '40%' }} varient=\"outline\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addNote} size=\"small\" style={{ background: theme.palette.secondary.dark, color: theme.palette.background.main, width: '40%' }} variant=\"contained\">\n                        Add\n                    </Button>\n                </div>\n            </CardActions>\n        </Card>\n    )\n}","export const useDevMail = () => {\n\n    const devMailKey = \"devMail\"\n\n    const setDevMail = (mail) => sessionStorage.setItem(devMailKey, mail)\n\n    const getDevMail = () => sessionStorage.getItem(devMailKey)\n\n    return {getDevMail, setDevMail}\n\n}","import {constants} from \"../../utils/constants\";\nimport {Box, Button, Divider, Grid, Typography} from '@material-ui/core'\nimport {EStellaAutocomplete} from \"../EStellaAutocomplete\";\nimport {useState} from 'react';\nimport {NotesList} from './NotesList'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {AddNote} from './AddNote'\n\n\nexport const NotesMenu = ({ notes, uuid, uuid_key, reload, setReload, shouldUseAuthFetchToPost = false }) => {\n\n    const [tag, setTag] = useState('')\n    const [showAdd, setShowAdd] = useState(false)\n\n    const getDistinctTags = () => new Array(...new Set(notes.flatMap(note => note.tags)))\n\n    const getNotes = () => tag ? notes.filter(note => note.tags.includes(tag)) : notes\n\n    const addNote = () => {\n        setShowAdd(true)\n    }\n\n    return (\n        <div style={{marginTop: `calc(${constants.navbar_height} + 3em)`, textAlign: 'center'}}>\n            \n            <Grid container direction=\"row\">\n                <Grid item xs={11}>\n                    <Typography variant=\"h5\">\n                        Notes\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <Button onClick={addNote}><AddCircleOutlineIcon color=\"action\" /></Button>\n                </Grid>\n            </Grid>\n\n            { showAdd && <AddNote onCancel={() => setShowAdd(false)} uuid={uuid} uuid_key={uuid_key} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> }\n\n            <Divider style={{marginTop: '1em'}} />\n\n            <Box m={2}>\n                <EStellaAutocomplete options={getDistinctTags()} label={\"Search for tags\"} onChange={(value) => setTag(value)} />\n            </Box>\n\n            {notes?.length > 0 ? <NotesList notes={getNotes()} /> : 'Oh no, there are no notes yet!' }\n        </div>\n    )\n}","import {Realtime} from \"ably/browser/static/ably-commonjs.js\"\nimport {v4 as uuid} from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {CodeEditor} from \"e-stella-code-editor\";\nimport React from \"react\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\n\nconst TaskWrapper = ({ toSolveTask = true, submitLeftOffset = 0, taskStageUUID,  task }) => {\n    const { pub, sub, clientId } = useAbly(`codeChanged/${taskStageUUID}/${task.id}`)\n\n    const fetchTasks = () => new Promise(resolve => resolve([task]))\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return (\n        <div style={{textAlign: 'left'}}>\n            <CodeEditor\n                codeCheckerBaseLink={codeCheckerLink}\n                fetchTasks={fetchTasks}\n                solverId={taskStageUUID}\n                taskStartedCallback={() => tasksApi.startTask(taskStageUUID, task)}\n                absoluteOffset={{settings: { top: 0, right: 0 }, submit: {top: 0, left: submitLeftOffset}}}\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n                sharingCodeFunctions={{ pub, sub, id: clientId }}\n            />\n        </div>\n    )\n}\n\nexport default TaskWrapper","import {useParams} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {Carousel} from 'react-responsive-carousel';\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport TaskWrapper from \"./TaskWrapper\";\nimport {Button, Grid} from \"@material-ui/core\";\n\nexport const MultipleTasksWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0, fetchTasks }) => {\n\n    let { taskStageUUID } = useParams()\n\n    if(!taskStageUUID) taskStageUUID = propId\n\n    const [tasks, setTasks] = useState([])\n    const [isFetching, setIsFetching] = useState(true)\n\n    const [currentSlide, setCurrentSlide] = useState(0)\n\n    const prev = () => setCurrentSlide(state => state - 1)\n    const next = () => setCurrentSlide(state => state + 1)\n    const updateCurrentSlide = (index) => setCurrentSlide(index)\n\n    useEffect(() =>\n        fetchTasks(taskStageUUID).then(tasks => {\n            setTasks(tasks)\n            setIsFetching(false)\n        }),\n        [setIsFetching, setTasks, taskStageUUID]\n    )\n\n    const editors = tasks.map(task => <TaskWrapper\n        task={task}\n        taskStageUUID={taskStageUUID}\n        toSolveTask={toSolveTask}\n        submitLeftOffset={submitLeftOffset}\n    />)\n\n    const PrevButton = () => <Button\n        onClick={prev}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === 0}\n        fullWidth>Previous Task</Button>\n\n    const NextButton = () => <Button\n        onClick={next}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === tasks.length - 1}\n        fullWidth>Next Task</Button>\n\n    return isFetching ? <CenteredCircularProgress size={100} /> : <div>\n        <Grid style={{padding: '1em', backgroundColor: \"#1e1e1e\"}} container spacing={2}>\n            <Grid item xs={12} md={6}><PrevButton /></Grid>\n            <Grid item xs={12} md={6}><NextButton /></Grid>\n        </Grid>\n        <Carousel\n            showIndicators={false}\n            showArrows={false}\n            showStatus={true}\n            selectedItem={currentSlide}\n            onChange={ind => updateCurrentSlide(ind)}\n            statusFormatter={(curr, items) => `Task ${curr} of ${items}`}\n        >\n            {editors}\n        </Carousel>\n    </div>\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useEffect, useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {AssignTasks} from \"../../tasks/AssignTasks\";\nimport {WithDevPassword} from \"../../tasks/WithDevPassword\"\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {NotesMenu} from '../../notes/NotesMenu';\nimport {Button, Divider, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\nimport {constants} from '../../../utils/constants'\nimport clsx from 'clsx';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Swal from \"sweetalert2\";\nimport {MultipleTasksWrapper} from \"../../tasks/MultipleTasksWrapper\";\n\nexport const JitsiWrapper = ({ admin, roomName, displayName, interviewId, companyId, interviewKind }) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n    const [taskStageUUID, setTaskStageUUID] = useState(null)\n    const [shouldShow, setShouldShow] = useState([])\n\n    useEffect(() => {\n        if (interviewKind === 'technical') {\n            interviewAPI.getTaskStageUUIDByInterviewId(interviewId)\n                .then(data => setTaskStageUUID(data.taskStageUUID))\n        }\n    }, [interviewId, companyId])\n\n    useEffect(() => {\n        setShouldShow(interviewKind === \"hr\" ? ['whiteboard', 'default'] : interviewKind === 'technical' ? ['whiteboard', 'default', 'task'] : [])\n    }, [interviewKind, interviewId, companyId])\n\n    const getWhiteboardCode = () => {\n        if (roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return roomName\n    }\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <MultipleTasksWrapper fetchTasks={getTasksByInterviewUUID} submitLeftOffset={'25%'} id={taskStageUUID}/>\n            </div>\n        )\n    }\n\n    const getTasksByInterviewUUID = () => tasksApi.getTasksByInterviewId(interviewId)\n\n    return (\n        <div>\n            {\n                admin &&\n                    <AdminMeetingDrawer interviewId={interviewId} companyId={companyId} isHRInterview={interviewKind === 'hr'} />\n            }\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask} shouldShow={shouldShow}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={admin} roomName={roomName} displayName={displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}\n\n\nconst drawerWidth = 600;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\nconst AdminMeetingDrawer = ({ interviewId, companyId, isHRInterview }) => {\n\n    const [openNotesModal, setOpenNotesModal] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [openTasksModal, setOpenTasksModal] = useState(false)\n\n    const { getDevPassword, setDevPassword } = useDevPassword()\n\n    const classes = useStyles()\n\n    const getNotesView = () => isHRInterview ? (\n        <NotesMenuWrapper\n            reload={reload}\n            setReload={setReload}\n            interviewId={interviewId}\n            shouldUseAuthFetchToPost={true}\n        />\n    ) : (\n        <WithDevPassword\n            WrappedComponent={NotesMenuWrapper}\n            wrappedProps={{\n                reload, setReload, interviewId\n            }}\n            createPassword={(id, password) => `${companyId}:${password}`}\n            text=\"Insert password\"\n        />\n    )\n\n    const doOpenTasksModal = () => {\n        if (getDevPassword()) {\n            setOpenTasksModal(true)\n        } else {\n            Swal.fire({\n                title: 'Provide your password from mail!',\n                input: 'text',\n                inputAttributes: {\n                    autocapitalize: 'off'\n                },\n                showCancelButton: true,\n                confirmButtonText: 'Submit'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    setDevPassword(`${companyId}:${result.value}`)\n                    setOpenTasksModal(true)\n                }\n            })\n        }\n    }\n\n    const closedView = (\n            <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`, display: 'flex', flexDirection: 'column'}}>\n                <ListItem>\n                    <Button onClick={() => setOpenNotesModal(true)}>\n                        <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                    </Button>\n                </ListItem>\n                { !isHRInterview && <><Divider style={{margin: '1em 0'}} />\n                <ListItem>\n                    <Button onClick={() => doOpenTasksModal()}>\n                        <AssignmentIcon fontSize=\"large\" color=\"action\" />\n                    </Button>\n                </ListItem> </>}\n            </List>\n    )\n\n    return (\n        <div>\n            {openNotesModal && (\n                <Button onClick={() => setOpenNotesModal(false)} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: openNotesModal,\n                    [classes.drawerClose]: !openNotesModal,\n                    })}\n                    classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: openNotesModal,\n                        [classes.drawerClose]: !openNotesModal,\n                    }),\n                    }}\n            >\n                {openNotesModal ? getNotesView() : closedView}\n                { !isHRInterview && <AssignTasksWrapper openTasksModal={openTasksModal} setOpenTasksModal={setOpenTasksModal} interviewId={interviewId} organizationId={companyId} reload={reload} setReload={setReload} /> }\n            </Drawer>\n        </div>\n    )\n}\n\nconst NotesMenuWrapper = ({reload, setReload, interviewId, shouldUseAuthFetchToPost}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        interviewAPI.getNotesByInterviewId(interviewId, getEncodedDevPassword())\n            .then(data => setNotes(data.notes))\n    }, [interviewId, reload])\n\n    return (\n        <NotesMenu\n            notes={notes}\n            uuid={interviewId}\n            uuid_key=\"interview_note\"\n            reload={reload}\n            setReload={setReload}\n            shouldUseAuthFetchToPost={shouldUseAuthFetchToPost}\n        />\n    )\n}\n\nconst AssignTasksWrapper = ({openTasksModal, setOpenTasksModal, interviewId, organizationId, reload, setReload}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n\n    useEffect(() => {\n        if(devPassword) {\n        tasksApi.getTasksFromOrganization(organizationId, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksByInterviewId(interviewId)\n            .then(data => setAlreadyAssignedTasks(data))\n        }\n    }, [reload, organizationId, interviewId])\n\n    return (\n        <AssignTasks\n            modalOptions={{\n                open: openTasksModal,\n                handleClose: () => setOpenTasksModal(false)\n            }}\n            alreadyAssignedTasks={alreadyAssignedTasks}\n            organizationTasks={organizationTasks}\n            setReload={setReload}\n            assignKey=\"interview\"\n            assignUUIDValue={interviewId}\n        />\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\nimport React from \"react\";\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const LoginForm = ({reload, onSubmit, shouldRedirectIfLoggedIn = true}) => {\n\n    const {loggedIn, login} = useLoggedIn()\n\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const doOnSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Logging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                login()\n                reload.setReload(!reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(onSubmit) {\n            onSubmit(data)\n        }\n    }\n\n    return loggedIn && shouldRedirectIfLoggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(doOnSubmit)}>\n                    <Grid container spacing={2}>\n                        <FormField\n                            control={control}\n                            name=\"login\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Login\"\n                            }}\n                        />\n                        <FormField\n                            control={control}\n                            name=\"password\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Password\",\n                                autoComplete: \"off\",\n                                type: \"password\"\n                            }}\n                        />\n                        <Grid item xs={false} sm={8} />\n                        <Grid item xs={12} sm={4}>\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth color=\"primary\">Login</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Card>\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\nimport {LoginForm} from '../../auth/login/LoginForm';\nimport {jwtUtils} from '../../../utils/jwt/jwtUtils';\n\nexport const MeetingDisplayName = ({ roomName, interviewId, companyId, interviewKind }) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay && !jwtUtils.getUser() ? getForm() :\n            <JitsiWrapper admin={true} roomName={roomName} displayName={shouldDisplayForm.name} interviewId={interviewId} companyId={companyId} interviewKind={interviewKind}/>\n    }\n\n    const getForm = () => interviewKind === 'hr' ?\n        <LoginForm reload={{setReload: (innerReload) => setShouldDisplayForm({...shouldDisplayForm, shouldDisplay: innerReload}), reload: true}} shouldRedirectIfLoggedIn={false} />\n             : <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/>\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewKind, interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(`${data?.firstName || \"\"} ${data?.lastName || \"\"}`)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} companyId={companyId} interviewKind={interviewKind} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId, companyId, interviewKind }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`} interviewId={interviewId} companyId={companyId} interviewKind={interviewKind}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"} interviewId={interviewId} interviewKind={interviewKind}/>\n    )\n}","import {useDropzone} from \"react-dropzone\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\n\nconst FilesDropzone = ({onDrop}) => {\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\n    return <Paper style={{\n        padding: \"2em\",\n        paddingTop: \"4em\",\n        paddingBottom: \"4em\",\n        backgroundColor: color,\n        justifyContent: \"center\",\n        display: \"flex\"\n    }} {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n            isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Drag and drop files here, or click to select them</p>\n        }\n    </Paper>\n}\n\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const jobSeekerAPI = {\n\n    getJobSeeker: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    getFiles: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    insertFiles: function(files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({files: files})\n        })\n    }\n}","import Swal from \"sweetalert2\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    }\n}));\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\n    const [file, setFile] = useState(null)\n\n    const classes = useStyles()\n\n    const handleChange = (event) => {\n        setFile(event.target.value)\n    }\n\n    const handleClose = () => {\n        setFile(null)\n        setOpen(false)\n    }\n\n    const handleSave = () => {\n        onSave(file)\n        setFile(null)\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Select file to attach</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={file}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={null}>\n                                    <em>None</em>\n                                </MenuItem>\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst FileCard = ({file, index, handleDelete}) => {\n    return <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </Paper>\n}\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n    const history = useHistory()\n\n    const {loggedIn} = useLoggedIn()\n    const user = jwtUtils.getUser()\n\n    const [name, setName] = useState(user?.firstName || \"\")\n    const [surname, setSurname] = useState(user?.lastName || \"\")\n    const [email, setEmail] = useState(user?.mail || \"\")\n    const [files, setFiles] = useState([])\n    const [loadedFiles, setLoadedFiles] = useState([])\n    const [open, setOpen] = useState(false)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    useEffect(() => {\n        if(loggedIn)\n            jobSeekerAPI.getFiles().then(files => {\n                setLoadedFiles(files)\n            })\n    }, [])\n\n    const apply = () => {\n        if (validate()) {\n            if (files === []) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else {\n                validatedApply(files)\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        withSwal({\n            loadingTitle: \"Applying\",\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\n            successSwalTitle: \"Success\",\n            successSwalText: `You've successfully applied for this offer! You'll be redirected now to ${loggedIn ? \"your applications\" : \"all offers\"}.`,\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't process your application for this offer\",\n            successFunction: () => history.push(loggedIn ? \"/user/applications\" : \"/offers\" )\n        })\n    }\n\n    const validate = () => {\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    const handleDeleteFile = (index) => {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const onAttachFile = (newFile) => {\n        setFiles(oldFiles => oldFiles.concat([newFile]))\n    }\n\n    return (\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\n                <Button style={{height: \"100%\"}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={handleClickOpen}\n                        fullWidth>\n                    Attach saved file\n                </Button>\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\n            </Grid>}\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\n            </Grid>)}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item md={9} xs={false} />\n            <Grid item md={3} xs={12}>\n                <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={apply}\n                        fullWidth>\n                    Apply\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport React from \"react\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return <div>\n        <Card variant=\"outlined\"\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n            {cardContent}\n        </Card>\n    </div>\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Typography} from '@material-ui/core'\n\n\nexport const SingleMenu = ({ buttons, menuName, offer, history }) => {\n\n    const [anchor, setAnchor] = useState(null)\n\n    const handleClick = (event) => {\n        setAnchor(event.currentTarget)\n    } \n\n    const handleClose = () => {\n        setAnchor(null)\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick} variant=\"outlined\" color=\"primary\">{ menuName }</Button>\n    \n            <Menu\n                anchorEl={anchor}\n                keepMounted\n                open={!!anchor}\n                onClose={handleClose}\n            >\n                {buttons.map(button => (<MenuItem key={button.text}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                            </MenuItem>))}\n            </Menu>\n\n        </div>\n    )\n\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\nimport {SingleMenu} from './SingleMenu.js'\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const groups = (buttons) => buttons.reduce((groups, item) => {\n        const group = (groups[item.menu] || []);\n        group.push(item);\n        groups[item.menu] = group;\n        return groups;\n      }, {});\n\n    const getButtons = () => {\n        const user = jwtUtils.getUser()\n\n        if (user?.userType == \"hr\" || user?.userType == \"organization\") {\n            return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                        {\n                        Object.entries(groups(props.buttons)).map(([menu, buttons]) => {\n                            return <Box key={menu} mr={1} ml={1}>\n                                <SingleMenu menuName={menu} buttons={buttons} offer={offer} history={history} />\n                            </Box>\n                            })\n                        }\n                    </div>)\n        }\n\n        return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n            {props.buttons.map(button => {\n            return <Box key={button.text} mr={1} ml={1}>\n                <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                    <Typography>\n                        {button.text}\n                    </Typography>\n                </Button>\n            </Box>})}\n            </div>\n        )\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                {getButtons()}\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`),\n        menu: \"Apply menu\",\n        style: {color: 'primary', variant: 'contained'}\n    }]\n}\n","import React from \"react\";\nimport { Typography } from '@material-ui/core'\n\nexport const PickUpOffer = () => (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://img.myloview.pl/fototapety/job-application-or-employment-resume-research-for-vacancy-outline-concept-work-candidate-documentation-with-cv-motivation-letter-after-job-interview-vector-illustration-business-labor-and-hr-scene-700-255625478.jpg\" alt=\"Application\" style={{width: '80%'}} />\n            <Typography variant=\"h6\" color=\"textSecondary\">Pick offer from the list on the right</Typography>\n        </div>\n    )","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\nimport {ProcessStage} from '../../../utils/procesStages'\n\nexport const ActiveFilter = ({ label, handleDelete, filter, color }) => {\n\n    const lastLabelWord = label.split(' ')[label.split(' ').length - 1]\n\n    const getLabel = () => lastLabelWord in ProcessStage ? `${filter.type}: ${ProcessStage[lastLabelWord].name}` : label\n\n    return (\n        <Grid item>\n            <Chip label={getLabel()} onDelete={handleDelete} color={color} avatar={<Avatar id={`${label}-avatar`}>\n                {getIconFromFilterType(filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = ({ onFilterSubmitted, reloadItems, InDrawerFilter, InDrawerFilterProps }) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        reloadItems(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter {...InDrawerFilterProps} onFilterSubmitted={handleFilterSubmitted} filters={filters} toggleDrawer={toggleDrawer}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\n","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"../commons/filter/EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../utils/Enums\";\nimport {getFilterValueByType} from \"../../utils/functions\";\nimport {EStellaAutocomplete} from '../EStellaAutocomplete'\n\nexport const InDrawerFilter = ({items, fixedItems, filters, onFilterSubmitted, toggleDrawer}) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...fixedItems.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...fixedItems.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        toggleDrawer()\n        onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(fixedItems.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(fixedItems.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {Filter} from \"../../commons/filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterItems} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../../commons/sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\nimport { InDrawerFilter } from \"../InDrawerFilter\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [fetching, setFetching] = useState(true)\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterItems(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer's details!\",\n                        icon: \"error\"\n                    })\n                })\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n                setFetching(false)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetching(false)\n                    setFetchError(true)\n                })\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = () =>\n        selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n\n    const offersList = () =>\n        <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return fetchError ? <Redirect to=\"/\" /> : (fetching ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter\n                            onFilterSubmitted={handleFilterSubmitted}\n                            reloadItems={handleFilterSubmitted}\n                            InDrawerFilter={InDrawerFilter}\n                            InDrawerFilterProps={{\n                                items: offers,\n                                fixedItems: offers\n                            }}\n                            />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView()} list={offersList()} />}\n        />)\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Edit offer\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Delete offer\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.push(\"/hr/offers\"),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        },\n        menu: \"Applications Menu\"\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\nimport {Typography} from '@material-ui/core'\n\nexport const ApplicationsList = ({applications, onSelectedApplication, forDev=false}) => {\n\n    const extractData = (applicationData) => {\n\n        const application = forDev ? applicationData.application : applicationData\n\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: applicationData\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return applications.length > 0 ?\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n            isSelectable={!!onSelectedApplication}\n        />\n        :\n        <EmptyFilterApplicationsView />\n}\n\nconst EmptyFilterApplicationsView = () => {\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://st2.depositphotos.com/3643473/6205/i/950/depositphotos_62059839-stock-photo-person-and-question-marks.jpg\" alt=\"Person with question marks around head\" style={{width: '80%', marginBottom: '1em'}} />\n            <Typography variant=\"h5\" color=\"textSecondary\">Oh no, your filters are too specific! Try to remove some of them</Typography>\n        </div>\n    )\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {headers} from \"./headers\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId, devMails) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {\n            method: \"PUT\",\n            body: JSON.stringify({\"devs\": devMails}),\n            headers: headers\n        })\n    },\n\n    getApplicationsForDev: function(organizationId, devMail, devPassword) {\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/applications/forDev/${devMail}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n        },\n\n    getNotesByApplicationIdFromHr: (applicationId) => {\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`)\n            .then(response => response.json())\n    },\n\n    getNotesByApplicationIdFromDev: (applicationId, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n    },\n\n    getAllPossibleStages: function() {\n        return checkedFetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    changeStartDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    startProcess: (id) => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    },\n\n    prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {validateEmail} from \"../../utils/functions\";\n\nexport const ApplicationDetails = ({application, isHR, reload, isDev}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id),\n                    successFunction: () => reload(),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        if ( nextStageRequiresDevs() ) {\n            const devMails = []\n            Swal.fire({\n                title: \"We need more info\",\n                icon: \"warning\",\n                text: 'Next stage of this appliaction requires people with technical knowledge. Please, insert their mails here, splitting them with commas (,)',\n                input: \"text\",\n                preConfirm: (devsMails) => {\n                    if (devsMails) {\n                        devsMails.split(\",\")\n                            .map(mail => mail.trim())\n                            .forEach(mail => devMails.push(mail))\n                        devMails.forEach(mail => {\n                            if(!validateEmail(mail)) {\n                                Swal.showValidationMessage(`${mail} is not a valid email`)\n                                devMails.length = 0\n                            } \n                        })\n                    } else {\n                        Swal.showValidationMessage(\"Please, add mails of such people, as you won't be able to change it later.\")\n                    }\n                }\n            }).then(result => {\n                if (result.isConfirmed) {\n                    doSetNextStage(devMails)\n                }\n            })\n        } else {\n            doSetNextStage([])\n        }\n    }\n\n    const doSetNextStage = (devMails) => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id, devMails),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const nextStageRequiresDevs = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"TASK\"], true)\n\n    const stageRequiresMeeting = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"HR_INTERVIEW\"])\n\n    const nextStageIsOneOf = (types, checkForNext) => {\n        let indexOfNextStage = application?.stages?.findIndex(stage => stage.id === application.stage.id)\n        if (checkForNext) indexOfNextStage += 1\n        return types.includes(application?.stages[indexOfNextStage]?.type)\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        isHR ? history.push(`/meeting/organizer/${application.id}`) : history.push(`/meeting/job_seeker/${application.id}`)\n\n    const getNextStageText = () => nextStageIsOneOf([\"ENDED\"], true) ? \"Accept Candidate\" : \"Next Stage\"\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={9}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>{ isHR || isDev ? 'Candidate' : 'You' } didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        {\n                            stageRequiresMeeting() && !getDisabled() && !isDev &&\n                                (<Grid item xs={3} ><Button color=\"secondary\" variant=\"contained\" onClick={teleportToMO} fullWidth><Typography variant=\"body2\">Plan meeting</Typography></Button></Grid>)\n                        }\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR && !isDev &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    {getNextStageText()}\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useEffect, useState} from 'react'\nimport {AssignTasks} from \"../tasks/AssignTasks\";\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\n\nexport const DevApplicationDetails = ({devApplication}) => {\n\n    const application = devApplication?.application\n\n    const { getEncodedDevPassword } = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n\n    const [openAssignTasks, setOpenAssignTasks] = useState(false)\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    useEffect(() => {\n        tasksApi.getTasksFromOrganization(devApplication.organizationUUID, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksFromTaskStage(devApplication.taskStageUUID, devPassword)\n            .then(data => setAlreadyAssignedTasks(data))\n    }, [devApplication, reload])\n\n    const assignTask = () => {\n        setOpenAssignTasks(true)\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName || devApplication?.position}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        <Grid item xs={12}>\n{/*                         UNCOMMENT AFTER MERGE WITH NOTES - ES-231 I THINK SO\n                            <div style={{display: 'flex', gap: '1em', flexFlow: 'row wrap'}}>\n                            {\n                                notes.map(note => <SingleNote note={note} />)\n                            }\n                            </div>\n                             */}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={assignTask}>Assign Task</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <div>\n            <ListElementDetails cardContent={getCardContent()}/>\n            <AssignTasks\n                modalOptions={{open: openAssignTasks, handleClose: () => setOpenAssignTasks(false)}}\n                alreadyAssignedTasks={alreadyAssignedTasks}\n                organizationTasks={organizationTasks}\n                setReload={setReload}\n                assignKey=\"taskStage\"\n                assignUUIDValue={devApplication.taskStageUUID}\n            />\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR, isDev}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                !isDev &&\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import { useState } from 'react'\nimport { Switch } from '@material-ui/core'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {ProcessStage} from '../../../utils/procesStages'\nimport { applicationStatus } from '../../../utils/Enums'\n\nexport const CustomSwitch = ({ onChange, name }) => {\n\n    const [checked, setChecked] = useState(false)\n\n    const handleSwitchChange = ({ target }) => {\n        setChecked(target.checked)\n        onChange(target.checked)\n    }\n\n    const getName = () => name in ProcessStage ? ProcessStage[name].name : name in applicationStatus ? applicationStatus[name] : ''\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={checked} onChange={handleSwitchChange} name={getName()} />}\n                label={getName()}\n            />\n        </FormGroup>\n    )\n}","import { useState } from 'react'\nimport { filterTypes, operators } from '../../../utils/Enums'\nimport {CustomSwitch} from './CustomSwitch'\nimport { Button, Divider, Card, Typography, Grid } from '@material-ui/core'\nimport { EStellaAutocomplete } from '../../EStellaAutocomplete'\nimport { TagsList } from '../../notes/TagsList'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport const ApplicationsInDrawerFilter = ({ items, fixedItems, filters, onFilterSubmitted, toggleDrawer }) => {\n\n    const possibleStages = [...new Set(fixedItems.map(item => item.stage.type))]\n    const statuses = [...new Set(fixedItems.map(item => item.status))]\n    const tags = fixedItems.reduce((acc, item) => [...acc, ...item.tags], [])\n\n    const [toggledStages, setToggledStages] = useState([])\n    const [toggledApplicationStatuses, setToggledApplicationStatuses] = useState([])\n    const [tagsOptions, setTagsOptions] = useState({ tags: [], operator: operators.AND })\n\n    const onStageChange = (stage, isToggled) => {\n        if (isToggled) {\n            setToggledStages([...toggledStages, stage])\n        } else {\n            setToggledStages(toggledStages.filter(toggled => toggled !== stage))\n        }\n    }\n\n    const onApplicationStatusChange = (status, isToggled) => {\n        setToggledApplicationStatuses(isToggled ? [...toggledApplicationStatuses, status] : toggledApplicationStatuses.filter(toggle => toggle !== status))\n    }\n\n    const onTagAdd = (tag) => tag && setTagsOptions({...tagsOptions, tags: [...new Set([...tagsOptions.tags, tag])]})\n    const onTagDelete = (tag) => setTagsOptions({...tagsOptions, tags: tagsOptions.tags.filter(innerTag => innerTag !== tag)})\n    const onOperatorChange = (operator) => setTagsOptions({...tagsOptions, operator: operator.target.value})\n\n    const createFilters = () => [\n        {type: filterTypes.PROCESS_STAGE, value: toggledStages},\n        {type: filterTypes.APPLICATION_STAGE, value: toggledApplicationStatuses},\n        {type: filterTypes.TAGS, value: tagsOptions.tags, operator: tagsOptions.operator}\n    ]\n\n    const handleFilterSubmit = () => {\n        toggleDrawer()\n        onFilterSubmitted(createFilters().filter(filter => filter.value?.length !== undefined ? filter.value?.length > 0 : !!filter.value))\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\", marginTop: '1em'}}>\n\n            <TagsFilter tags={tags} onTagAdd={onTagAdd} onRemoveTag={onTagDelete} onOperatorChange={onOperatorChange} currentTags={tagsOptions.tags} value={tagsOptions.operator} />\n\n            <FilterCard possibleFilters={statuses} title=\"Current Application Status:\" handleStateChange={onApplicationStatusChange} />\n\n            <FilterCard possibleFilters={possibleStages} title=\"Current Process Stage:\" handleStateChange={onStageChange} />\n\n            <Button style={{position: 'absolute', bottom: '5%', right: '20%'}} type=\"outlined\" onClick={handleFilterSubmit}>Filter</Button>\n        </div>\n    )\n}\n\nconst FilterCard = ({ possibleFilters, title, handleStateChange }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{width: '90%', marginLeft: 'auto', marginRight: 'auto', padding: '1em', margin: '2em 0'}}>\n            <Typography variant=\"h6\">{title}</Typography>\n            {possibleFilters.map((filter, idx) => <CustomSwitch key={idx} name={filter} onChange={(isToggled) => handleStateChange(filter, isToggled)} />)}\n        </Card>\n    )\n}\n\nconst TagsFilter = ({ tags, onTagAdd, onRemoveTag, onOperatorChange, value, currentTags=[] }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{width: '90%', marginLeft: 'auto', marginRight: 'auto', padding: '1em', margin: '2em 0'}}>\n            <Typography variant=\"h6\" style={{marginBottom: '1em'}}>Tags:</Typography>\n            <Grid container direction=\"row\" spacing={2} style={{marginBottom: '1em'}}>\n                <Grid sm={7}>\n                    <EStellaAutocomplete\n                        options={tags}\n                        onChange={onTagAdd}\n                        label=\"Tags\"\n                    />\n                </Grid>\n                <Grid item xs={1} />\n                <Grid sm={4}>\n                    <RadioButtons onOperatorChange={onOperatorChange} value={value} />\n                </Grid>\n            </Grid>\n            <TagsList\n                tags={currentTags}\n                deletable\n                onDelete={onRemoveTag}\n            />\n        </Card>\n    )\n}\n\nconst RadioButtons = ({ onOperatorChange, value }) => {\n\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Operators</FormLabel>\n            <RadioGroup value={value} onChange={onOperatorChange} style={{display: 'flex', flexDirection: 'row'}}>\n                <FormControlLabel value={operators.AND} control={<Radio />} label=\"And\" />\n                <FormControlLabel value={operators.OR} control={<Radio />} label=\"Or\" />\n            </RadioGroup>\n        </FormControl>\n    )\n}","import {useState} from 'react'\nimport {Button, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {constants} from \"../../utils/constants\";\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {NotesMenu} from './NotesMenu'\n\nconst drawerWidth = 600;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\n\nexport const NotesDrawer = ({ notes, uuid, uuid_key, reload, setReload, anchor = \"left\", shouldUseAuthFetchToPost = false }) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState(false)\n\n    const handleNoteClick = () => {\n        setOpen(true)\n    }\n\n    const closeNote = () => {\n        setOpen(false)\n    }\n\n    const closedView = (<List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                            <ListItem>\n                                <Button onClick={handleNoteClick}>\n                                    <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                                </Button>\n                            </ListItem>\n                        </List>)\n\n    const getCloseIconStyling = () => anchor === \"left\" ? {left: '20px'} : {right: '20px'}\n\n    return (\n        <div>\n            {open && (\n                <Button onClick={closeNote} style={{position:'absolute', top: '5em', zIndex: '10001', ...getCloseIconStyling()}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                  })}\n                  classes={{\n                    paper: clsx({\n                      [classes.drawerOpen]: open,\n                      [classes.drawerClose]: !open,\n                    }),\n                  }}\n                anchor={anchor}\n            >\n                {open ? <NotesMenu notes={notes} uuid={uuid} uuid_key={uuid_key} reload={reload} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> : closedView}\n            </Drawer>\n        </div>\n    )\n}","import {Redirect, useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {DevApplicationDetails} from './DevApplicationDetails';\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\nimport { Filter } from '../commons/filter/Filter'\nimport { filterItems } from \"../../utils/functions\";\nimport { ApplicationsInDrawerFilter } from \"./filters/InDrawerFilter\";\nimport { Typography } from '@material-ui/core'\nimport {NotesDrawer} from '../notes/NotesDrawer'\nimport { applicationsAPI } from \"../../utils/apis/applicationsAPI\";\n\nexport const ApplicationsView = ({getApplications, isHR, isDev, mailInBase64, organizationUUID}) => {\n\n    const {id} = useParams()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const devPassword = getEncodedDevPassword()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [selectedApplicationNotes, setSelectedApplicationNotes] = useState([])\n\n    // state for filter and sort\n    const [fixedApplications, setFixedApplications] = useState([])\n    const [sort, setSort] = useState({apply: (applications) => applications})\n\n    const handleFilterSubmitted = (filters) => {\n        if(areFiltersValid(filters)){\n            setApplications(sort.apply(filterItems(fixedApplications, filters)))\n        }\n        else {\n            setApplications(sort.apply(fixedApplications))\n        }\n    }\n\n    const areFiltersValid = (filters) => filters.map(filter => filter.value)\n        .some(value => value?.length !== undefined ? value?.length > 0 : !!value)\n\n    const text = isDev ? `We weren't able to get this offer's applications! You will be redirected to main page.` : isHR ? `We weren't able to get this offer's applications! You will be redirected to your offers.` : `We weren't able to get your applications!`\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id, mailInBase64, devPassword)\n            .then(data => {\n                const applications = isDev ? data.filter(application => application.application.status !== \"REJECTED\") : data\n                setApplications(applications)\n                setFixedApplications(applications)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: text,\n                    icon: \"error\"\n                }).then(() => {\n                    setFetchError(true)\n                    setFetching(false)\n                })\n            })\n    }, [setApplications, getApplications, id, reload])\n\n    useEffect(() => {\n        if (selectedApplication && isHR) {\n            applicationsAPI.getNotesByApplicationIdFromHr(selectedApplication.id)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        } else if (selectedApplication && isDev) {\n            applicationsAPI.getNotesByApplicationIdFromDev(selectedApplication.application.id, devPassword)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        }\n    }, [selectedApplication, reload])\n\n    const getNotesDrawerAnchor = () => isHR ? \"left\" : isDev ? \"right\" : \"none\"\n    const getNotesDrawerStyle = () => isDev ? {marginRight: '3em'} : {marginLeft: '3em'}\n    const getSelectedApplicationId = () => isDev ? selectedApplication?.application?.id : selectedApplication?.id\n\n    const getFilterView = (applications, fixedApplications) => (\n        <Filter\n            onFilterSubmitted={handleFilterSubmitted}\n            reloadItems={handleFilterSubmitted}\n            InDrawerFilter={ApplicationsInDrawerFilter}\n            InDrawerFilterProps={{\n                items: applications,\n                fixedItems: fixedApplications,\n            }}\n        />\n    )\n\n    const getStandardView = (innerApplications, fixedInnerApplications, WrappedComponent = ApplicationDetails, wrappedProps = {application: selectedApplication, isHR, reload: () => setReload(!reload), isDev}, forDev=false) => (\n        <>\n            <div style={{...getNotesDrawerStyle()}}>\n                <StandardViewAndFilterLayout\n                    filter={getFilterView(innerApplications, fixedInnerApplications)}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <WrappedComponent {...wrappedProps}  /> :\n                                <EmptySelectedApplicationView />}\n                            list={<ApplicationsList\n                                forDev={forDev}\n                                applications={innerApplications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                />\n            </div>\n            { \n                (isHR || isDev) && getSelectedApplicationId() &&\n                <NotesDrawer\n                    notes={selectedApplicationNotes}\n                    uuid={getSelectedApplicationId()}\n                    uuid_key=\"cv_note\"\n                    reload={reload}\n                    setReload={setReload}\n                    anchor={getNotesDrawerAnchor()}\n                    shouldUseAuthFetchToPost={isHR}\n                /> \n            }\n        </>\n    )\n\n    const mapApplicationForDev = application => {\n        return {\n            ...application,\n            organizationUUID\n        }\n    }\n    const getDevView = () => getStandardView(applications.map(mapApplicationForDev), fixedApplications.map(mapApplicationForDev),\n    DevApplicationDetails, {devApplication: {...selectedApplication, organizationUUID}, isDev, reload: () => setReload(!reload)}, true)\n\n    const getView = () => isDev ? getDevView() : getStandardView(applications, fixedApplications)\n\n    return fetchError ? <Redirect to={isHR ? '/hr/offers' : '/'} />\n        : (fetching ? <CenteredCircularProgress size={80} />\n            : (fixedApplications?.length !== 0 && fixedApplications !== undefined ?\n                getView()\n                 : <EmptyApplicationsView isHR={isHR} isDev={isDev} />\n            )\n        )\n}\n\nconst EmptySelectedApplicationView = () => {\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://img.myloview.pl/fototapety/job-application-or-employment-resume-research-for-vacancy-outline-concept-work-candidate-documentation-with-cv-motivation-letter-after-job-interview-vector-illustration-business-labor-and-hr-scene-700-255625478.jpg\" alt=\"Application\" style={{width: '80%'}} />\n            <Typography variant=\"h6\" color=\"textSecondary\">Pick application from the list on the right</Typography>\n        </div>\n    )\n}","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                color=\"secondary\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect, useState} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n    const [fetchError, setFetchError] = useState(false)\n\n    const history = useHistory()\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => setFetchError(true))\n                })\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => history.push('/hr/offers'),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\n        <Grid container spacing={2}>\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    minRows: 8,\n                    maxRows: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        form=\"offer-form\"\n                        color=\"primary\"\n                        fullWidth>\n                    Save offer\n                </Button>\n            </Grid>\n        </Grid></div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get process data!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get possible stages!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n    }, [reload, processId])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        if(items !== getStages()) {\n            withSwal({\n                loadingTitle: \"Updating stages\",\n                promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n                successSwalTitle: \"Stages Updated\",\n                successFunction: () => setReload(reload => !reload)\n            })\n        }\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\n        firstListItems={getStages()}\n        secondListItems={getPossibleStages()}\n        //temporary solution - would be the best to actually change TwoColumnDnD to fire callback about setting items length\n        forbiddenIndexes={[0, getStages().length]}\n        warningFunction={() => fireSwal(\n            \"You can't do this!\",\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\n            \"warning\"\n        )}\n        itemRender={(item) => (\n            <Box m={1}>\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                    <CardContent>\n                        <Typography>{item.type}</Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )}\n        onFirstListChange={(items) => handleSubmit(items)}\n        leftSubmitGridProps={{xs: 10}}\n        centerSubmitGridProps={{xs: 1}}\n        rightSubmitGridProps={{xs: 1}}\n        materialButtonProps={{variant: \"outlined\"}}\n        submitDivStyle={{marginTop: \"15px\"}}\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n    />\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageDate = ({selectedDate, onChange, processStartDate, disabled, label}) => {\n\n    const handleDateChange = (date) => {\n        if (!processStartDate || date > new Date(processStartDate)) {\n            onChange(date)\n        } else if(!date) {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you didn't provide any date for us!\",\n                icon: \"error\"\n            })\n        }  else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than today!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n            disabled={disabled}\n            label={label}\n        />\n}\n\nManageDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageDate} from \"./ManageDate\";\nimport {Button, Card, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport Swal from \"sweetalert2\";\nimport {useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nDate.prototype.addDays = function(days) {\n    let date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nexport const Dates = ({ process, reload, setReload }) => {\n\n    const getDateOrDefault = (stringDate, shouldAddDayToDefault = false) => !!stringDate ? new Date(stringDate) : shouldAddDayToDefault ? new Date().addDays(1) : new Date()\n\n    const [selectedEndDate, setSelectedEndDate] = useState(getDateOrDefault(process?.endDate))\n    const [selectedStartDate, setSelectedStartDate] = useState(getDateOrDefault(process?.startDate, true))\n    \n    const isProcessStarted = () => process?.startDate != null && new Date(process?.startDate) <= new Date()\n\n    const startProcess = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after you start your process\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Starting process\",\n                    promise: () => processAPI.startProcess(process.id),\n                    successSwalTitle: \"Process Started!\",\n                    successFunction: () => setReload(!reload)\n                })\n            }\n        })\n    }\n\n    const handleEndSubmit = () => {\n        if (selectedEndDate) {\n            withSwal({\n                loadingTitle: \"Updating end date\",\n                promise: () => processAPI.changeEndDate(process.id, selectedEndDate),\n                successSwalTitle: \"Date updated\",\n                successFunction: () => setReload(!reload)\n            })\n        } else {\n            fireInvalidDateSwal()\n        }\n    }\n\n    const handleStartSchedule = () => {\n        !!selectedStartDate ? \n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after the date your process will start\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Updating start date\",\n                    promise: () => processAPI.changeStartDate(process.id, selectedStartDate),\n                    successSwalTitle: \"Date updated\",\n                    successFunction: () => setReload(!reload)\n                })      \n            }\n        }) : fireInvalidDateSwal()\n    }\n\n    const fireInvalidDateSwal = () => {\n        Swal.fire({\n            title: \"You cannot do this!\",\n            text: \"You forgot to set a date before scheduling!\",\n            icon: 'error'\n        })\n    }\n\n    return (\n        <>\n            <Grid container spacing={3} style={{height: \"100%\", textAlign: 'center'}} direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule Start Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedStartDate}\n                                        onChange={(date) => setSelectedStartDate(date)}\n                                        label=\"Start of recruitment process\"\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleStartSchedule} disabled={isProcessStarted()}>Schedule</Button>\n                            </div>\n                            <Divider style={{marginTop: '1em', marginBottom: '1em'}} />\n                            <Typography variant=\"h6\" style={{marginBottom: '5px'}}>Or</Typography>\n                            <Button variant=\"contained\" color=\"primary\" onClick={startProcess} disabled={isProcessStarted()}>Start your process now!</Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule End Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedEndDate}\n                                        onChange={(date) => setSelectedEndDate(date)}\n                                        processStartDate={process?.startDate}\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleEndSubmit}>Schedule</Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\n","import {ManageStages} from \"./ManageStages\";\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Dates} from \"./Dates\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [fetchError, setFetchError] = useState(false)\n    const [process, setProcess] = useState(null)\n\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [id, reload])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const ManageProcessInside = () =>\n        process == null ? <CenteredCircularProgress size={80} /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"1em\", marginTop: '1em'}}>\n                            <Dates process={process} reload={reload} setReload={setReload} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid item style={{marginTop: '1em'}}>\n                            <ManageStages processId={id}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n\n    return fetchError ? <Redirect to=\"/\" /> : <ManageProcessInside />\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const CompanyRegistration = () => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import React, {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = () => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [outsideValues, setOutsideValues] = useState(null)\n    const [fetchError, setFetchError] = useState(false)\n    const [userData, setUserData] = useState(null)\n    const [possibleHosts, setPossibleHosts] = useState(null)\n\n    let redirectPath = \"/\"\n\n    const type = paramType || propType\n\n    useEffect(() => {\n        if(type === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    if (data?.application?.stage?.type === \"HR_INTERVIEW\") {\n                        setPossibleHosts(data?.possibleHosts)\n                    }\n                    setOutsideValues({hosts: data?.hosts || [], guest: data?.application?.jobSeeker?.user?.mail || '', uuid: data?.id})\n                })\n                .catch(() =>\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We couldn't find the interview data for this application! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => {\n                        setFetchError(true)\n                    })\n                )\n        } else {\n            setUserData({uuid, userType: type})\n        }\n    }, [type, uuid])\n\n    const getStillFetching = () => type === \"organizer\" ? !!outsideValues : !!userData\n\n    return fetchError ? <Redirect to={redirectPath} /> : (\n        getStillFetching() ? <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                                userData={userData}\n                                outsideJwt={jwtUtils.getAuthToken()}\n                                drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}}\n                                outsideMeetingValues={outsideValues}\n                                allowedHostsMails={possibleHosts}\n                                />: <CenteredCircularProgress size={80} />\n    )\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {hrOfferButtons} from \"../HrOfferButtons\";\nimport {theme} from \"../../../utils/theme\";\nimport {OffersView} from \"./OffersView\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst marginWithDrawer = \"100px\"\n\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\n    <OffersView\n        getOffers={() => offersAPI.getOffersFromHr()}\n        buttons={hrOfferButtons(theme)}\n    />\n    <Drawer\n        variant=\"permanent\"\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\n    >\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n            <ListItem>\n                <Link to=\"/hr/offers/add\">\n                    <IconButton>\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                    </IconButton>\n                </Link>\n            </ListItem>\n        </List>\n    </Drawer>\n</div>\n\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Box from \"@material-ui/core/Box\";\nimport FilesDropzone from \"./FilesDropzone\";\n\nfunction _base64ToArrayBuffer(base64) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst FilesChangedTip = ({onSaveFiles}) =>\n    <Paper elevation={0} variant=\"outlined\" style={{\n        padding: \"1em\",\n        paddingLeft: \"1em\",\n        backgroundColor: deepOrange[100],\n        display: \"flex\"\n    }}>\n        <Grid container>\n            <Grid item xs={12} md={9} lg={12}>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    height=\"100%\"\n                >\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={12}>\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\n            </Grid>\n        </Grid>\n    </Paper>\n\nconst OldFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\n\nconst NewFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\n    const ch = <>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\n            >\n                <GetAppOutlined/>\n            </IconButton>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </>\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n        {initialFiles.some(a => a.id === file.id) ?\n            <OldFilePaper>{ch}</OldFilePaper>:\n            <NewFilePaper>{ch}</NewFilePaper>}\n    </Grid>\n}\n\nexport const FilesPage = () => {\n    const [downloadedFiles, setDownloadedFiles] = useState([])\n    const [files, setFiles] = useState([])\n\n\n    const downloadedFilesSet = new Set(downloadedFiles)\n    const filesSet = new Set(files)\n\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\n\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\n        f.sort((a, b) => a.id - b.id)\n        setDownloadedFiles(f)\n        setFiles(f)\n    })\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    useEffect(\n        fetchFiles,\n    []\n    )\n\n    function handleDownload(fileName, base64) {\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    function handleDelete(index) {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    function onSaveFiles() {\n        withSwal({\n            title: \"Saving files\",\n            promise: () => jobSeekerAPI.insertFiles(files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved your files!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't save these files for you\",\n            successFunction: fetchFiles\n        })\n    }\n\n    return <div>\n        <Grid container spacing={2}>\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\n                </Grid>\n                {files.map((value, index) =>\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\n                )}\n            </Grid>\n            <Grid item xs={false} md={6} lg={10} />\n            <Grid item xs={12} md={6} lg={2}>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {userTypes} from \"../../utils/Enums\";\n\n\nfunction UserInfo({label, value}) {\n    return <><Grid item xs={12} sm={3}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\n    </Grid>\n    <Grid item xs={12} sm={9}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\n    </Grid></>\n}\n\nfunction displayType(userType) {\n    switch (userType) {\n        case userTypes.JOB_SEEKER:\n            return \"Candidate\"\n\n        case userTypes.HR:\n            return \"Human Resources Specialist\"\n\n        case userTypes.ORGANIZATION:\n            return \"Organization\"\n\n        default:\n            return undefined\n    }\n}\n\nexport const ProfilePage = () => {\n    const user = jwtUtils.getUser()\n    return <Grid container>\n        <Grid item lg={2} md={1} sm={false}/>\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\n            <UserInfo label=\"ID:\" value={user.userId} />\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\n            <UserInfo label=\"Mail:\" value={user.mail} />\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\n        </Grid>\n        <Grid item lg={2} md={1} sm={false}/>\n    </Grid>\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const userAPI = {\n\n    updateUser: function (userRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userRequest)\n        })\n    },\n\n    updatePersonalData: function (personalData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(personalData)\n        })\n    },\n\n    updatePassword: function (passwordRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(passwordRequest)\n        })\n    }\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../commons/formsCommons/FormField\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useEffect} from \"react\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userAPI} from \"../../utils/apis/UserAPI\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst EditPersonalInfoForm = () => {\n    const user = jwtUtils.getUser()\n    const defaultFormState = {\n        mail: user.mail,\n        firstName: user.firstName,\n        lastName: user.lastName\n    }\n\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = ({firstName, lastName}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\n            successSwalTitle: \"Successful change!\",\n            errorSwalTitle: \"We couldn't change your personal data!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"mail\"\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Email\",\n                                disabled: true\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"firstName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"First Name\",\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"lastName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Last Name\",\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nconst EditPasswordForm = () => {\n    const defaultFormState = {\n        oldPassword: \"\",\n        newPassword: \"\",\n        repeatedPassword: \"\"\n    }\n\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const newPasswordInput = watch(\"newPassword\")\n\n    useEffect(\n        () => {\n            if(newPasswordInput)\n                trigger(\"repeatedPassword\")\n        },\n        [newPasswordInput, trigger]\n    )\n\n    const onSubmit = ({oldPassword, newPassword}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\n            successSwalTitle: \"Successfully changed password!\",\n            errorSwalTitle: \"We couldn't change your password!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"oldPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Current password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"newPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"New password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"repeatedPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Repeat password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nexport const SettingsPage = () => {\n    return <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <EditPersonalInfoForm />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <EditPasswordForm />\n            </Grid>\n        </Grid>\n    </>\n}","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid} from \"@material-ui/core\";\nimport {FilesPage} from \"./FilesPage\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\nimport {ProfilePage} from \"./ProfilePage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction TabPanel({ children, value, tabName, ...other }) {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== tabName}\n            id={`tabpanel-${tabName}`}\n            aria-labelledby={`tab-${tabName}`}\n            style={{padding: \"1em\", color: \"primary\"}}\n            {...other}\n        >\n            {value === tabName && <Box>{children}</Box>}\n        </div>\n    );\n}\n\nfunction a11yProps(tabName) {\n    return {\n        id: `tab-${tabName}`,\n        'aria-controls': `tabpanel-${tabName}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    indicator: {\n        left: \"0px\"\n    }\n}));\n\nexport default function SettingsOverlay(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const state = props.location?.state\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\n    const user = jwtUtils.getUser();\n\n    const handleChange = (event, newValue) => setValue(newValue)\n\n    return user ? (<Grid container>\n        <Box clone order={{xs: 2, md: 1}}>\n            <Grid item xs={12} md={9} lg={10}>\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\n                    <ProfilePage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\n                    <SettingsPage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\n                    <FilesPage />\n                </TabPanel>\n            </Grid>\n        </Box>\n        <Box clone order={{xs: 1, md: 2}}>\n            <Grid item xs={12} md={3} lg={2}>\n                <Tabs\n                    value={value}\n                    orientation=\"vertical\"\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"settings tabs\"\n                >\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\n                </Tabs>\n            </Grid>\n        </Box>\n        </Grid>) : <Redirect to=\"/\" />;\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            }\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\n\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\n    <Box mt={0} mb={0}>\n        <Grid container>\n            {users.map((user, idx) =>\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                    <Grid container>\n                        <Grid item xs={11}>\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\n                                                 mail={user.mail}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Box mt={3}>\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\n                                    <ClearIcon fontSize=\"medium\"/>\n                                </IconButton>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>)}\n        </Grid>\n    </Box>","import {Grid} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\n\nexport const OrganizationPartnersManagement = (props) => {\n\n    const [users, setUsers] = useState([])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n        organizationsAPI.getHrPartnersByOrganization()\n            .then(data => {\n                updateUsers(data)\n            })\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\n        </Grid>\n    </div>\n}","import {Card, Typography} from '@material-ui/core';\n\nexport const SingleTestCase = ({ testCase }) => {\n\n    return (\n        <Card style={{margin: '1em 0', padding: '1em', height: '8vh'}}>\n            <Typography variant=\"body1\">\n                Test Data: {testCase?.testData} <br />\n                Expected Result: {testCase?.expectedResult}\n            </Typography>\n        </Card>\n    )\n}","import {Card, Typography, useTheme} from '@material-ui/core'\n\nexport const SingleResult = ({ result }) => {\n\n    const theme = useTheme()\n\n    const getBackgroundColor = () => result?.err || !result?.passed ? theme.status.danger.light : theme.status.success.light\n\n    const getText = () => result?.err ? `Error: ${result.err}` : `Result: ${result.result}`\n\n    return (\n        <Card style={{backgroundColor: getBackgroundColor(), margin: '1em 0', padding: '1em', height: '8vh', alignItems: 'center', display: 'flex'}}>\n            <Typography variant=\"body1\">\n                {getText()}\n            </Typography>\n        </Card>\n    )\n}","import MonacoEditor from 'react-monaco-editor';\nimport {decodeBase64} from '../../../utils/hooks/Base64';\nimport {MarkdownViewer} from '../../commons/MarkdownViewer';\nimport {Card, Typography} from '@material-ui/core'\nimport { useState, useRef, useEffect } from 'react'\nimport {SingleTestCase} from './SingleTestCase'\nimport {SingleResult} from './SingleResult'\n\nexport const SingleTaskReview = ({ task }) => {\n    const { code, results, tests, description } = task\n\n    const decodedResults = JSON.parse(decodeBase64(decodeBase64(results)))\n    const decodedTestCases = JSON.parse(decodeBase64(tests))\n\n    const [height, setHeight] = useState(0)\n    const ref = useRef(null)\n\n    useEffect(() => {\n        setHeight(ref.current.clientHeight)\n    })\n\n    return (\n        <div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', width: \"100%\", height: \"40%\"}}>\n                <MonacoEditor\n                    value={decodeBase64(code)}\n                    theme=\"vs-dark\"\n                    language=\"plain-text\"\n                    width=\"100%\"\n                    height={`${height+2}px`}\n                    options={{readOnly: true}}\n                />\n                <Card style={{ padding: '1em', width: '100%' }} variant=\"outlined\" ref={ref}>\n                    <MarkdownViewer markdown={decodeBase64(description)} />\n                </Card>\n            </div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', marginTop: '2em', justifyContent: 'space-between'}}>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Test Cases:</Typography>\n                    {decodedTestCases.map((testCase, idx) => (<SingleTestCase key={idx} testCase={testCase}/>))}\n                </Card>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Results:</Typography>\n                    {decodedResults.map((result, idx) => (<SingleResult key={idx} result={result} />))}\n                </Card>\n            </div>\n        </div>\n    )\n}","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel} from 'react-responsive-carousel';\nimport {SingleTaskReview} from './SingleTaskReview'\n\nexport const TasksCarousel = ({ tasks }) => {\n\n    return (\n        <div style={{ marginLeft: '5em'}}>\n            <Carousel\n                infiniteLoop\n            >\n                {tasks.map((task, idx) => <SingleTaskReview task={task} key={idx} />)}\n            </Carousel>\n        </div>\n    )\n}","import {useEffect, useState} from 'react'\nimport {tasksApi} from '../../../utils/apis/tasksAPI';\nimport {useDevPassword} from '../../../utils/hooks/useDevPassword'\nimport {NotesDrawer} from '../../notes/NotesDrawer';\nimport {TasksCarousel} from './TasksCarousel'\nimport Swal from 'sweetalert2'\nimport {useHistory} from 'react-router-dom'\nimport {Typography} from '@material-ui/core'\nimport CenteredCircularProgress from '../../commons/CenteredCircularProgress'\n\nexport const ReviewTask = ({ id: taskStageUUID }) => {\n\n    const { getEncodedDevPassword } = useDevPassword()\n    \n    const history = useHistory()\n\n    const [notes, setNotes] = useState([])\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n       tasksApi.getNotesWithTasksByTaskUUID(taskStageUUID, getEncodedDevPassword())\n            .then(data => {\n                setNotes(data?.notes || [])\n                setTasks(data?.tasks || [])\n                setIsFetching(false)\n            })\n            .catch( err => {\n                    setIsFetching(false)\n                    Swal.fire({\n                        title: \"You're not supposed to be here!\",\n                        text: \"We're sorry, but password you have provided was incorrect.\",\n                        icon: \"error\"\n                    }).then(() => {\n                        history.push('/')\n                    })\n                }   \n            )\n    }, [taskStageUUID, reload])\n\n    \n\n    return(\n        <div>\n            {\n                isFetching ? <CenteredCircularProgress size={100} /> : (\n                    <div>\n                        <NotesDrawer notes={notes} uuid={taskStageUUID} uuid_key=\"task_note\" reload={reload} setReload={setReload} />\n                        { tasks?.length > 0 && !isFetching ? <TasksCarousel tasks={tasks} /> : <Typography variant=\"h5\" style={{textAlign: 'center'}}> There are no tasks results to show! </Typography>}\n                    </div>\n                )\n            }\n        </div>\n    )\n}","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    const addTestCaseAndClearFields = () => {\n        addTestCase(testCase)\n        setTestCase({})\n    }\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCaseAndClearFields(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    useEffect(() => {\n        handleSubmit(testCases)\n    }, [testCases])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {encodeBase64} from '../../../utils/hooks/Base64';\n\nlet task = {id: null}\n\nconst clearTask = () => task = {id: null}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(setReload, credentials)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n    task['testsBase64'] = encodeBase64(JSON.stringify(testCases))\n}\n\nconst createTests = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(setReload, credentials)\n        }\n    })\n}\n\nconst createTimeLimit = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            create(setReload, credentials)\n        }\n    })\n}\n\nconst create = (setReload, credentials) => {\n    tasksApi.updateTasks(task, credentials, setReload)\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\n\nexport const TasksList = ({ fetchTasks, organizationId }) => {\n\n    const [reload, setReload] = useState(false)\n\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        fetchTasks(organizationId, getEncodedDevPassword())\n            .then(data => {\n                setTasks(data)\n            })\n    }, [fetchTasks, organizationId, reload])\n\n    const addTask = () => {\n        createTask(setReload, { password: getEncodedDevPassword(), organizationId })\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginRight: '5%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={[]}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n                anchor=\"right\"\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","import {useState} from 'react'\nimport {Drawer, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {TasksList} from './tasks/crud/TasksList';\nimport {ApplicationsView} from './applications/ApplicationsView'\n\nexport const DevView = ({ fetchTasks, getApplications, id, mailInBase64 }) => {\n\n    const [view, setView] = useState('edit')\n\n    const getView = () => {\n        if (view === 'edit') {\n            return (\n                <TasksList\n                    fetchTasks={fetchTasks}\n                    organizationId={id}\n                />\n            )\n        } else if (view === 'assign') {\n            return (\n                <ApplicationsView\n                    isHR={false}\n                    isDev={true}\n                    getApplications={getApplications}\n                    mailInBase64={mailInBase64}\n                    organizationUUID={id}\n                />\n            )\n        } else return null\n    }\n\n    return (\n    <div>\n        <div style={{marginLeft: '10%'}}>\n            {getView()}\n        </div>\n        <Drawer\n            open\n            variant=\"permanent\"\n        >\n            <List style={{marginTop: '5em'}}>\n                <ListItem button onClick={() => setView('edit')}>\n                    <ListItemIcon>\n                        <EditIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Edit Tasks\" />\n                </ListItem>\n                <ListItem button onClick={() => setView('assign')}>\n                    <ListItemIcon>\n                        <AssignmentIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Assign Task\" />\n                </ListItem>\n            </List>\n        </Drawer>\n    </div>\n    )\n}","import { Typography, Button } from '@material-ui/core'\nimport {useHistory} from 'react-router-dom'\n\nexport const Page404 = () => {\n\n    const history = useHistory()\n\n    const redirectToMainPage = () => history.push('/')\n\n    return (\n        <div style={{textAlign: 'center', marginTop: '2em'}}>\n            <Typography variant=\"h5\" style={{margin: '1em'}}>\n                Holy cow that's outta space!\n            </Typography>\n            <img src=\"https://i.pinimg.com/736x/66/f6/23/66f623dc35c80dbf8901b40cb0410278.jpg\" alt=\"Holy Cow that's outta space\" width=\"27%\" />\n            <Typography variant=\"h6\" color=\"textSecondary\" style={{margin: '1em'}}>\n                Let us take you back to main page\n            </Typography>\n            <Button onClick={redirectToMainPage} color=\"primary\" variant=\"contained\" size=\"large\">Take me back</Button>\n        </div>\n    )\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"./theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {MultipleTasksWrapper} from \"../components/tasks/MultipleTasksWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\nimport {WithDevPassword} from \"../components/tasks/WithDevPassword\";\nimport {ReviewTask} from \"../components/tasks/review/ReviewTask\";\nimport {Note} from '../components/notes/Note';\nimport {tasksApi} from './apis/tasksAPI'\nimport {DevView} from '../components/DevView'\nimport {Page404} from '../components/Page404'\n\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewKind/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewKind/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/offers/:id\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/assign/:id/:mailInBase64\", <WithDevPassword WrappedComponent={DevView} wrappedProps={{ fetchTasks: (id, password) => tasksApi.getTasksByOrganization(id, password), getApplications: (organizationId, devMail, devPassword) => applicationsAPI.getApplicationsForDev(organizationId, devMail, devPassword) }} createPassword={(id, password) => `${id}:${password}`} />),\n    createRoute('/task/:taskStageUUID', <MultipleTasksWrapper fetchTasks={(id) => tasksApi.getTasks(id)} />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\n    createRoute(\"/settings\", <SettingsOverlay />),\n    createRoute(\"/tasks/review/:id\", <WithDevPassword WrappedComponent={ReviewTask} wrappedProps={{}} createPassword={(id, password) => `${password}:${id}`} />),\n    createRoute(\"/note\", <Note text=\"Note text as we can see\" tags={[\"Applied\", \"Some tag\", \"Some other tag\"]} />),\n    createRoute(\"*\", <Page404 />)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./utils/theme\"\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}