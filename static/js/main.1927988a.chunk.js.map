{"version":3,"sources":["utils/constants.js","components/navbar/Navbar.js","test/utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/Enums.js","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/schemas/tokenPayloadSchema.js","utils/apis/LoginAPI.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/chekedFetch.js","utils/authFetch.js","utils/apis/files.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/TasksApi.js","components/tasks/TaskWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","components/offers/filter/EStellaSlider.js","components/offers/filter/AutocompleteFilter.js","components/offers/filter/InDrawerFilter.js","components/offers/filter/ActiveFilter.js","components/offers/filter/Filter.js","components/offers/sorter/Sorter.js","components/offers/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/commons/formsCommons/WithSwal.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","utils/procesStages.js","components/applications/ApplicationTimeline.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageEndDate.js","components/organization/OrganizationPartner.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/crud/Task.js","components/commons/MarkdownEditor.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/AddDeadline.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/tasks/TasksViewWrapper.js","utils/hooks/useDevPassword.js","test/DummyValues.js","components/meeting/preparing/MeetingOrganizerWrapper.js","utils/routes.js","components/process/manage/ManageProcess.js","components/organization/OrganizationsPartnerList.js","App.js","reportWebVitals.js","index.js"],"names":["constants","Navbar","theme","useTheme","AppBar","position","style","background","palette","primary","dark","height","zIndex","drawer","Toolbar","marginLeft","marginRight","to","color","textDecoration","Typography","variant","Button","id","createTheme","status","danger","main","success","secondary","card","light","focused","filterTypes","compare","a","b","name","offerSort","apply","offers","sort","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","scrollToTop","document","body","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","value","filterOffers","tmpOffers","forEach","offer","arg","minSalary","maxSalary","organization","includes","createFilterFunction","getIconFromFilterType","ListElement","data","selected","onClick","idx","selectedStyle","backgroundColor","width","marginBottom","Card","CardContent","first","Divider","marginTop","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","useState","selectedIdx","setSelectedIdx","handleSelect","item","overflowY","map","getListItems","OffersList","props","onSelectedOffer","handleShortOfferSelect","defaultProps","recruitmentServiceBasicAPILink","meetingOrganizerLink","headers","tokenPayloadSchema","firstName","lastName","userType","mail","iss","isNaN","Number","iat","exp","loginAPI","login","password","fetch","method","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","Promise","resolve","setTimeout","text","ok","jwtAPI","userId","refreshToken","refreshApiPath","localStorage","setItem","get","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","getItem","getRefreshToken","deleteAuthToken","removeItem","deleteRefreshToken","undefined","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","checkedFetch","url","error","statusCode","Error","checkResponseStatusOrThrowError","catch","err","Swal","fire","title","message","icon","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","convertFileToBase64","file","reject","reader","FileReader","readAsDataURL","onload","result","onerror","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","offersAPI","getOfferById","offerId","json","getAllOffers","applyWithNoUser","surname","files","all","fileName","fileBase64","convertedFiles","substring","indexOf","create","offerData","update","applyWithUser","offerID","getOffersFromHr","getOffersFromOrganization","deleteOffer","CenteredCircularProgress","display","justifyContent","CircularProgress","LandingPage","history","useHistory","setOffers","useEffect","Grid","container","spacing","xs","sm","src","Image1","alt","direction","Image2","Image3","size","textAlign","fullWidth","interviewAPI","interviewId","applicationId","MeetingFab","mainButtonStyles","event","onDefaultView","onWhiteboard","onTask","tasksApi","getTask","processId","_","codeCheckerLink","sendTestResult","task","TaskWrapper","propId","toSolveTask","submitLeftOffset","useParams","fetchTasks","NaN","outerMonacoWrapperStyle","codeCheckerBaseLink","absoluteOffset","settings","top","right","submit","left","outerOnSubmit","JitsiWrapper","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","getWhiteboardCode","roomName","client_id","process","code","overflow","admin","displayName","MeetingDisplayNameForm","setName","Box","mt","mb","m","TextField","onChange","target","label","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","companyId","isFetching","setIsFetching","Fetched","ApplyForm","setSurname","setEmail","setFile","shouldValidateField","setShouldValidateField","validatedApply","swal","showLoading","close","confirmButtonText","validate","validateName","validateSurname","helperText","showDenyButton","denyButtonText","isConfirmed","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","border","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","padding","maxHeight","OfferDetails","component","flexWrap","buttons","button","mr","ml","action","localization","skill","level","p","description","getCardContent","PickUpOffer","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","AutocompleteFilter","Autocomplete","options","onSelect","renderInput","params","InDrawerFilter","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","Math","fixedOffers","companyOptions","Set","positionOptions","window","screen","calculateWidth","toggleDrawer","fontSize","bottom","md","onFilterSubmitted","ActiveFilter","Chip","onDelete","handleDelete","avatar","Avatar","Filter","open","setOpen","setFilters","handleFilterDelete","newFilters","reloadOffers","Drawer","anchor","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","handleClose","Boolean","currentTarget","clickable","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","func","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","view","alignItems","OffersView","selectedOffer","setSelectedOffer","setFixedOffers","setSort","handleFilterSubmitted","getOffers","layoutInternalView","offersList","UnauthenticatedPage","withUserAuth","WrappedComponent","permittedTypes","wrappedProps","user","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","floor","isStatus2xx","swalResult","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","application","jobSeeker","stage","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","useStyles","makeStyles","paper","secondaryTail","ApplicationTimeline","stages","currentStageId","classes","isBeforeCurrent","getTimelineContent","Paper","elevation","className","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","boxShadow","shadows","GenericFileViewer","txt","setTxt","File","Modal","getViewer","FileViewerWrapper","undecodedFile","applicationsAPI","console","log","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","items","changeEndDate","date","preparedDate","this","_prepareDate","getDate","getMonth","getFullYear","ApplicationDetails","isHR","reload","rejectApplication","showCancelButton","cancelButtonText","nextStage","getDisabled","teleportToMO","flexDirection","offerName","applicationDate","seekerFiles","disabled","EmptyApplicationsView","Image","ApplicationsView","getApplications","selectedApplication","setSelectedApplication","setApplications","fetching","setFetching","setReload","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","handleSubmit","control","reset","concat","rules","required","some","s","defaultValue","form","FormControl","InputLabel","Select","MenuItem","lg","IconButton","onSkillDelete","OfferForm","creatorId","mode","watch","trigger","updateOffer","paddingBottom","formResult","parseInt","pattern","autoComplete","multiline","rows","rowsMax","ManageStages","setStages","possibleStages","setPossibleStages","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","margin","ManageEndDate","processStartDate","OrganizationPartner","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RadioGroup","handleChange","FormControlLabel","Radio","RegistrationRouting","setRender","getRegistrationForm","TasksPassword","setPassword","onKeyPress","preventDefault","useKeyPress","CardActions","Task","tasksOperations","menuAnchor","setMenuAnchor","deadline","toLocaleString","timeLimit","descriptionBase64","descriptionFileName","Menu","keepMounted","MarkdownEditor","renderHTML","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","flexFlow","gap","labelPlacement","Form","addTestCase","testCase","setTestCase","input","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testData","expectedResult","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","AddDeadline","setSelectedDate","resetValidationMessage","showValidationMessage","clearTask","handleMarkdownChange","html","btoa","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","tasks","createTimeLimit","createDeadline","updateTasks","TasksList","setTasks","deleteTask","createTask","AddCircleOutline","TasksViewWrapper","organizationId","set","devPasswordKey","sessionStorage","useDevPassword","testsBase64","MeetingOrganizerWrapper","propType","paramType","uuid","meetingUUID","setMeetingUUID","userData","onPickSlotByJobSeeker","slot","meetingOrganizerBaseLink","outsideJwt","outerFunctions","drawerStyle","outsideMeetingUUID","createRoute","path","routes","href","setProcess","selectedEndDate","setSelectedEndDate","endDate","flexGrow","startDate","el","updateUsers","onUserDelete","App","ThemeProvider","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1927988a.chunk.js","sourcesContent":["export const constants = {\r\n    navbar_height: \"60px\"\r\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\r\nimport {constants} from \"../../utils/constants\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return (<AppBar position=\"sticky\" style={{\r\n        background: theme.palette.primary.dark,\r\n        height: `${constants.navbar_height}`,\r\n        zIndex: theme.zIndex.drawer + 1\r\n    }}>\r\n        <Toolbar>\r\n            <div style={{marginLeft: \"2%\", marginRight: \"1%\"}}>\r\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Typography variant=\"h6\">\r\n                        e-Stella\r\n                    </Typography>\r\n                </Link>\r\n            </div>\r\n            <div style={{marginLeft: \"1%\", marginRight: \"auto\"}}>\r\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\">Offers</Button>\r\n                </Link>\r\n            </div>\r\n            <div style={{marginLeft: \"auto\"}}>\r\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\r\n                </Link>\r\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\r\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\r\n                </Link>\r\n            </div>\r\n        </Toolbar>\r\n    </AppBar>)\r\n}\r\n\r\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\r\n\r\nexport const theme = createTheme({\r\n    status: {\r\n        danger: {\r\n            main: '#d32f2f'\r\n        },\r\n        success: {\r\n            main: '#388e3c'\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#4c4fae'\r\n        },\r\n        secondary: {\r\n            main: '#54C1FB'\r\n        },\r\n        background: {\r\n            main: '#ffffff',\r\n            dark: '#272848'\r\n        },\r\n        card: {\r\n            main: '#d7d7d7',\r\n            light: '#e5e5e5',\r\n            dark: '#d3d3d3',\r\n            background: '#f8f7f5'\r\n        },\r\n        focused: {\r\n            light: '#8ff4ff',\r\n            main: '#54C1FB',\r\n            dark: '#0091c8'\r\n        }\r\n    }\r\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","export const filterTypes = {\r\n    MIN_SALARY: \"Minumum Salary\",\r\n    MAX_SALARY: \"Maximum Salary\",\r\n    COMPANY_NAME: \"Company Name\",\r\n    POSITION_NAME: \"Position Name\",\r\n}\r\n\r\nconst compare = (a, b, name) => {\r\n    if(a[name] < b[name]) return 1\r\n    if(a[name] > b[name]) return -1\r\n    return 0\r\n}\r\nexport const offerSort = [\r\n    {\r\n        name: \"Highest Salary\",\r\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\r\n    },\r\n    {\r\n        name: \"Lowest Salary\",\r\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\r\n    },\r\n    {\r\n        name: \"Name\",\r\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\r\n    }\r\n]\r\n\r\nexport const userTypes = {\r\n    JOB_SEEKER: \"job_seeker\",\r\n    HR: \"hr\",\r\n    ORGANIZATION: \"organization\"\r\n}\r\n\r\nexport const applicationStatus = {\r\n    IN_PROGRESS: \"In progress\",\r\n    ACCEPTED: \"Accepted\",\r\n    REJECTED: \"Rejected\"\r\n}","import {filterTypes} from \"./Enums\";\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport const scrollToTop = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n}\r\n\r\nexport const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase())\r\n}\r\n\r\nexport const getFilterValueByType = (filters, filterType) =>\r\n    filters?.find(filter => filter.type === filterType)?.value\r\n\r\nconst createFilterFunction = (filter) => {\r\n    switch (filter.type) {\r\n        case filterTypes.MIN_SALARY:\r\n            return (arg) => arg.minSalary >= filter.value\r\n        case filterTypes.MAX_SALARY:\r\n            return (arg) => arg.maxSalary <= filter.value\r\n        case filterTypes.COMPANY_NAME:\r\n            if (filter.value) {\r\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\r\n            } else {\r\n                return () => true\r\n            }\r\n        case filterTypes.POSITION_NAME:\r\n            if (filter.value) {\r\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\r\n            } else {\r\n                return () => true\r\n            }\r\n        default:\r\n            return () => true\r\n    }\r\n}\r\n\r\nexport const filterOffers = (offers, filters) => {\r\n    let tmpOffers = offers\r\n    filters.forEach(filter => {\r\n        tmpOffers = tmpOffers.filter(offer => (createFilterFunction(filter))(offer))\r\n    })\r\n    return tmpOffers\r\n}\r\n\r\nexport const getIconFromFilterType = (filter) => {\r\n    switch (filter.type) {\r\n        case filterTypes.MIN_SALARY:\r\n            return <MonetizationOnIcon id={`min-filter-icon`} />\r\n        case filterTypes.MAX_SALARY:\r\n            return <MonetizationOnIcon id={`max-filter-icon`} />\r\n        case filterTypes.COMPANY_NAME:\r\n            return <BusinessIcon id={`company-filter-icon`} />\r\n        case filterTypes.POSITION_NAME:\r\n            return <PersonIcon id={`position-filter-icon`} />\r\n        default:\r\n            return null\r\n    }\r\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ListElement = ({ data, selected, onClick, idx }) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\r\n\r\n    return(\r\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\r\n            <Card variant=\"outlined\" style={selectedStyle}>\r\n                <CardContent style={{marginBottom: \"1em\"}}>\r\n                    <Typography variant=\"h5\">\r\n                        {data.first}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <div style={{marginTop: \"1em\"}}>\r\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\r\n                            {data.second}\r\n                        </Typography>\r\n                        <Typography style={{float: \"right\"}}>\r\n                            {data.third}\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nListElement.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    selected: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    idx: PropTypes.number.isRequired\r\n}","import {useState} from \"react\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {scrollToTop} from \"../../../utils/functions\";\r\nimport {ListElement} from \"./ListElement\";\r\n\r\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect}) => {\r\n\r\n    const [selectedIdx, setSelectedIdx] = useState(-1)\r\n\r\n    const handleSelect = (item, idx) => {\r\n        setSelectedIdx(idx)\r\n        propsHandleSelect(item, idx)\r\n        scrollToTop()\r\n    }\r\n\r\n    const getListItems = () => {\r\n        return listItems\r\n            ?.filter((item, idx) => limit ? idx < limit : true)\r\n            ?.map((item, idx) => {\r\n                return selectedIdx === idx ?\r\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\r\n                              selected data={extractData(item)} />\r\n                    : <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)} data={extractData(item)}\r\n                                selected={false} />\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\r\n            {getListItems()}\r\n        </div>\r\n    )\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport {scrollToTop} from '../../../utils/functions';\r\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\r\n\r\nexport const OffersList = (props) => {\r\n\r\n    const offers = props.offers\r\n\r\n    const getData = (offer) => {\r\n        return {\r\n            first: offer.name,\r\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\r\n            third: offer.position,\r\n            offer: offer\r\n        }\r\n    }\r\n\r\n    const handleShortOfferSelect = (offer, idx) => {\r\n        props.onSelectedOffer(offer)\r\n        scrollToTop()\r\n    }\r\n\r\n    return (\r\n        <ListWithSelection\r\n            listItems={offers}\r\n            extractData={getData}\r\n            limit={props.limit}\r\n            propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\r\n        />\r\n    )\r\n}\r\n\r\nOffersList.propTypes = {\r\n    limit: PropTypes.number,\r\n    onSelectedOffer: PropTypes.func.isRequired,\r\n    offers: PropTypes.array.isRequired\r\n}\r\n\r\nOffersList.defaultProps = {\r\n    limit: 3\r\n}","//export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\r\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\r\n\r\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\r\n\r\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\r\n","\r\n\r\nexport const headers = {\r\n    'Content-Type': 'application/json'\r\n}","export const tokenPayloadSchema = {\r\n    firstName: (value) => typeof value === 'string',\r\n    lastName: (value) => typeof value === 'string',\r\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\r\n    mail: (value) => typeof value === 'string',\r\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\r\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\r\n    exp: (value) => typeof value === 'number' && value % 1 === 0\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\nimport {headers} from \"./headers\";\r\n\r\nexport const loginAPI = {\r\n    jwtTokenKey: \"x-jwt\",\r\n    authTokenKey: \"x-auth-token\",\r\n    refreshTokenKey: \"x-refresh-token\",\r\n\r\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\r\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\r\n\r\n    login: function(login, password) {\r\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                mail: login,\r\n                password: password\r\n            })\r\n        }).then(response => {\r\n            jwtUtils.saveTokenFromResponse(response)\r\n            return response\r\n        })\r\n    },\r\n\r\n    registerUser: function(login, password, firstName, lastName) {\r\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                mail: login,\r\n                password: password\r\n            })\r\n        })\r\n    },\r\n\r\n    registerCompany: function(login, password, name) {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve({text: \"ok\", ok: true})\r\n            }, 2000)\r\n        })\r\n    }\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {loginAPI} from \"./LoginAPI\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\n\r\nexport const jwtAPI = {\r\n    refreshToken: (userId, refreshToken) =>\r\n        fetch(\r\n        recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\r\n        {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"x-jwt\": refreshToken\r\n                }\r\n            }\r\n        ).then(\r\n            response => localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey)\r\n        ))\r\n}","import {validateSchema} from \"../schemas/validateSchema\";\r\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\r\nimport {loginAPI} from \"../apis/LoginAPI\";\r\nimport {jwtAPI} from \"../apis/JwtAPI\";\r\n\r\nexport const jwtUtils = {\r\n    jwtHeaderKey: \"x-jwt\",\r\n\r\n    getUser: () => {\r\n        const token = jwtUtils.getAuthToken()\r\n        const possiblyUser = jwtUtils.getPayload(token)\r\n\r\n        return jwtUtils.payloadToOptUser(possiblyUser)\r\n    },\r\n\r\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\r\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\r\n\r\n    saveTokenFromResponse: (response) => {\r\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\r\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\r\n    },\r\n\r\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\r\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\r\n\r\n    refreshApiPath: (userId) => {\r\n        if (userId !== undefined)\r\n            return `/api/users/${userId}/refreshToken`\r\n        else\r\n            return undefined\r\n    },\r\n\r\n    refreshToken: () => {\r\n        const userId = jwtUtils.getUser()?.userId\r\n        const refreshToken = jwtUtils.getRefreshToken()\r\n        if(userId && refreshToken)\r\n            return jwtAPI.refreshToken(userId, refreshToken)\r\n    },\r\n\r\n    tokenSplitter: (token) => {\r\n        if(typeof token === \"string\") {\r\n            const parts = token.split('.')\r\n            if(parts.length === 3){\r\n                return parts\r\n            } else return null\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n\r\n    getHeader: (token) =>\r\n        jwtUtils.safeJsonRetrieve(\r\n            jwtUtils.tokenSplitter(token)?.[0]\r\n        ),\r\n\r\n    getPayload: (token) =>\r\n        jwtUtils.safeJsonRetrieve(\r\n            jwtUtils.tokenSplitter(token)?.[1]\r\n        ),\r\n\r\n    base64UrlToBase64: (base64Url) =>\r\n        base64Url?.replace('-', '+').replace('_', '/'),\r\n\r\n    decodeBase64Url: (base64Url) =>\r\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\r\n\r\n    safeJsonRetrieve: (base64Url) => {\r\n        if(typeof base64Url === \"string\"){\r\n            try {\r\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\r\n                return JSON.parse(decoded)\r\n            } catch {\r\n                return null\r\n            }\r\n        } else return null\r\n    },\r\n\r\n    payloadToOptUser: (payload) => {\r\n        if(validateSchema(payload, tokenPayloadSchema))\r\n            return {\r\n                userId: Number(payload.iss),\r\n                firstName: payload.firstName,\r\n                lastName: payload.lastName,\r\n                userType: payload.userType,\r\n                mail: payload.mail\r\n            }\r\n        else\r\n            return null\r\n    },\r\n\r\n    isTokenActive: (token) => {\r\n        const payload = jwtUtils.getPayload(token)\r\n        const issuedAt = payload?.iat\r\n        const expiresAt = payload?.exp\r\n        if(issuedAt && expiresAt){\r\n            const currentDate = Date.now()\r\n            return issuedAt <= currentDate && currentDate <= expiresAt\r\n        }\r\n        return null\r\n    }\r\n}\r\n","export const validateSchema = (obj, schema) => obj &&\r\n    Object\r\n        .keys(schema)\r\n        .every(\r\n                key => schema[key](obj[key])\r\n        )\r\n\r\n","import Swal from \"sweetalert2\";\r\n\r\nconst checkResponseStatusOrThrowError = (response, error) => {\r\n    if(response.statusCode < 200 || response.statusCode > 299)\r\n        throw error || Error(\"Something went wrong\")\r\n}\r\n\r\nexport const checkedFetch = (url, data, error) => {\r\n    return fetch(url, data)\r\n        .then(response => {\r\n            checkResponseStatusOrThrowError(response, error)\r\n            return response\r\n        }).catch(err => Swal.fire({\r\n            title: \"Error\",\r\n            text: err.message,\r\n            icon: \"error\"\r\n        }))\r\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\r\nimport {loginAPI} from \"./apis/LoginAPI\";\r\nimport {checkedFetch} from \"./chekedFetch\";\r\n\r\nexport const authFetch = (url, data, error) => {\r\n    const authToken = jwtUtils.getAuthToken()\r\n    const dataHeaders = data?.headers\r\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\r\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\r\n    const authData = Object.assign(data || {}, {headers: newHeaders})\r\n    return checkedFetch(url, authData, error).then(response => {\r\n        if(response.status >= 200 && response.status < 300)\r\n            return response\r\n        else\r\n            return jwtUtils.refreshToken().then(() => {\r\n                authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\r\n                return fetch(url, authData)\r\n            })\r\n    })\r\n}","export const convertFileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = err => reject(err)\r\n    })\r\n}\r\n\r\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteArrays = [];\r\n\r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    return new Blob(byteArrays, {type: contentType});\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\r\nimport Swal from \"sweetalert2\";\r\nimport {headers} from \"./headers\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\nimport {authFetch} from \"../authFetch\";\r\nimport {convertFileToBase64} from \"./files\";\r\n\r\n\r\nexport const offersAPI = {\r\n    getOfferById: function(offerId){\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\r\n            .then(response => response.json())\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get this offer!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    getAllOffers: function(){\r\n        return fetch(recruitmentServiceBasicAPILink + \"/api/offers\")\r\n            .then(response => response.json())\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get offers!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    applyWithNoUser: async function (offerId, name, surname, email, files=[]) {\r\n        let convertedFiles = await Promise.all(files.map(async file => {\r\n            return {\r\n                fileName: file.name,\r\n                fileBase64: await convertFileToBase64(file)\r\n            }\r\n        }))\r\n        convertedFiles = convertedFiles.map(file => {\r\n            return {\r\n                ...file,\r\n                fileBase64: convertedFiles[0].fileBase64.substring(\r\n                    convertedFiles[0].fileBase64.indexOf(\"base64\") + 7\r\n                )\r\n            }\r\n        })\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({\r\n                firstName: name,\r\n                lastName: surname,\r\n                mail: email,\r\n                files: convertedFiles\r\n            })\r\n        })\r\n    },\r\n\r\n    create: function (offerData) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify(offerData)\r\n        })\r\n    },\r\n\r\n    update: function (offerData) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\r\n            method: \"PUT\",\r\n            headers: headers,\r\n            body: JSON.stringify(offerData)\r\n        })\r\n    },\r\n\r\n    applyWithUser: function(offerID){\r\n\r\n    },\r\n\r\n    getOffersFromHr() {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\r\n            method: \"GET\",\r\n            headers: Object.assign(headers, {\r\n                \"x-jwt\": jwtUtils.getAuthToken()\r\n            })\r\n        }).then(response => response.json())\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get offers!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    getOffersFromOrganization() {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\r\n            method: \"GET\",\r\n            headers: Object.assign(headers, {\r\n                \"x-jwt\": jwtUtils.getAuthToken()\r\n            })\r\n        }).then(response => response.json())\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get offers!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    deleteOffer(id) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: headers\r\n        })\r\n    }\r\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React from \"react\";\r\n\r\nconst CenteredCircularProgress = (props) =>\r\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\r\n        <CircularProgress {...props} />\r\n    </div>\r\n\r\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport Image1 from '../../assets/landing_page_image1.png';\r\nimport Image2 from '../../assets/landing_page_image2.png';\r\nimport Image3 from '../../assets/landing_page_image3.png';\r\nimport {OffersList} from \"../offers/list/OffersList\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\r\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\r\n\r\nexport const LandingPage = () => {\r\n\r\n    const history = useHistory()\r\n    const [offers, setOffers] = useState(null)\r\n\r\n    useEffect(() => {\r\n        offersAPI.getAllOffers()\r\n            .then(data => setOffers(data || []))\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <div style={{marginLeft: \"5%\", marginRight:\"auto\", width: \"60%\", float: \"left\"}}>\r\n                <Typography variant=\"h4\">\r\n                    e-Stella - Everything you'll ever need\r\n                </Typography>\r\n                <Grid container style={{marginTop: \"2em\"}} spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item>\r\n                                <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div style={{width: \"25%\", float: \"left\", marginRight: \"10%\"}}>\r\n                {offers == null ? <CenteredCircularProgress size={60} /> : <>\r\n                    <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\r\n                        Latest Offers\r\n                    </Typography>\r\n                    <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\r\n                        <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\r\n                                    limit={3}\r\n                                    offers={offers}/>\r\n                    </div>\r\n                    <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\r\n                        See more!\r\n                    </Button>\r\n                </>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {authFetch} from \"../authFetch\";\r\nimport {meetingOrganizerLink} from \"./APILinks\";\r\n\r\nexport const interviewAPI = {\r\n\r\n    getJobSeekerNameByInterviewId : function(interviewId) {\r\n        return new Promise((resolve, reject) => {\r\n            resolve({text: \"ok\", ok: true, name: 'Waiting for endpoint'})\r\n        })\r\n    },\r\n\r\n    getNewestInterview: applicationId => {\r\n        return authFetch(meetingOrganizerLink + `api/interview/newest/${applicationId}`, {}, Error(\"Couldn't find interview for this application\"))\r\n            .then(response => response.json())\r\n    }\r\n\r\n}","import {Action, Fab} from \"react-tiny-fab\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport {useTheme} from \"@material-ui/core\";\r\n\r\nexport const MeetingFab = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return(\r\n        <Fab\r\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\r\n            icon={<AddIcon />}\r\n            event={'click'}\r\n        >\r\n            <Action\r\n                text=\"Default View\"\r\n                onClick={props.onDefaultView}\r\n            >\r\n                <VoiceChatIcon />\r\n            </Action>\r\n            <Action\r\n                text=\"Whiteboard\"\r\n                onClick={props.onWhiteboard}\r\n            >\r\n                <DashboardIcon />\r\n            </Action>\r\n            <Action\r\n                text=\"Task\"\r\n                onClick={props.onTask}\r\n            >\r\n                <AssignmentIndIcon />\r\n            </Action>\r\n        </Fab>\r\n    )\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const tasksApi = {\r\n\r\n    getTask: (processId) => {\r\n        if(processId){\r\n            return fetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\r\n                .then(response => response.json())\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                icon: 'error',\r\n                text: `Looks like somebody didn't add a task but wants to solve one something!`\r\n            })\r\n            return new Promise(_ => {})\r\n        }\r\n    },\r\n\r\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\r\n\r\n    sendTestResult: (body) => {\r\n        return fetch(`${recruitmentServiceBasicAPILink}/api/tasks/taskResult?taskId=${body.task.id}&processId=${body.id}`,{\r\n            method: \"POST\",\r\n            body: JSON.stringify(body)\r\n        })\r\n    }\r\n\r\n}","import {CodeEditor} from 'e-stella-code-editor'\r\nimport {tasksApi} from \"../../utils/apis/TasksApi\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {codeCheckerLink} from \"../../utils/apis/APILinks\";\r\n\r\nexport const TaskWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0 }) => {\r\n\r\n    let { id } = useParams()\r\n\r\n    if(!id) id = propId\r\n\r\n    const fetchTasks = toSolveTask ? () => tasksApi.getTask(id || NaN) : () => new Promise(_ => {})\r\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\r\n\r\n    return (\r\n        <div>\r\n            <CodeEditor\r\n                codeCheckerBaseLink={codeCheckerLink}\r\n                fetchTasks={fetchTasks}\r\n                absoluteOffset={{settings: { top: 3, right: 0 }, submit: {top: 3, left: submitLeftOffset}}}\r\n                outerMonacoWrapperStyle={outerMonacoWrapperStyle}\r\n                //To test this\r\n                outerOnSubmit={(body) => tasksApi.sendTestResult({...body, id: id})}\r\n             />\r\n        </div>\r\n    )\r\n}","import {JitsiComponent} from \"e-stella-jitsi\";\r\nimport {MeetingFab} from \"./MeetingFab\";\r\nimport {useState} from \"react\";\r\nimport {Whiteboard} from \"e-stella-whiteboard\";\r\nimport {TaskWrapper} from \"../../tasks/TaskWrapper\";\r\n\r\nexport const JitsiWrapper = (props) => {\r\n\r\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\r\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\r\n    const [actionComponent, setActionComponent] = useState(null)\r\n\r\n    const addWhiteboard = () => {\r\n        setJitsiWidth('20%')\r\n        setJitsiHeight('calc(100vh - 60px)')\r\n        setActionComponent(\r\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\r\n                <Whiteboard\r\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\r\n                    code={getWhiteboardCode()}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const defaultView = () => {\r\n        setJitsiHeight('calc(100vh-60px)')\r\n        setJitsiWidth('100%')\r\n        setActionComponent(null)\r\n    }\r\n\r\n    const showTask = () => {\r\n        setJitsiWidth('20%')\r\n        setActionComponent(\r\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\r\n                <TaskWrapper id={16} submitLeftOffset={'25%'}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getWhiteboardCode = () => {\r\n        if (props.roomName.length < 15) return 'abcdefghijklmnopqrst'\r\n        return props.roomName\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\r\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\r\n                <JitsiComponent admin={props.admin} roomName={props.roomName} displayName={props.displayName}/>\r\n            </div>\r\n            {actionComponent}\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\";\r\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\r\n\r\nexport const MeetingDisplayNameForm = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const handleClick = () => {\r\n        props.onSubmit(name)\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\r\n                <Typography variant=\"h4\">\r\n                    One more step...\r\n                </Typography>\r\n            </Box>\r\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\r\n                <Typography variant=\"h5\">\r\n                    How should we call you?\r\n                </Typography>\r\n            </Box>\r\n            <Box mt={5} m={5}>\r\n                <TextField\r\n                    value={name}\r\n                    onChange={({target}) => setName(target.value)}\r\n                    label=\"Your name\"\r\n                />\r\n            </Box>\r\n            <Box m={5}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\r\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\r\nimport {useState} from \"react\";\r\n\r\nexport const MeetingDisplayName = (props) => {\r\n\r\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\r\n        shouldDisplay: true,\r\n        name: \"\"\r\n    })\r\n\r\n    const getAdminDisplayer = () => {\r\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\r\n            <JitsiWrapper admin={true} roomName={props.roomName} displayName={shouldDisplayForm.name}/>\r\n    }\r\n\r\n    const onNameFormSubmit = (name) => {\r\n        setShouldDisplayForm({\r\n            shouldDisplay: false,\r\n            name: name\r\n        })\r\n    }\r\n\r\n    return getAdminDisplayer()\r\n}","import {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\r\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\r\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport const Meeting = () => {\r\n    let { interviewId, companyId } = useParams()\r\n    const [name, setName] = useState(null)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(companyId === undefined) {\r\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\r\n                .then(data => {\r\n                    setName(data?.name)\r\n                    setIsFetching(false)\r\n                })\r\n        } else {\r\n            setIsFetching(false)\r\n        }\r\n    }, [companyId, interviewId])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isFetching ? <CircularProgress /> :\r\n                <Fetched name={name} interviewId={interviewId} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Fetched = ({ name, interviewId }) => {\r\n    return (\r\n        name === null ?\r\n            <MeetingDisplayName roomName={`${interviewId}`}/>\r\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"}/>\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Box, Button, TextField, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\r\nimport {validateEmail} from \"../../../utils/functions\";\r\n\r\nexport const ApplyForm = () => {\r\n\r\n    const {id} = useParams()\r\n    const [name, setName] = useState(\"\")\r\n    const [surname, setSurname] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [file, setFile] = useState(null)\r\n\r\n    const [shouldValidateField, setShouldValidateField] = useState({\r\n        name: false,\r\n        surname: false,\r\n        email: false\r\n    })\r\n\r\n    const apply = () => {\r\n        if (validate()) {\r\n            if (file === null) {\r\n                Swal.fire({\r\n                    title: \"Warning\",\r\n                    text: \"You're not including any CV file, are you sure about it?\",\r\n                    icon: \"warning\",\r\n                    showDenyButton: true,\r\n                    confirmButtonText: \"Yes, I'm sure\",\r\n                    denyButtonText: \"No, let me insert my CV\"\r\n                }).then(result => {\r\n                    if (result.isConfirmed) {\r\n                        validatedApply([])\r\n                    } else if (result.isDenied) {\r\n                        Swal.close()\r\n                    }\r\n                })\r\n            } else{\r\n                validatedApply([file])\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                title: \"Error alert!\",\r\n                text: \"Check if all fields are filled correctly\",\r\n                icon: \"error\",\r\n                confirmButtonText: \"OK\"\r\n            })\r\n        }\r\n    }\r\n\r\n    const validatedApply = (files) => {\r\n        let swal = new Swal({\r\n            title: \"Applying\"\r\n        })\r\n        Swal.showLoading()\r\n        offersAPI.applyWithNoUser(id, name, surname, email, files)\r\n            .then((result) => {\r\n                if(!result.ok) throw Error(\"Something went wrong!\")\r\n                swal.close()\r\n                Swal.fire({\r\n                    title: \"Success\",\r\n                    text: \"You've successfully applied to this offer!\",\r\n                    icon: \"success\"\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                swal.close()\r\n                Swal.fire({\r\n                    title: err,\r\n                    text: \"We couldn't apply you on this offer\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"ok\"\r\n                })\r\n            })\r\n    }\r\n\r\n    const validate = () => {\r\n            return validateEmail(email) && validateName(name) && validateSurname(surname)\r\n    }\r\n\r\n\r\n    const validateName = (name) => {\r\n        return name !== \"\"\r\n    }\r\n    const validateSurname = (surname) => {\r\n        return surname !== \"\"\r\n    }\r\n\r\n    return (\r\n        <Box style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n            <Box m={4}>\r\n                <TextField\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={({target}) => {\r\n                        setName(target.value)\r\n                        setShouldValidateField({...shouldValidateField, name: true})\r\n                    }}\r\n                    error={!validateName(name) && shouldValidateField.name}\r\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\r\n                />\r\n            </Box>\r\n            <Box m={4}>\r\n                <TextField\r\n                    label=\"Surname\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={surname}\r\n                    onChange={({target}) => {\r\n                        setSurname(target.value)\r\n                        setShouldValidateField({...shouldValidateField, surname: true})\r\n                    }}\r\n                    error={!validateSurname(surname) && shouldValidateField.surname}\r\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\r\n                />\r\n            </Box>\r\n            <Box m={4}>\r\n                <TextField\r\n                    label=\"E-mail address\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    onChange={({target}) => {\r\n                        setEmail(target.value)\r\n                        setShouldValidateField({...shouldValidateField, email: true})\r\n                    }}\r\n                    error={!validateEmail(email) && shouldValidateField.email}\r\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\r\n                />\r\n            </Box>\r\n            <Box m={4} style={{float: \"right\"}}>\r\n                <input\r\n                    onChange={({target}) => setFile(target.files[0])}\r\n                    type=\"file\"\r\n                />\r\n            </Box>\r\n            <Button variant=\"outlined\" onClick={apply}>\r\n                <Typography variant=\"h6\">\r\n                    Apply\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n","import {Box, useTheme} from \"@material-ui/core\";\r\n\r\nexport const SkillIndicator = (props) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const fullCircleStyle = {\r\n        backgroundColor: theme.palette.focused.dark,\r\n    }\r\n\r\n    const emptyCircleStyle = {\r\n        borderRadius: \"50%\",\r\n        width: \"15px\",\r\n        height: \"15px\",\r\n        border: `1px solid ${theme.palette.focused.dark}`,\r\n    }\r\n\r\n    return(\r\n        <Box m={1}>\r\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\r\n        </Box>\r\n    )\r\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\nimport {SkillIndicator} from \"./SkillIndicator\";\r\n\r\nexport const OfferSkill = ({ name, skillLevel }) => {\r\n\r\n    const enumerateSkillLevel = () => {\r\n        switch (skillLevel) {\r\n            case 'NICE_TO_HAVE': return 1\r\n            case 'JUNIOR': return 2\r\n            case 'REGULAR': return 3\r\n            case 'ADVANCED': return 4\r\n            default: return 5\r\n        }\r\n    }\r\n\r\n    const theme = useTheme()\r\n\r\n    const getDotsOnSkillLevel = () => {\r\n        const skills = []\r\n        const enumerated = enumerateSkillLevel()\r\n        for(let i=0; i<5; i++){\r\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\r\n        }\r\n        return skills\r\n    }\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Card style={{backgroundColor: theme.palette.card.light}}>\r\n                <CardContent>\r\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\r\n                        {getDotsOnSkillLevel()}\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {name}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box m={1}>\r\n                        <Typography color=\"textSecondary\">\r\n                            {skillLevel}\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import {Card, useTheme} from \"@material-ui/core\";\r\nimport {constants} from \"../../../utils/constants\";\r\n\r\nexport const ListElementDetails = ({cardContent}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <div>\r\n            <Card variant=\"outlined\"\r\n                  style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\r\n                      marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\r\n                {cardContent}\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import {useHistory} from \"react-router-dom\";\r\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {OfferSkill} from \"./OfferSkill\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\r\n\r\nexport const OfferDetails = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const offer = props.offer\r\n\r\n    const getCardContent = () => {\r\n        return (<CardContent>\r\n            <Box mb={12}>\r\n                <div style={{float: \"left\"}}>\r\n                    <Box>\r\n                        <Typography variant=\"h4\" component=\"h2\">\r\n                            {offer.name}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                            {offer.organization?.name}\r\n                        </Typography>\r\n                    </Box>\r\n                </div>\r\n                <div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\r\n                    {props.buttons.map(button => {\r\n                        return <Box key={button.text} mr={1} ml={1}>\r\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\r\n                                <Typography>\r\n                                    {button.text}\r\n                                </Typography>\r\n                            </Button>\r\n                        </Box>\r\n                    })}\r\n\r\n                </div>\r\n            </Box>\r\n            <Divider/>\r\n            <Box style={{width: \"100%\"}}>\r\n                <Box mt={1}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            {offer.position}\r\n                        </Typography>\r\n                    </div>\r\n                </Box>\r\n                <Box>\r\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\r\n                        <div>\r\n                            <Typography variant=\"h6\">\r\n                                {offer.minSalary} - {offer.maxSalary}\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{float: 'right'}}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                {offer.localization}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n            <Box mt={8} mb={4}>\r\n                <Grid container>\r\n                    {offer.skills.map((skill, idx) =>\r\n                        <Grid key={idx} item><OfferSkill key={idx}\r\n                                                         name={skill.name}\r\n                                                         skillLevel={skill.level}/></Grid>)}\r\n                </Grid>\r\n            </Box>\r\n            <Divider/>\r\n            <Box m={2} p={2}>\r\n                {offer.description}\r\n            </Box>\r\n        </CardContent>)\r\n    }\r\n\r\n    return (\r\n        <ListElementDetails cardContent={getCardContent()}/>\r\n    )\r\n}\r\n\r\nOfferDetails.propTypes = {\r\n    offer: PropTypes.object.isRequired,\r\n    buttons: PropTypes.array\r\n}\r\n\r\nOfferDetails.defaultProps = {\r\n    buttons: [{\r\n        text: \"Apply\",\r\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`)\r\n    }]\r\n}\r\n","export const PickUpOffer = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            Pick up offer\r\n        </div>\r\n    )\r\n}","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const EStellaSlider = (props) => {\r\n\r\n    const getValue = (event, value) => {\r\n        return event.target.value === '' ? value : Number(event.target.value)\r\n    }\r\n\r\n    const value = props.value\r\n    const setValue = props.onValueChanged\r\n    const getMaxValue = (event) => getValue(event, props.max)\r\n    const getMinValue = (event) => getValue(event, props.min)\r\n\r\n    const handleInputBlur = () => {\r\n        if(value[0] < props.min) setValue([props.min, value[1]])\r\n        if(value[1] > props.max) setValue([value[0], props.max])\r\n    }\r\n\r\n    return (\r\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n            <Typography>\r\n                {props.label}\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                onChange={(event, newValue) => setValue(newValue)}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={() => `${value}`}\r\n                max={props.max}\r\n                min={props.min}\r\n                step={props.step}\r\n            />\r\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        value={value[0]}\r\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\r\n                        onBlur={handleInputBlur}\r\n                        min={props.min}\r\n                        max={value[1]}\r\n                        type=\"number\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4} />\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        value={value[1]}\r\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\r\n                        onBlur={handleInputBlur}\r\n                        min={value[0]}\r\n                        max={props.max}\r\n                        type=\"number\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nEStellaSlider.propTypes = {\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    step: PropTypes.number,\r\n    value: PropTypes.array.isRequired,\r\n    onValueChanged: PropTypes.func.isRequired\r\n}\r\n\r\nEStellaSlider.defaultProps = {\r\n    min: 0,\r\n    max: 100,\r\n    step: 10\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nexport const AutocompleteFilter = (props) => {\r\n\r\n    const handleChange = ({ target }) => {\r\n        props.onChange(target.value)\r\n    }\r\n\r\n    return (\r\n        <Autocomplete\r\n            options={props.options}\r\n            onSelect={handleChange}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={props.label} />}\r\n        />\r\n    )\r\n}\r\n\r\nAutocompleteFilter.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}","import {Box, Button, Grid} from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PropTypes from 'prop-types';\r\nimport {EStellaSlider} from \"./EStellaSlider\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {filterTypes} from \"../../../utils/Enums\";\r\nimport {getFilterValueByType} from \"../../../utils/functions\";\r\nimport {AutocompleteFilter} from \"./AutocompleteFilter\";\r\n\r\nexport const InDrawerFilter = (props) => {\r\n\r\n    const [sliderValue, setSliderValue] = useState([0, 100])\r\n    const [companyValue, setCompanyValue] = useState(\"\")\r\n    const [positionValue, setPositionValue] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setSliderValue([\r\n            getFilterValueByType(props.filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\r\n            getFilterValueByType(props.filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\r\n        ])\r\n    }, [])\r\n\r\n    const createFilters = () => {\r\n        return [\r\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\r\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\r\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\r\n            {type: filterTypes.POSITION_NAME, value: positionValue}\r\n        ]\r\n    }\r\n\r\n    const calculateWidth = () => {\r\n        const width = window.screen.width\r\n        if (width < 700) {\r\n            return 0.6 * width\r\n        } else {\r\n            return 0.3 * width\r\n        }\r\n    }\r\n\r\n    const getMinOffersSalary = () => Math.min(...props.fixedOffers.map(offer => offer.minSalary))\r\n    const getMaxOffersSalary = () => Math.max(...props.fixedOffers.map(offer => offer.maxSalary))\r\n\r\n    const handleFilterSubmit = () => {\r\n        props.toggleDrawer()\r\n        props.onFilterSubmitted(createFilters())\r\n    }\r\n\r\n    const companyOptions = [...new Set(props.fixedOffers.map(offer => offer.organization.name))]\r\n    const positionOptions = [...new Set(props.fixedOffers.map(offer => offer.position))]\r\n\r\n    return (\r\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\r\n            <Grid container spacing={2} direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={10}/>\r\n                        <Grid item xs={2}><Button onClick={props.toggleDrawer}><CloseIcon\r\n                            fontSize=\"large\"/></Button></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\r\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box m={1} p={1}>\r\n                        <AutocompleteFilter options={companyOptions}  label=\"Company Name\" value={companyValue}\r\n                            onChange={(value) => setCompanyValue(value)}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box m={1} p={1}>\r\n                        <AutocompleteFilter options={positionOptions}  label=\"Position\" value={positionValue}\r\n                                            onChange={(value) => setPositionValue(value)}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={false} md={8} />\r\n                        <Grid item xs={12} md={4}>\r\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\r\n                                Filter\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nInDrawerFilter.propTypes = {\r\n    toggleDrawer: PropTypes.func.isRequired,\r\n    offers: PropTypes.array.isRequired,\r\n    onFilterSubmitted: PropTypes.func.isRequired,\r\n    filters: PropTypes.array, // - state of previous drawer,\r\n    fixedOffers: PropTypes.array.isRequired\r\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getIconFromFilterType} from \"../../../utils/functions\";\r\n\r\nexport const ActiveFilter = (props) => {\r\n\r\n    return (\r\n        <Grid item>\r\n            <Chip label={props.label} onDelete={props.handleDelete} color={props.color} avatar={<Avatar id={`${props.label}-avatar`}>\r\n                {getIconFromFilterType(props.filter)}\r\n            </Avatar>} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nActiveFilter.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    filter: PropTypes.object.isRequired\r\n}\r\n\r\nActiveFilter.defaultProps = {\r\n    color: \"primary\"\r\n}","import FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {InDrawerFilter} from \"./InDrawerFilter\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ActiveFilter} from \"./ActiveFilter\";\r\n\r\nexport const Filter = (props) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [filters, setFilters] = useState([])\r\n\r\n    const handleFilterSubmitted = (filters) => {\r\n        setFilters(filters)\r\n        props.onFilterSubmitted(filters)\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const getFiltersAsActiveFilters = () => {\r\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\r\n            handleDelete={() => handleFilterDelete(filter.type)}\r\n            label={`${filter.type}: ${filter.value}`}\r\n            filter={filter}/></Grid> : null)\r\n    }\r\n\r\n    const handleFilterDelete = (filterType) => {\r\n        const newFilters = filters.filter(filter => filter.type !== filterType)\r\n        setFilters(newFilters)\r\n        props.reloadOffers(newFilters)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" spacing={3}>\r\n                <Grid item>\r\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\r\n                </Grid>\r\n                {getFiltersAsActiveFilters()}\r\n            </Grid>\r\n\r\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\r\n                    transitionDuration={700}>\r\n                <InDrawerFilter toggleDrawer={toggleDrawer} offers={props.offers}\r\n                                onFilterSubmitted={handleFilterSubmitted} filters={filters}\r\n                                fixedOffers={props.fixedOffers}/>\r\n            </Drawer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    offers: PropTypes.array.isRequired,\r\n    onFilterSubmitted: PropTypes.func.isRequired,\r\n    fixedOffers: PropTypes.array.isRequired,\r\n    reloadOffers: PropTypes.func.isRequired\r\n}","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useState} from \"react\";\r\nimport {offerSort} from \"../../../utils/Enums\";\r\n\r\nexport const Sorter = ({label, onSort}) => {\r\n\r\n    const [element, setElement] = useState(null)\r\n\r\n    const openList = (event) => setElement(event.currentTarget)\r\n\r\n    const handleClose = () => setElement(null)\r\n\r\n    const open = Boolean(element)\r\n\r\n    const handleItemClick = (sort) => {\r\n        onSort(sort)\r\n        handleClose()\r\n    }\r\n\r\n    const getListItems = () => {\r\n        return offerSort\r\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Chip label={label}\r\n                  variant=\"outlined\"\r\n                  onClick={openList}\r\n                  clickable\r\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\r\n            />\r\n            <Popover open={open}\r\n                 anchorEl={element}\r\n                 onClose={handleClose}\r\n                 anchorOrigin={{\r\n                     vertical: 'bottom',\r\n                     horizontal: 'center',\r\n                 }}\r\n                 transformOrigin={{\r\n                     vertical: 'top',\r\n                     horizontal: 'center',\r\n                 }}\r\n            >\r\n                <List>\r\n                    {getListItems()}\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nSorter.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    onSort: PropTypes.func.isRequired\r\n}","import {useState} from \"react\";\r\nimport {Sorter} from \"./Sorter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SorterWrapper = ({ onSort }) => {\r\n    const [label, setLabel] = useState(\"Sort Offers\")\r\n\r\n    const handleOnSort = (elem) => {\r\n        setLabel(elem.name)\r\n        onSort(elem)\r\n    }\r\n\r\n    return (\r\n        <Sorter label={label} onSort={handleOnSort} />\r\n    )\r\n}\r\n\r\nSorter.propTypes = {\r\n    onSort: PropTypes.func.isRequired\r\n}","import {Grid} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ColumnAndDetailsLayout = ({details, list}) => {\r\n\r\n    return (\r\n        <div style={{marginTop: \"15px\"}}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={8}>\r\n                    {details}\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    {list}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nColumnAndDetailsLayout.propTypes = {\r\n    details: PropTypes.any.isRequired,  //component representing details of list item\r\n    list: PropTypes.any.isRequired      //component representing list of items\r\n}","import {Divider} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\r\n                <div style={{alignItems: \"flex-start\"}}>\r\n                    {filter}\r\n                </div>\r\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\r\n                    {sorter}\r\n                </div>\r\n            </div>\r\n            <Divider/>\r\n            {view}\r\n        </div>\r\n    )\r\n}\r\n\r\nStandardViewAndFilterLayout.propTypes = {\r\n    filter: PropTypes.any,   //component representing filter with its view and logic\r\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\r\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\r\n}","import {OffersList} from \"./OffersList\";\r\nimport {OfferDetails} from \"../details/OffersDetails\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {PickUpOffer} from \"./PickUpOffer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Filter} from \"../filter/Filter\";\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\r\nimport {filterOffers} from \"../../../utils/functions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {SorterWrapper} from \"../sorter/SorterWrapper\";\r\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\r\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\r\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\r\n\r\nexport const OffersView = (props) => {\r\n\r\n    const [selectedOffer, setSelectedOffer] = useState(null)\r\n    const [offers, setOffers] = useState(null)\r\n    const {id} = useParams()\r\n    const [fixedOffers, setFixedOffers] = useState([])\r\n    const [sort, setSort] = useState({apply: (offers) => offers})\r\n\r\n    const handleFilterSubmitted = (filters) => {\r\n        setOffers(sort.apply(filterOffers(fixedOffers, filters)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            offersAPI.getOfferById(id)\r\n                .then(data => setSelectedOffer(data))\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        props.getOffers()\r\n            .then(data => {\r\n                setOffers(data || [])\r\n                setFixedOffers(data || [])\r\n            })\r\n    }, [props])\r\n\r\n    const handleSort = (sort) => {\r\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\r\n        * probably the case\r\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\r\n        setSort(sort)\r\n        setOffers(offers => ([...sort.apply(offers)]))\r\n    }\r\n\r\n    const layoutInternalView = selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\r\n    const offersList = <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\r\n\r\n    return offers == null ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\r\n            filter={<Filter offers={offers}\r\n                            onFilterSubmitted={handleFilterSubmitted}\r\n                            fixedOffers={fixedOffers}\r\n                            reloadOffers={handleFilterSubmitted} />}\r\n            sorter={<SorterWrapper onSort={handleSort} />}\r\n            view={<ColumnAndDetailsLayout details={layoutInternalView} list={offersList} />}\r\n        />\r\n}\r\n\r\nOffersView.propTypes = {\r\n    getOffers: PropTypes.func.isRequired,\r\n}\r\n","import {useEffect} from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const UnauthenticatedPage = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        Swal.fire({\r\n            title: \"Unauthenticated\",\r\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\r\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\r\n            icon: \"error\"\r\n        }).then(() => {\r\n            history.push('/')\r\n        })\r\n    }, [history])\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\r\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\r\n    const user = jwtUtils.getUser()\r\n\r\n    return (\r\n        <>\r\n            {\r\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nwithUserAuth.propTypes = {\r\n    permittedTypes: PropTypes.array.isRequired,\r\n    WrappedComponent: PropTypes.any.isRequired\r\n}\r\n\r\nwithUserAuth.defaultProps = {\r\n    wrappedProps: {}\r\n}","import Swal from \"sweetalert2\";\r\n\r\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\r\n\r\nexport const withSwal = ({\r\n                             loadingTitle,\r\n                             promise,\r\n                             successSwalTitle,\r\n                             successSwalText,\r\n                             confirmButtonText,\r\n                             successFunction,\r\n                             errorSwalTitle,\r\n                             errorSwalText,\r\n                             errorConfirmButtonText\r\n                         }) => {\r\n    let swal = new Swal({\r\n        title: loadingTitle\r\n    })\r\n    Swal.showLoading()\r\n    promise()\r\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\r\n        .then(({status, result}) => {\r\n            if (!isStatus2xx(status)) {\r\n                throw Error(result.message || \"Something went wrong!\")\r\n            }\r\n            swal.close()\r\n            Swal.fire({\r\n                title: successSwalTitle,\r\n                text: successSwalText || \"\",\r\n                icon: \"success\",\r\n                confirmButtonText: confirmButtonText || \"OK\"\r\n            }).then(swalResult => {\r\n                if (swalResult.isConfirmed && successFunction) {\r\n                    successFunction(result)\r\n                }\r\n            })\r\n        })\r\n        .catch(err => {\r\n            swal.close()\r\n            Swal.fire({\r\n                title: errorSwalTitle,\r\n                text: errorSwalText || err,\r\n                icon: \"error\",\r\n                confirmButtonText: errorConfirmButtonText || \"OK\"\r\n            })\r\n        })\r\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\r\n\r\nexport const hrOfferButtons = (theme) => [\r\n    {\r\n        text: \"Edit\",\r\n        action: (offer, history) => {\r\n            history.push(`/hr/offers/edit/${offer.id}`)\r\n        }\r\n    },\r\n    {\r\n        text: \"Delete\",\r\n        action: (offer, history) => {\r\n            withSwal({\r\n                loadingTitle: \"Deleting offer\",\r\n                promise: () => offersAPI.deleteOffer(offer.id),\r\n                successSwalTitle: \"Successfully deleted\",\r\n                successSwalText: \"Offer has been deleted\",\r\n                confirmButtonText: \"Ok\",\r\n                successFunction: () => history.go(0),\r\n                errorSwalTitle: \"Offer not deleted\",\r\n                errorSwalText: \"We couldn't delete your offer\",\r\n                errorConfirmButtonText: \"Ok\"\r\n            })\r\n        },\r\n        style: {\r\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\r\n            variant: \"outlined\"\r\n        }\r\n    },\r\n    {\r\n        text: \"Edit process\",\r\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\r\n        style: {\r\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\r\n            variant: \"contained\"\r\n        }\r\n    },\r\n    {\r\n        text: \"Applications\",\r\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\r\n        style: {\r\n            color: \"primary\",\r\n            variant: \"contained\"\r\n        }\r\n    }\r\n\r\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\r\nimport {scrollToTop} from \"../../utils/functions\";\r\n\r\nexport const ApplicationsList = ({applications, onSelectedApplication}) => {\r\n\r\n    const extractData = (application) => {\r\n        return {\r\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\r\n            second: application.stage.type,\r\n            third: application.status,\r\n            application: application\r\n        }\r\n    }\r\n\r\n    const handleSelect = (application, idx) => {\r\n        onSelectedApplication(application)\r\n        scrollToTop()\r\n    }\r\n\r\n    return (\r\n        <ListWithSelection\r\n            listItems={applications}\r\n            extractData={extractData}\r\n            limit={NaN}\r\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\r\n        />\r\n    )\r\n}","import DescriptionIcon from '@material-ui/icons/Description';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nexport const ProcessStage = {\r\n    APPLIED: {\r\n        name: \"Applied\",\r\n        description: \"\",\r\n        icon: <DescriptionIcon />\r\n    },\r\n    HR_INTERVIEW: {\r\n        name: \"Hr Interview\",\r\n        description: \"\",\r\n        icon: <AssignmentIndIcon />\r\n    },\r\n    TASK: {\r\n        name: \"Task\",\r\n        description: \"\",\r\n        icon: <AssignmentTurnedInIcon />\r\n    },\r\n    QUIZ: {\r\n        name: \"Quiz\",\r\n        description: \"\",\r\n        icon: <ContactSupportIcon />\r\n    },\r\n    TECHNICAL_INTERVIEW: {\r\n        name: \"Technical Interview\",\r\n        description: \"\",\r\n        icon: <ComputerIcon />\r\n    },\r\n    ENDED: {\r\n        name: \"The end\",\r\n        description: \"\",\r\n        icon: <CancelIcon />\r\n    },\r\n}","import {\r\n    Timeline,\r\n    TimelineConnector,\r\n    TimelineContent,\r\n    TimelineDot,\r\n    TimelineItem,\r\n    TimelineSeparator\r\n} from \"@material-ui/lab\";\r\nimport {ProcessStage} from \"../../utils/procesStages\";\r\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\r\nimport {applicationStatus} from \"../../utils/Enums\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '6px 16px',\r\n    },\r\n    secondaryTail: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n}));\r\n\r\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\r\n\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n\r\n    let isBeforeCurrent = true\r\n\r\n    const getTimelineContent = (stage) => (\r\n        <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n                {stage.name}\r\n            </Typography>\r\n            <Typography>{stage.description}</Typography>\r\n        </Paper>\r\n    )\r\n\r\n    const getDotColor = stageId => {\r\n        if (stageId === currentStageId) {\r\n            isBeforeCurrent = false\r\n            return theme.palette.primary.main\r\n        }\r\n        if (isBeforeCurrent) return theme.status.success.main\r\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\r\n            return theme.status.danger.main\r\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\r\n            return theme.palette.secondary.light\r\n        } else return \"grey\"\r\n    }\r\n\r\n    const getTimelineItem = (key, displayConnector) => {\r\n        const parts = key.split(\".\")\r\n        const stage = ProcessStage[parts[0]]\r\n        const stageId = Number(parts[1])\r\n        return (\r\n            <TimelineItem key={key}>\r\n                <TimelineSeparator>\r\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\r\n                        {stage.icon}\r\n                    </TimelineDot>\r\n                    {displayConnector ? <TimelineConnector /> : null}\r\n                </TimelineSeparator>\r\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\r\n            </TimelineItem>\r\n        )\r\n    }\r\n\r\n    const getTimelineItems = () => {\r\n        return stages\r\n            .map((item, idx) => {\r\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\r\n        })\r\n    }\r\n\r\n    return <Timeline align=\"alternate\">\r\n        {getTimelineItems()}\r\n    </Timeline>\r\n}","import MarkdownIt from \"markdown-it\";\r\n\r\nconst mdParser = new MarkdownIt()\r\n\r\nexport const MarkdownViewer = ({ markdown }) => {\r\n\r\n    let parsed = mdParser.render(markdown)\r\n\r\n    return (\r\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\r\n    )\r\n}","import PropTypes from 'prop-types'\r\nimport {makeStyles, Modal} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {b64toBlob} from \"../../utils/apis/files\";\r\nimport {MarkdownViewer} from \"./MarkdownViewer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [txt, setTxt] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(file?.fileName?.indexOf('txt') !== -1) {\r\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\r\n                .then(result => setTxt(result))\r\n        }\r\n    }, [file])\r\n\r\n    const decodeFile = () => {\r\n        return atob(file.fileBase64)\r\n    }\r\n\r\n    const getViewer = () => {\r\n        switch (true) {\r\n            case file.fileName.indexOf('md') !== -1:\r\n                return <MarkdownViewer markdown={decodeFile()} />\r\n            case file?.fileName?.indexOf('pdf') !== -1:\r\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\r\n            case file?.fileName?.indexOf('txt') !== -1:\r\n                return txt\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal open={open}\r\n               onClose={handleClose}\r\n        >\r\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\r\n                {open && getViewer()}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nGenericFileViewer.propTypes = {\r\n    file: PropTypes.shape({\r\n        fileName: PropTypes.string.isRequired,\r\n        fileBase64: PropTypes.string.isRequired\r\n    })\r\n}","import React, {useState} from 'react'\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\r\n\r\nexport const FileViewerWrapper = ({undecodedFile}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleOpen = () => setOpen(true)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return (\r\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\r\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\r\n            <Grid item xs={6}>\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\r\n                    View File\r\n                </Button>\r\n            </Grid>\r\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\r\n        </Grid>\r\n    )\r\n}","import {checkedFetch} from \"../chekedFetch\";\r\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\nexport const applicationsAPI = {\r\n    getApplicationsByOfferId: function(offerId) {\r\n        return checkedFetch(\r\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\r\n            {method: \"GET\"}\r\n        ).then(response => response.json())\r\n    },\r\n\r\n    getApplicationsByJobSeeker: function() {\r\n        return authFetch(\r\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\r\n            {method: \"GET\"}\r\n        ).then(response => response.json())\r\n            .then(data => console.log(data))\r\n    },\r\n\r\n    rejectApplication: function(applicationId) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\r\n    },\r\n\r\n    nextStage: function(applicationId) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {method: \"PUT\"})\r\n    }\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport Swal from \"sweetalert2\";\r\nimport {authFetch} from \"../authFetch\";\r\n\r\nexport const processAPI = {\r\n\r\n    getProcessById: function (id) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => response.json())\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get this process!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    getAllPossibleStages: function() {\r\n        return fetch(recruitmentServiceBasicAPILink + '/api/process/stages')\r\n            .then(response => response.json())\r\n            .catch(() => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: \"We weren't able to get possible stages!\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n    },\r\n\r\n    updateProcessStages: function(id, items) {\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                stages: items\r\n            })\r\n        })\r\n    },\r\n\r\n    changeEndDate: function(id, date) {\r\n        const preparedDate = this._prepareDate(date)\r\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                date: preparedDate\r\n            })\r\n        })\r\n    },\r\n\r\n    _prepareDate: function(date) {\r\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\r\n    }\r\n\r\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\r\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\r\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\r\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\r\nimport Swal from \"sweetalert2\";\r\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const ApplicationDetails = ({application, isHR, reload}) => {\r\n\r\n    const theme = useTheme()\r\n    const history = useHistory()\r\n\r\n    const getSeekerFiles = () => {\r\n        return application.seekerFiles\r\n            .map((file, idx) => (\r\n                <Grid item key={`${idx}`} xs={12} md={6}>\r\n                    <FileViewerWrapper undecodedFile={file}/>\r\n                </Grid>))\r\n    }\r\n\r\n    const rejectApplication = () => {\r\n        Swal.fire({\r\n            title: \"Do you really want to reject this application?\",\r\n            text: \"This operation cannot be undone\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Reject Application\",\r\n            cancelButtonText: \"Abort!\",\r\n            icon: \"question\"\r\n        }).then(result => {\r\n            if(result.isConfirmed) {\r\n                withSwal({\r\n                    loadingTitle: \"Rejecting Application\",\r\n                    promise: () => applicationsAPI.rejectApplication(application.id).then(_ => reload()),\r\n                    successSwalText: \"Application rejected successfully\"\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"You've cancelled this operation\",\r\n                    text: \"Application isn't rejected\",\r\n                    icon: \"success\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const nextStage = () => {\r\n        withSwal({\r\n            loadingTitle: \"Setting next stage of Application\",\r\n            promise: () => applicationsAPI.nextStage(application.id),\r\n            successFunction: () => reload(),\r\n            successSwalTitle: \"Next stage set successfully\"\r\n        })\r\n    }\r\n\r\n    const getDisabled = () => {\r\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\r\n    }\r\n\r\n    const getRejectButtonStyle = () =>\r\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\r\n\r\n    const teleportToMO = () =>\r\n        history.push(`/meeting/organizer/${application.id}`)\r\n\r\n    const getCardContent = () => {\r\n        return (<CardContent>\r\n            <Grid container direction=\"row\" spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography\r\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}\r\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                            <div>\r\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\">{processAPI._prepareDate(new Date(application.applicationDate))}</Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}><Divider/></Grid>\r\n                        <Grid item xs={8}>\r\n                            {\r\n                                application.seekerFiles.length === 0 ?\r\n                                    <Typography>Candidate didn't supply any files.</Typography> :\r\n                                    <Grid container direction=\"row\" spacing={4}>\r\n                                        {getSeekerFiles()}\r\n                                    </Grid>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={4}><Button color=\"secondary\" variant=\"outlined\" onClick={teleportToMO}>Plan meeting</Button></Grid>\r\n                        <Grid item xs={12}>\r\n                            {/*  Notes about candidate in future  */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        {\r\n                            isHR &&\r\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\r\n                                    Reject Application\r\n                                </Button>\r\n                                <Box m={1}/>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\r\n                                    Next Stage\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        <Grid item xs={12}>\r\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\r\n                                                 status={application.status}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>)\r\n    }\r\n\r\n    return (\r\n        <ListElementDetails cardContent={getCardContent()}/>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\r\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const EmptyApplicationsView = ({isHR}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const handleApply = () => {\r\n        history.push('/offers')\r\n    }\r\n\r\n    const handleBackToOffers = () => {\r\n        history.push('/hr/offers')\r\n    }\r\n\r\n    return (\r\n        <Box m={4}>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={12} sm={5}>\r\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\r\n                </Grid>\r\n                <Grid item xs={false} sm={2}/>\r\n                <Grid item xs={12} sm={5}>\r\n                    <Grid container spacing={6}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" color=\"textPrimary\">\r\n                                Oops... We couldn't find\r\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {\r\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\r\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\r\n                                    </Button>\r\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\r\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\r\n                                    </Button>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import {useParams} from \"react-router-dom\";\r\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\r\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\r\nimport {ApplicationsList} from \"./ApplicationsList\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {ApplicationDetails} from \"./ApplicationDetails\";\r\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport const ApplicationsView = ({getApplications, isHR}) => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const [selectedApplication, setSelectedApplication] = useState(null)\r\n    const [applications, setApplications] = useState([])\r\n    const [fetching, setFetching] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getApplications(id)\r\n            .then(data => {\r\n                setApplications(data)\r\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\r\n                setFetching(false)\r\n            }).catch(err => setFetching(false))\r\n    }, [getApplications, id, reload])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                fetching ? <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}><CircularProgress size={100} /></div>\r\n                    :\r\n                applications?.length !== 0 && applications !== undefined ?\r\n                <StandardViewAndFilterLayout\r\n                    filter={null}\r\n                    sorter={null}\r\n                    view={\r\n                        <ColumnAndDetailsLayout\r\n                            details={selectedApplication ?\r\n                                <ApplicationDetails application={selectedApplication} isHR={isHR} reload={() => setReload(!reload)} /> :\r\n                                <div>Select application</div>}\r\n                            list={<ApplicationsList\r\n                                applications={applications}\r\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\r\n                            />}\r\n                        />\r\n                    }\r\n                /> : <EmptyApplicationsView isHR={isHR} />\r\n            }\r\n        </>\r\n    )\r\n}","import {Grid, TextField} from \"@material-ui/core\"\r\nimport {Controller} from \"react-hook-form\"\r\n\r\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\r\n    <Controller\r\n        {...props}\r\n        render={({field, fieldState}) => \r\n            <TextField \r\n                {...field}\r\n                {...props.additionalTextFieldProps} \r\n                variant=\"outlined\"  \r\n                error={fieldState.error != null} \r\n                fullWidth\r\n                helperText={fieldState.error?.message || \" \"} />\r\n        } />\r\n</Grid>","import {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@material-ui/core\"\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {Controller, useForm} from \"react-hook-form\"\r\nimport {OfferSkill} from \"../details/OfferSkill\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        height: '97%'\r\n    }\r\n}))\r\n\r\nexport const OfferFormSkillList = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const defaultFormState = {name: \"\", level: \"\"}\r\n    const skills = props.value || []\r\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\r\n\r\n    const onSkillAdd = (data) => {\r\n        props.onChange(skills.concat([data]))\r\n        reset()\r\n    }\r\n\r\n    const onSkillDelete = (idx) => {\r\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\r\n    }\r\n\r\n    return <>\r\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)}></form>\r\n        <Grid item xs={12} sm={6}>\r\n            <Controller\r\n                control={control}\r\n                name=\"name\"\r\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\r\n                defaultValue={defaultFormState.name}\r\n                render={({field}) => \r\n                    <TextField\r\n                        {...field}\r\n                        label=\"Skill\"\r\n                        variant=\"outlined\"\r\n                        form=\"skill-form\"\r\n                        fullWidth />\r\n                } \r\n            />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={3}>\r\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\r\n                <InputLabel>Skill level</InputLabel>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"level\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.level}\r\n                    render={({field}) => \r\n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\r\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\r\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\r\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\r\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\r\n                            <MenuItem value='MASTER'>Master</MenuItem>\r\n                        </Select>\r\n                    } \r\n                />\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={3}>\r\n            <Button \r\n                className={classes.button}\r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                form=\"skill-form\"\r\n                fullWidth>Add skill</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Box mt={0} mb={0}>\r\n                <Grid container>\r\n                    {skills.map((skill, idx) =>\r\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\r\n                            <Grid container>\r\n                                <Grid item xs={11}>\r\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Box mt={3}>\r\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\r\n                                            <ClearIcon fontSize=\"medium\" />\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>)}\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n        </>\r\n}","import {Controller, useForm} from \"react-hook-form\"\r\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\r\nimport {FormField} from \"../../commons/formsCommons/FormField\"\r\nimport {useEffect} from \"react\"\r\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\r\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        height: '100%'\r\n    }\r\n}))\r\n\r\nexport const OfferForm = (props) => {\r\n    const { id } = useParams()\r\n\r\n\r\n    const defaultFormState = {\r\n        name:\"\",\r\n        position:\"\",\r\n        localization:\"\",\r\n        minSalary:\"\",\r\n        maxSalary:\"\",\r\n        description:\"\",\r\n        creatorId:\"\",\r\n        skills:[]\r\n    }\r\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues:defaultFormState})\r\n\r\n    const minSalary = watch(\"minSalary\", null)\r\n    const maxSalary = watch(\"maxSalary\", null)\r\n\r\n    function updateOffer(data) {\r\n        defaultFormState.name = data.name\r\n        defaultFormState.position = data.position\r\n        defaultFormState.localization = data.localization\r\n        defaultFormState.minSalary = data.minSalary\r\n        defaultFormState.maxSalary = data.maxSalary\r\n        defaultFormState.description = data.description\r\n        defaultFormState.skills = data.skills\r\n        reset(defaultFormState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(id !== undefined){\r\n            offersAPI.getOfferById(id)\r\n                .then(data => updateOffer(data))\r\n        }\r\n    }, [id])\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\r\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\r\n\r\n    const onSubmit = (data) => {\r\n        const formResult = Object.assign(data, {\r\n            minSalary: parseInt(data.minSalary),\r\n            maxSalary: parseInt(data.maxSalary),\r\n            creatorId: parseInt(data.creatorId),\r\n            offerId: id\r\n        })\r\n        withSwal({\r\n            loadingTitle: \"Saving offer\",\r\n            promise: () => props.onSubmit(formResult),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully saved offer!\",\r\n            successFunction: () => reset(),\r\n            errorSwalTitle: \"We couldn't save this offer for you\"\r\n        })\r\n    }\r\n\r\n    return <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)}></form>\r\n        <Grid container spacing={2}>\r\n            {/* TO BE DELETED, CREATOR ID SHOULD BE PROVIDED BY SESSION */}\r\n            <FormField\r\n                control={control}\r\n                name=\"creatorId\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"},\r\n                    pattern: {value: /^\\d+$/, message: \"Must be an integer\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Creator Id\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            {/* / TO BE DELETED, CREATOR ID SHOULD BE PROVIDED BY SESSION */}\r\n            <FormField\r\n                control={control}\r\n                name=\"name\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Offer name\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"position\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Position\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"localization\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"}\r\n                }} \r\n                additionalTextFieldProps={{\r\n                    label:\"Location\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"minSalary\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"},\r\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\r\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Minimum salary\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }}\r\n                additionalGridProps={{\r\n                    xs:12,\r\n                    sm:6\r\n                }} />\r\n            <FormField\r\n                control={control}\r\n                name=\"maxSalary\"\r\n                rules={{\r\n                    required: {value: true, message: \"Required field\"},\r\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\r\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\r\n                }} \r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    label:\"Maximum salary\",\r\n                    autoComplete: \"off\",\r\n                    form:\"offer-form\"\r\n                }}\r\n                additionalGridProps={{\r\n                    xs:12,\r\n                    sm:6\r\n                }} />\r\n            <FormField\r\n                name=\"description\"\r\n                control={control}\r\n                rules={{required: {value: true, message: \"Required field\"}}}\r\n                defaultValue=\"\"\r\n                additionalTextFieldProps={{\r\n                    multiline: true,\r\n                    rows: 8,\r\n                    rowsMax: 8,\r\n                    autoComplete: \"off\",\r\n                    label:\"Short description\",\r\n                    form:\"offer-form\"\r\n                }}/>\r\n            <Controller\r\n                name=\"skills\"\r\n                control={control}\r\n                defaultValue={[]}\r\n                render={({field: {onChange, value}}) => \r\n                    <OfferFormSkillList onChange={onChange} value={value} />\r\n                }\r\n            />\r\n            <Grid item xs={false} sm={8} />\r\n            <Grid item xs={12} sm={4}>\r\n                <Button className={classes.button} type=\"submit\" variant=\"contained\" size=\"large\" form=\"offer-form\" fullWidth>Save offer</Button>\r\n            </Grid>\r\n        </Grid></div>\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\r\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\r\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const ManageStages = ({processId}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const [stages, setStages] = useState([])\r\n    const [possibleStages, setPossibleStages] = useState([])\r\n\r\n    useEffect(() => {\r\n        let swal = new Swal({\r\n            title: \"Getting data\"\r\n        })\r\n        Swal.showLoading()\r\n        processAPI.getProcessById(processId)\r\n            .then(data => {\r\n                setStages(data.stages);\r\n                swal.close()\r\n            })\r\n        processAPI.getAllPossibleStages()\r\n            .then(data => setPossibleStages(data))\r\n    }, [processId])\r\n\r\n    const getPossibleStages = () => possibleStages.map(stage => {\r\n        return {'type': stage}\r\n    })\r\n\r\n    const getStages = () => stages\r\n\r\n    const handleSubmit = (items) => {\r\n        withSwal({\r\n            loadingTitle: \"Updating stages\",\r\n            promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\r\n            successSwalTitle: \"Stages Updated\"\r\n        })\r\n    }\r\n\r\n    const fireSwal = (title, text, icon) => {\r\n        Swal.fire({\r\n            title: title,\r\n            text: text,\r\n            icon: icon\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TwoColumnDnD\r\n            firstListItems={getStages()}\r\n            secondListItems={getPossibleStages()}\r\n            forbiddenIndexes={[0, getStages()?.length]}\r\n            warningFunction={() => fireSwal(\r\n                \"You can't do this!\",\r\n                \"We're sorry, but you cannot set this stage here! See help for more information.\",\r\n                \"warning\"\r\n            )}\r\n            itemRender={(item) => (\r\n                <Box m={1}>\r\n                    <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\r\n                        <CardContent>\r\n                            <Typography>{item.type}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n            )}\r\n            onSubmit={(first, _) => handleSubmit(first)}\r\n            leftSubmitGridProps={{xs: 10}}\r\n            centerSubmitGridProps={{xs: 1}}\r\n            rightSubmitGridProps={{xs: 1}}\r\n            materialButtonProps={{variant: \"outlined\"}}\r\n            submitDivStyle={{marginTop: \"15px\"}}\r\n            listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\r\n        />\r\n    )\r\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\r\n\r\n    return (\r\n        <div style={{...divStyle}}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    value={selectedDate}\r\n                    label={label}\r\n                    onChange={handleDateChange}\r\n                    {...additionalProps}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nEStellaDatePicker.propTypes = {\r\n    style: PropTypes.object,\r\n    additionalProps: PropTypes.object,\r\n    handleDateChange: PropTypes.func.isRequired,\r\n    selectedDate: PropTypes.any.isRequired\r\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ManageEndDate = ({selectedDate, onChange, processStartDate}) => {\r\n\r\n    const handleDateChange = (date) => {\r\n        if (date > new Date(processStartDate)) {\r\n            console.log(processStartDate)\r\n            onChange(date)\r\n        } else {\r\n            Swal.fire({\r\n                title: \"Oops, you cannot do this!\",\r\n                text: \"Looks like you've tried to set a date that's earlier than start date!\",\r\n                icon: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return <EStellaDatePicker\r\n            selectedDate={selectedDate}\r\n            handleDateChange={handleDateChange}\r\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\r\n        />\r\n}\r\n\r\nManageEndDate.propTypes = {\r\n    selectedDate: PropTypes.any.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\r\n\r\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\r\n\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Card style={{backgroundColor: theme.palette.card.light}}>\r\n                <CardContent>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {firstName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <Typography>\r\n                            {lastName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box m={1}>\r\n                        <Typography color=\"textSecondary\">\r\n                            {mail}\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\r\nimport Swal from \"sweetalert2\";\r\nimport {jwtUtils} from \"../jwt/jwtUtils\";\r\n\r\n\r\nexport const organizationsAPI = {\r\n    getHrPartnersByOrganization: function() {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": 'application/json',\r\n                \"x-jwt\": jwtUtils.getAuthToken()\r\n            }\r\n        }).then(response => response.json())\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    test: \"We weren't able to get your organizations' HR users\",\r\n                    icon: \"error\"\r\n                })\r\n            })\r\n\r\n    },\r\n\r\n    addHrPartner(form) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"x-jwt\": jwtUtils.getAuthToken()\r\n            },\r\n            body: JSON.stringify(form)\r\n        })\r\n    },\r\n\r\n    deleteHrPartner(form) {\r\n        return fetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"x-jwt\": jwtUtils.getAuthToken(),\r\n            },\r\n            body: JSON.stringify({\r\n                mail: form.mail\r\n            })\r\n        })\r\n    },\r\n\r\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {validateEmail} from \"../../utils/functions\";\r\nimport React, {useState} from \"react\";\r\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        height: '97%'\r\n    }\r\n}))\r\n\r\nexport const PartnerForm = (props) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const defaultFormState = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mail: \"\"\r\n    }\r\n\r\n    const [users, setUsers] = useState([props.users])\r\n\r\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\r\n\r\n    const onUserAdd = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Adding HR user\",\r\n            promise: () => organizationsAPI.addHrPartner(data),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully added HR user!\",\r\n            successFunction: () => {\r\n                setUsers(users.concat(data))\r\n                reset()\r\n                if(props.onSubmit){\r\n                    props.onSubmit(data)\r\n                }\r\n                props.userAdded(data)\r\n            },\r\n            errorSwalTitle: \"We couldn't save this user for you\"\r\n        })\r\n\r\n    }\r\n\r\n    return <>\r\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"firstName\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.firstName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"lastName\"\r\n                    rules={{required: true}}\r\n                    defaultValue={defaultFormState.lastName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"mail\"\r\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\r\n                    defaultValue={defaultFormState.lastName}\r\n                    render={({field}) =>\r\n                        <TextField\r\n                            {...field}\r\n                            label=\"e-mail address\"\r\n                            variant=\"outlined\"\r\n                            form=\"user-form\"\r\n                            fullWidth />\r\n                    }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12} sm={3}>\r\n                <Button\r\n                    className={classes.button}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    form=\"user-form\"\r\n                    fullWidth>Add HR user</Button>\r\n            </Grid>\r\n    </>\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\n\r\nexport const LoginForm = (props) => {\r\n    const defaultFormState = {\r\n        login: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Loging in...\",\r\n            promise: () => loginAPI.login(data.login, data.password),\r\n            successSwalTitle: \"Successfully logged in!\",\r\n            successFunction: (token) => {\r\n                reset()\r\n                //TODO - add logic with our token\r\n            },\r\n            errorSwalTitle: \"We couldn't log you in!\"\r\n        })\r\n        if(props.onSubmit) {\r\n            props.onSubmit(data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)} />\r\n                <Grid container spacing={2}>\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"login\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Login\",\r\n                            autoComplete: \"off\",\r\n                            form: \"login-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Password\",\r\n                            autoComplete: \"off\",\r\n                            form: \"login-form\",\r\n                            type: \"password\"\r\n                        }}\r\n                    />\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"login-form\" fullWidth>Login</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\n\r\nexport const UserRegistration = (props) => {\r\n    const defaultFormState = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Registering...\",\r\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\r\n            successSwalTitle: \"Successfully registered!\",\r\n            successSwalText: \"You can log in now!\",\r\n            confirmButtonText: \"Go to login page\",\r\n            successFunction: (response) => {\r\n                reset()\r\n                history.push('/login')\r\n            },\r\n            errorSwalTitle: \"We couldn't register you!\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\r\n\r\n                <Grid container spacing={2}>\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"login\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Email\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Password\",\r\n                            form: \"user-register-form\",\r\n                            type: \"password\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"firstName\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"First Name\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"lastName\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Last Name\",\r\n                            form: \"user-register-form\"\r\n                        }}\r\n                    />\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import {useForm} from \"react-hook-form\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\r\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\r\nimport {FormField} from \"../../commons/formsCommons/FormField\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const CompanyRegistration = (props) => {\r\n\r\n    const defaultFormState = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\r\n\r\n    const onSubmit = (data) => {\r\n        withSwal({\r\n            loadingTitle: \"Registering...\",\r\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\r\n            successSwalTitle: \"Successfully registered!\",\r\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\r\n            confirmButtonText: \"Back to main page\",\r\n            successFunction: () => {\r\n                reset()\r\n                history.push(\"/\")\r\n            },\r\n            errorSwalTitle: \"We couldn't register you!\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\r\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\r\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\r\n\r\n                <Grid container spacing={2}>\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"login\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Email\",\r\n                            form: \"company-register-form\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Password\",\r\n                            form: \"company-register-form\",\r\n                            type: \"password\"\r\n                        }}\r\n                    />\r\n                    <FormField\r\n                        control={control}\r\n                        name=\"name\"\r\n                        rules={{\r\n                            required: {value: true, message: \"Required field\"},\r\n                        }}\r\n                        defaultValue=\"\"\r\n                        additionalTextFieldProps={{\r\n                            label: \"Company Name\",\r\n                            form: \"company-register-form\"\r\n                        }}\r\n                    />\r\n                    <Grid item xs={false} sm={8} />\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n\r\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const RegistrationRadioButtons = (props) => {\r\n\r\n    const handleChange = ({ target }) => {\r\n        props.handleChange(target.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\r\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\r\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\r\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\r\n            </RadioGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegistrationRadioButtons.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}","import {useState} from \"react\";\r\nimport {UserRegistration} from \"./UserRegistration\";\r\nimport {CompanyRegistration} from \"./CompanyRegistration\";\r\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\r\n\r\nexport const RegistrationRouting = (props) => {\r\n\r\n    const [render, setRender] = useState(\"user\")\r\n\r\n    const handleChange = (value) => {\r\n        setRender(value)\r\n        console.log(value)\r\n    }\r\n\r\n    const getRegistrationForm = () => {\r\n        switch (render) {\r\n            case 'user':\r\n                return <UserRegistration />\r\n            case 'company':\r\n                return <CompanyRegistration />\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\r\n            {getRegistrationForm()}\r\n        </div>\r\n    )\r\n}","export const useKeyPress = (key, event, action) => {\r\n    if(event.key === key) {\r\n        action()\r\n        event.preventDefault()\r\n    }\r\n}\r\n\r\nexport const keys = {\r\n    Enter: \"Enter\"\r\n}","import {useState} from \"react\";\r\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\r\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\r\n\r\nexport const TasksPassword = ({ handleSubmit }) => {\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleKeyPress = (event) => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\r\n            <CardContent style={{marginBottom: '1em'}}>\r\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\r\n                    <Typography variant=\"h6\">\r\n                        We need to validate, who you are, so please, provide password from your mail:\r\n                    </Typography>\r\n                </div>\r\n                <TextField\r\n                    value={password}\r\n                    onChange={({target}) => setPassword(target.value)}\r\n                    variant=\"outlined\"\r\n                    label=\"Password from email\"\r\n                    fullWidth\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </CardContent>\r\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\r\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\r\n                    Go!\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {Button, Card, CardContent, Divider, Typography, IconButton, Menu, MenuItem} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport {theme} from \"../../../test/utils/theme\";\r\n\r\nexport const Task = ({task, tasksOperations}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [menuAnchor, setMenuAnchor] = useState(null)\r\n\r\n    const menuClose = () => {\r\n        setMenuAnchor(null)\r\n    }\r\n\r\n    return (\r\n        <Card style={{padding: '1em'}}>\r\n            <div style={{float: 'right'}}>\r\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\r\n                    <MoreHorizIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">Task: {task.id}</Typography>\r\n                <Typography variant=\"subtitle1\"\r\n                            color=\"textSecondary\">Deadline: {new Date(task.deadline).toLocaleString()}</Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\r\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\r\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\r\n                                   open={open} handleClose={() => setOpen(false)}/>\r\n            </CardContent>\r\n\r\n            <Menu\r\n                anchorEl={menuAnchor}\r\n                keepMounted\r\n                open={!!menuAnchor}\r\n                onClose={menuClose}\r\n            >\r\n                <MenuItem onClick={tasksOperations['delete']} style={{color: theme.status.danger.main}}>Delete</MenuItem>\r\n            </Menu>\r\n        </Card>\r\n    )\r\n}","import MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\nconst mdParser = new MarkdownIt()\r\n\r\nexport const MarkdownEditor = ({ style, handleChange }) => {\r\n\r\n    return (\r\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} />\r\n    )\r\n}\r\n","import {useState} from \"react\";\r\n\r\nexport const FileUpload = ({handleChange}) => {\r\n\r\n    const [uploaded, setUploaded] = useState(false)\r\n\r\n    return (\r\n        <label style={{\r\n            border: `1px solid #ccc`,\r\n            display: 'inline-block',\r\n            padding: `6px 12px`,\r\n            cursor: 'pointer',\r\n            width: '80%'\r\n        }}>\r\n            <input type=\"file\" onChange={({target}) => {\r\n                setUploaded(true);\r\n                handleChange(target.files[0])\r\n            }} style={{display: 'none'}}/>\r\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\r\n        </label>\r\n    )\r\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\r\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {FileUpload} from \"../../../commons/FileUpload\";\r\n\r\nexport const AddDescription = ({ handleChange }) => {\r\n\r\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\r\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\r\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\r\n\r\n    const [editor, setEditor] = useState(mdEditor)\r\n\r\n    const handleRadioChange = ({ target }) => {\r\n        switch (target.value) {\r\n            case 'text':\r\n                setEditor(textEditor)\r\n                break;\r\n            case 'md':\r\n                setEditor(mdEditor)\r\n                break;\r\n            case 'file':\r\n                setEditor(fileEditor)\r\n                break;\r\n            default:\r\n                setEditor(null)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Add description to your task</Typography>\r\n            <div style={{margin: '1em'}} />\r\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\r\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\r\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\r\n                </RadioGroup>\r\n            </div>\r\n            { editor }\r\n        </div>\r\n    )\r\n}","import {IconButton, TextField} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {AddCircleOutlined} from \"@material-ui/icons\";\r\n\r\nexport const Form = ({ addTestCase }) => {\r\n\r\n    const [testCase, setTestCase] = useState({})\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\r\n            <TextField\r\n                label=\"Input\"\r\n                variant=\"outlined\"\r\n                value={testCase?.input}\r\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\r\n            />\r\n            <TextField\r\n                label=\"Expected Output\"\r\n                variant=\"outlined\"\r\n                value={testCase?.output}\r\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\r\n            />\r\n            <IconButton onClick={() => {\r\n                addTestCase(testCase)\r\n                setTestCase({})\r\n            }}>\r\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\";\r\nimport {Form} from \"./Form\";\r\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport const ManualTestsCases = ({ handleSubmit }) => {\r\n\r\n    const [testCases, setTestCases] = useState([])\r\n\r\n    const handleAddTestCase = (testCase) => {\r\n        const preparedTestCase = {\r\n            testData: testCase.input,\r\n            expectedResult: testCase.output,\r\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\r\n        }\r\n        setTestCases([\r\n            ...testCases,\r\n            preparedTestCase\r\n        ])\r\n    }\r\n\r\n    const handleDelete = (testCase) => {\r\n        setTestCases(\r\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\r\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\r\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\r\n                <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                          <TableCell>Test Case Id</TableCell>\r\n                          <TableCell>Input</TableCell>\r\n                          <TableCell>Expected Output</TableCell>\r\n                          <TableCell>Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {testCases.map(testCase => (\r\n                            <TableRow key={testCase.testCaseId}>\r\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\r\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\r\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton onClick={() => handleDelete(testCase)}>\r\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}","import {FileUpload} from \"../../../commons/FileUpload\";\r\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport {ManualTestsCases} from \"./testcases/Manual\";\r\n\r\nexport const AddTests = ({ handleChange }) => {\r\n\r\n    const [view, setView] = useState(null)\r\n\r\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\r\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\r\n\r\n    const handleRadioChange = ({target}) => {\r\n        switch (target.value) {\r\n            case 'manually':\r\n                setView(manualView)\r\n                break;\r\n            case 'file':\r\n                setView(fileUploader)\r\n                break;\r\n            default:\r\n                setView(null)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{minHeight: '60vh'}}>\r\n            <Typography variant=\"h6\">Add tests for your task</Typography>\r\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\r\n                result of code to String</Typography>\r\n            <div style={{margin: '1em'}}/>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexFlow: 'row wrap',\r\n                gap: '10px',\r\n                marginBottom: '1em'\r\n            }}>\r\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\r\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\r\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\r\n                </RadioGroup>\r\n            </div>\r\n            {view}\r\n        </div>\r\n    )\r\n}","import {Typography} from \"@material-ui/core\";\r\nimport {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\r\nimport {useState} from \"react\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const AddDeadline = ({ handleChange }) => {\r\n\r\n    const [selectedDate, setSelectedDate] = useState(Date.now())\r\n\r\n    const handleDateChange = (date) => {\r\n        Swal.resetValidationMessage()\r\n        if(date < Date.now()) {\r\n            Swal.showValidationMessage(\"If you set deadline earlier than now, nobody will be able to solve this task!\")\r\n        } else {\r\n            setSelectedDate(date)\r\n            handleChange(date)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Add deadline to your task</Typography>\r\n            <EStellaDatePicker handleDateChange={handleDateChange} selectedDate={selectedDate} label=\"Deadline\"/>\r\n        </div>\r\n    )\r\n}","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {AddDescription} from \"./description/AddDescription\";\r\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\r\nimport {AddTests} from \"./tests/AddTests\";\r\nimport {AddDeadline} from \"./AddDeadline\";\r\nimport {tasksApi} from \"../../../utils/apis/TasksApi\";\r\n\r\nlet task = {}\r\n\r\nconst clearTask = () => task = {}\r\n\r\nconst handleMarkdownChange = ({html, text}) => {\r\n    clearTask()\r\n    task['descriptionFileName'] = 'description.md'\r\n    task['descriptionBase64'] = window.btoa(text)\r\n}\r\n\r\nconst handleTextChange = (text) => {\r\n    clearTask()\r\n    task['descriptionFileName'] = \"description.txt\"\r\n    task['descriptionBase64'] = window.btoa(text)\r\n}\r\n\r\nconst handleFileChangeDescription = async (value) => {\r\n    clearTask()\r\n\r\n    const file = await handleFileChange(value, 'descriptionBase64')\r\n    task['descriptionFileName'] = file.fileName\r\n}\r\n\r\nconst handleFileChangeTests = async (value) => {\r\n    delete task['testsBase64']\r\n    await handleFileChange(value, 'testsBase64')\r\n}\r\n\r\nconst handleFileChange = async (value, key) => {\r\n    const file = {\r\n        fileName: value.name,\r\n        fileBase64: await convertFileToBase64(value)\r\n    }\r\n\r\n    task[key] = file.fileBase64.substring(\r\n        file.fileBase64.indexOf(\"base64\") + 7\r\n    )\r\n    return file\r\n}\r\n\r\nconst basicSwal = {\r\n    title: 'Add task',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#41A317',\r\n    confirmButtonText: 'Next',\r\n    allowOutsideClick: false,\r\n    width: '70%'\r\n}\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport const createTask = (tasks, reload, setReload) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        html: <AddDescription\r\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\r\n    }).then(result => {\r\n        if (result.isConfirmed) {\r\n            createTests(tasks, reload, setReload)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst handleManualTestsChange = (testCases) => {\r\n    delete task['testsBase64']\r\n}\r\n\r\nconst createTests = (tasks, reload, setReload) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\r\n    }).then(result => {\r\n        if(result.isConfirmed) {\r\n            createTimeLimit(tasks, reload, setReload)\r\n        }\r\n    })\r\n}\r\n\r\nconst createTimeLimit = (tasks, reload, setReload) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        input: 'number',\r\n        text: 'Add time limit'\r\n    }).then(result => {\r\n        if(result.isConfirmed) {\r\n            task['timeLimit'] = Number(result.value)\r\n            createDeadline(tasks, reload, setReload)\r\n        }\r\n    })\r\n}\r\n\r\nconst createDeadline = (tasks, reload, setReload) => {\r\n    MySwal.fire({\r\n        ...basicSwal,\r\n        html: <AddDeadline handleChange={(date) => task['deadline'] = date} />,\r\n        confirmButtonText: 'Create'\r\n    }).then(result => {\r\n        if(result.isConfirmed) {\r\n            create(tasks, reload, setReload)\r\n        }\r\n    })\r\n}\r\n\r\nconst create = (tasks, reload, setReload) => {\r\n    tasksApi.updateTasks([...tasks, task])\r\n        .then(_ => setReload(!reload))\r\n}","import {useEffect, useState} from \"react\";\r\nimport {Task} from \"./Task\";\r\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {AddCircleOutline} from \"@material-ui/icons\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {createTask} from \"./createTask\";\r\nimport {tasksApi} from \"../../../utils/apis/TasksApi\";\r\n\r\nexport const TasksList = ({ fetchTasks, id }) => {\r\n\r\n    const [tasks, setTasks] = useState([])\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const addTask = () => {\r\n        createTask(tasks, reload, setReload)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTasks(id)\r\n            .then(data => setTasks(data))\r\n    }, [fetchTasks, id, reload])\r\n\r\n    const deleteTask = (id) => {\r\n        tasksApi.updateTasks(tasks.filter(task => task.id !== id))\r\n            .then(_ => setReload(!reload))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginLeft: '20%'}}>\r\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={{ 'delete': () => deleteTask(task?.id) }}/>)}\r\n            </div>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                style={{display: \"flex\", alignItems: \"center\"}}\r\n            >\r\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\r\n                    <ListItem>\r\n                        <Button onClick={addTask}>\r\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\r\n                        </Button>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","import {useParams} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {TasksPassword} from \"./TasksPassword\";\r\nimport {TasksList} from \"./crud/TasksList\";\r\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\r\n\r\nexport const TasksViewWrapper = ({ fetchTasks }) => {\r\n    const {organizationId} = useParams()\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const { set } = useDevPassword()\r\n\r\n    const handleSubmit = (password) => {\r\n        set(`${organizationId}.${password}`)\r\n        setPassword(password)\r\n    }\r\n\r\n    return !!password ? <TasksList fetchTasks={fetchTasks} id={organizationId}/> : <TasksPassword handleSubmit={handleSubmit}/>\r\n}\r\n","export const useDevPassword = () => {\r\n\r\n    const devPasswordKey = \"devPassword\"\r\n\r\n    const set = (password) => sessionStorage.setItem(devPasswordKey, password)\r\n\r\n    const get = () => sessionStorage.getItem(devPasswordKey)\r\n\r\n    return {get, set}\r\n\r\n}","export const offers = [\r\n    {\r\n        id: 20,\r\n        name: \"Centurion\",\r\n        description: \"Join IX Legion. Join conquering the Great Britain\",\r\n        position: \"Centurion\",\r\n        minSalary: 10000,\r\n        maxSalary: 25000,\r\n        organization: {\r\n            name: \"Pega\"\r\n        },\r\n        skills: [\r\n            {\r\n                id: 15,\r\n                level: \"MASTER\",\r\n                name: \"Throw pillum\"\r\n            },\r\n            {\r\n                id: 14,\r\n                level: \"MASTER\",\r\n                name: \"Looting\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 18,\r\n        name: \"Project Manager\",\r\n        description: \"Be manager of your life\",\r\n        position: \"Senior developer Java\",\r\n        minSalary: 15000,\r\n        maxSalary: 25000,\r\n        organization: {\r\n            name: \"Qualtrics\"\r\n        },\r\n        skills: [\r\n            {\r\n                id: 15,\r\n                level: \"MASTER\",\r\n                name: \"Throw pillum\"\r\n            },\r\n            {\r\n                id: 14,\r\n                level: \"MASTER\",\r\n                name: \"Looting\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 17,\r\n        name: \"Senior developer Java\",\r\n        description: \"Master Java developer\",\r\n        position: \"Senior developer Java\",\r\n        minSalary: 25000,\r\n        maxSalary: 30000,\r\n        organization: {\r\n            name: \"Pega\"\r\n        },\r\n        skills: [\r\n            {\r\n                id: 15,\r\n                level: \"MASTER\",\r\n                name: \"Throw pillum\"\r\n            },\r\n            {\r\n                id: 14,\r\n                level: \"MASTER\",\r\n                name: \"Looting\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 16,\r\n        name: \"Software Engineer Intern\",\r\n        description: \"The best offer of your live\",\r\n        position: \"Software Engineer Intern\",\r\n        minSalary: 3000,\r\n        maxSalary: 3500,\r\n        organization: {\r\n            name: \"Qualtrics\"\r\n        },\r\n        skills: [\r\n            {\r\n                id: 15,\r\n                level: \"MASTER\",\r\n                name: \"Throw pillum\"\r\n            },\r\n            {\r\n                id: 14,\r\n                level: \"MASTER\",\r\n                name: \"Looting\",\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const getApplications = () => {\r\n    return new Promise((resolve, reject) => {\r\n        resolve([\r\n            {\r\n                \"id\": 72,\r\n                \"applicationDate\": \"2021-08-04\",\r\n                \"status\": \"IN_PROGRESS\",\r\n                \"stage\": {\"id\": 40, \"type\": \"ENDED\"},\r\n                \"jobSeeker\": {\r\n                    \"id\": 71,\r\n                    \"user\": {\"id\": 71, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.com\"}\r\n                },\r\n                \"seekerFiles\": [],\r\n                \"offerName\": \"Centurion\",\r\n                \"stages\": []\r\n            },\r\n            {\r\n                \"id\": 92,\r\n                \"applicationDate\": \"2021-08-10\",\r\n                \"status\": \"ACCEPTED\",\r\n                \"stage\": {\"id\": 88, \"type\": \"APPLIED\"},\r\n                \"jobSeeker\": {\r\n                    \"id\": 89,\r\n                    \"user\": {\"id\": 89, \"firstName\": \"Dawid\", \"lastName\": \"Dębowski\", \"mail\": \"test@test.testcom\"}\r\n                },\r\n                \"seekerFiles\": [],\r\n                \"offerName\": \"Centurion\",\r\n                \"stages\": []\r\n            }\r\n        ])\r\n    })\r\n}\r\n\r\nexport const tasks = [\r\n    {\r\n        id: 1,\r\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\r\n        descriptionFileName: \"description.md\",\r\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\r\n        timeLimit: 30,\r\n        deadline: \"2021-09-05T10:51:22+00:00\"\r\n    },\r\n    {\r\n        id: 2,\r\n        testsBase64: \"Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=\",\r\n        descriptionFileName: \"description.txt\",\r\n        descriptionBase64: \"IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=\",\r\n        timeLimit: 60,\r\n        deadline: \"2021-09-05T10:51:22+00:00\"\r\n    }\r\n]\r\n\r\nexport const getTasks = () =>\r\n    new Promise(resolve => {\r\n        resolve(tasks)\r\n    })","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\r\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\r\nimport {constants} from \"../../../utils/constants\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\r\n\r\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\r\n\r\n    const {type : paramType, uuid} = useParams()\r\n    const [meetingUUID, setMeetingUUID] = useState(\"\")\r\n\r\n    const type = paramType || propType\r\n\r\n    const userData = {\r\n        userType: type,\r\n        uuid: uuid\r\n    }\r\n\r\n    const onPickSlotByJobSeeker = userData.userType === \"job_seeker\" ? (slot) => console.log(slot) : () => {}\r\n\r\n    useEffect(() => {\r\n        if(userData.userType === \"organizer\") {\r\n            interviewAPI.getNewestInterview(uuid)\r\n                .then(data => {\r\n                    setMeetingUUID(data?.meetingUUID)\r\n                })\r\n        }\r\n    }, [type, uuid])\r\n\r\n    return <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\r\n                             userData={userData}\r\n                             outsideJwt={jwtUtils.getAuthToken()}\r\n                             outerFunctions={{ 'onPickSlot': onPickSlotByJobSeeker }}\r\n                             drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}} outsideMeetingUUID={meetingUUID} />\r\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\r\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\r\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\r\nimport {OffersView} from \"../components/offers/list/OffersView\";\r\nimport {offersAPI} from \"./apis/OfferApi\";\r\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\r\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\r\nimport {theme} from \"../test/utils/theme\";\r\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\r\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\r\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\r\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\r\nimport {OrganizationsPartnerList} from \"../components/organization/OrganizationsPartnerList\";\r\nimport {organizationsAPI} from \"./apis/OrganizationApi\";\r\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\r\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\r\nimport {TasksViewWrapper} from \"../components/tasks/TasksViewWrapper\";\r\nimport {getTasks} from \"../test/DummyValues\";\r\nimport {TaskWrapper} from \"../components/tasks/TaskWrapper\";\r\nimport React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\r\n\r\nconst createRoute = (path, component, style={marginTop: \"2em\"}) => {\r\n    return {\r\n        path,\r\n        style,\r\n        component\r\n    }\r\n}\r\n\r\nconst routes = [\r\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\r\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\r\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\r\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\r\n    createRoute(\"/offers\", <OffersView getOffers={offersAPI.getAllOffers}/>, {margin: \"1em\", marginTop: \"2em\"}),\r\n    createRoute(\"/offers/:id\", <OffersView getOffers={offersAPI.getAllOffers}/>, {margin: \"1em\", marginTop: \"2em\"}),\r\n    createRoute(\"/hr/offers\", withUserAuth(OffersView, [\"hr\"], {getOffers: () => offersAPI.getOffersFromHr(), buttons: hrOfferButtons(theme)})),\r\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\r\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\r\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\r\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\r\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\r\n    createRoute(\"/organization/users\", withUserAuth(OrganizationsPartnerList, [\"organization\"], {users: () => organizationsAPI.getHrPartnersByOrganization()})),\r\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\r\n    createRoute(\"/login\", <LoginForm />),\r\n    createRoute(\"/register\", <RegistrationRouting />),\r\n    createRoute(\"/tasks/:organizationId\", <TasksViewWrapper fetchTasks={(id) => getTasks(id)} />),\r\n    createRoute('/task/:id', <TaskWrapper />, {}),\r\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"})),\r\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />),\r\n    createRoute(\"*\", <div>Page</div>)\r\n]\r\n\r\nexport const getRoutes = () => {\r\n    return routes.map((route, idx) => {\r\n        return (\r\n            <Route exact path={route.path} key={`${idx}`}>\r\n                <div style={route.style}>\r\n                    {route.component}\r\n                </div>\r\n            </Route>\r\n        )\r\n    })\r\n}","import {ManageStages} from \"./ManageStages\";\r\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Swal from \"sweetalert2\";\r\nimport {ManageEndDate} from \"./ManageEndDate\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\r\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\r\n\r\nexport const ManageProcess = () => {\r\n\r\n    const {id} = useParams()\r\n    const [process, setProcess] = useState(null)\r\n    const [selectedEndDate, setSelectedEndDate] = useState(null)\r\n\r\n    useEffect(() => {\r\n        processAPI.getProcessById(id)\r\n            .then(data => {\r\n                setProcess(data)\r\n                setSelectedEndDate(data?.endDate || new Date())\r\n            })\r\n    }, [id])\r\n\r\n    const showHelp = () => {\r\n        Swal.fire({\r\n            title: \"Help\",\r\n            icon: \"question\",\r\n            html: 'Here are some most commons tips:<br>' +\r\n                '<ul>' +\r\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\r\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\r\n                '</ul>'\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        withSwal({\r\n            loadingTitle: \"Updating end date\",\r\n            promise: () => processAPI.changeEndDate(id, selectedEndDate),\r\n            successSwalTitle: \"Date updated\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Grid container spacing={2} direction=\"column\">\r\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\r\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\r\n                        </Grid>\r\n                        <Grid item> <Divider/> </Grid>\r\n                        <Grid container style={{display: \"flex\", flexGrow: 1}}>\r\n                            {/*<Grid item>*/}\r\n                            {/*  Beginning of recruitment process in future maybe  */}\r\n                            {/*</Grid>*/}\r\n                            <Grid item>\r\n                                <ManageEndDate selectedDate={selectedEndDate || new Date()}\r\n                                               onChange={(date) => setSelectedEndDate(date)}\r\n                                               processStartDate={process?.startDate}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/*<Grid item>*/}\r\n                        {/*    In future tasks and quizzes? */}\r\n                        {/*</Grid>*/}\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={false} sm={6} lg={8}/>\r\n                                <Grid item xs={12} sm={6} lg={4}>\r\n                                    <Button onClick={handleSubmit} variant=\"outlined\">Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\r\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item> <Divider/> </Grid>\r\n                        <Grid item>\r\n                            <ManageStages processId={id}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport {OrganizationPartner} from \"./OrganizationPartner\";\r\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\r\nimport {PartnerForm} from \"./PartnerForm\";\r\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\r\n\r\nexport const OrganizationsPartnerList = (props) => {\r\n\r\n    const [users, setUsers] = useState([props.users])\r\n\r\n    function updateUsers(data) {\r\n        setUsers(data.map(el => el.user))\r\n    }\r\n\r\n    useEffect(() => {\r\n            organizationsAPI.getHrPartnersByOrganization()\r\n                .then(data => {\r\n                    updateUsers(data)\r\n                })\r\n\r\n    }, [])\r\n\r\n\r\n    const onUserDelete = (idx, data) => {\r\n        withSwal({\r\n            loadingTitle: \"Deleting HR user\",\r\n            promise: () => organizationsAPI.deleteHrPartner(data),\r\n            successSwalTitle: \"Success\",\r\n            successSwalText: \"You've successfully deleted HR user!\",\r\n            successFunction: () => {\r\n                setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined)))\r\n            },\r\n            errorSwalTitle: \"We couldn't delete this user for you\"\r\n        })\r\n        if (props.onDelete) {\r\n            props.onDelete(data)\r\n        }\r\n    }\r\n\r\n    return <div style={{width: \"60%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\r\n        <Grid container spacing={2}>\r\n        <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Box mt={0} mb={0}>\r\n                <Grid container>\r\n                    {users.map((user, idx) =>\r\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\r\n                            <Grid container>\r\n                                <Grid item xs={11}>\r\n                                    <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName} mail={user.mail}/>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Box mt={3}>\r\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onUserDelete(idx, user)}>\r\n                                            <ClearIcon fontSize=\"medium\" />\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>)}\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n    </div>\r\n}","import React from 'react';\r\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\r\nimport './App.css'\r\nimport {ThemeProvider} from '@material-ui/styles';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {theme} from \"./test/utils/theme\";\r\nimport {getRoutes} from \"./utils/routes\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n          <Navbar />\r\n          <Switch>\r\n              {getRoutes()}\r\n          </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}