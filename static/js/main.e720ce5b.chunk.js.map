{"version":3,"sources":["utils/hooks/Base64.js","utils/constants.js","utils/schemas/tokenPayloadSchema.js","utils/apis/APILinks.js","utils/apis/headers.js","utils/apis/LoginAPI.js","utils/chekedFetch.js","utils/apis/JwtAPI.js","utils/jwt/jwtUtils.js","utils/schemas/validateSchema.js","utils/hooks/useLoggedIn.js","utils/Enums.js","components/userMenu/UserMenu.js","components/navbar/Navbar.js","utils/theme.js","assets/landing_page_image1.png","assets/landing_page_image2.png","assets/landing_page_image3.png","utils/functions.js","components/commons/layouts/ListElement.js","components/commons/layouts/ListWithSelection.js","components/offers/list/OffersList.js","utils/authFetch.js","utils/apis/OfferApi.js","components/commons/CenteredCircularProgress.js","components/LandingPage/LandingPage.js","utils/apis/InterviewAPI.js","components/meeting/meetingTime/MeetingFab.js","utils/apis/files.js","components/commons/MarkdownViewer.js","components/commons/GenericFileViewer.js","components/tasks/tasksUtils.js","components/tasks/crud/Task.js","components/commons/formsCommons/WithSwal.js","utils/apis/tasksAPI.js","utils/hooks/useDevPassword.js","components/tasks/AssignTasks.js","utils/hooks/useKeyPress.js","components/tasks/TasksPassword.js","components/tasks/WithDevPassword.js","components/EStellaAutocomplete.js","components/notes/TagsList.js","components/notes/Note.js","components/notes/NotesList.js","components/commons/MarkdownEditor.js","utils/apis/NoteApi.js","components/notes/AddNote.js","utils/hooks/useDevMail.js","components/notes/NotesMenu.js","utils/hooks/useAbly.js","components/tasks/TaskWrapper.js","components/tasks/MultipleTasksWrapper.js","components/meeting/meetingTime/JitsiComponentWrapper.js","components/meeting/meetingTime/MeetingDisplayNameForm.js","components/meeting/meetingTime/MeetingDisplayName.js","components/meeting/meetingTime/Meeting.js","components/userMenu/FilesDropzone.js","utils/apis/JobSeekerAPI.js","components/offers/applyForm/ApplyForm.js","components/offers/details/SkillIndicator.js","components/offers/details/OfferSkill.js","components/commons/layouts/ListElementDetails.js","components/offers/details/SingleMenu.js","components/offers/details/OffersDetails.js","components/offers/list/PickUpOffer.js","utils/procesStages.js","components/commons/filter/ActiveFilter.js","components/commons/filter/Filter.js","components/commons/sorter/Sorter.js","components/commons/sorter/SorterWrapper.js","components/commons/layouts/ColumnAndDetailsLayout.js","components/commons/layouts/StandardViewAndFilterLayout.js","components/commons/filter/EStellaSlider.js","components/offers/InDrawerFilter.js","components/offers/list/OffersView.js","components/auth/UnauthenticatedPage.js","components/auth/withUserAuth.js","components/offers/HrOfferButtons.js","components/applications/ApplicationsList.js","components/applications/ApplicationTimeline.js","components/applications/FileViewerWrapper.js","utils/apis/applicationsAPI.js","utils/apis/ProcessAPI.js","components/applications/ApplicationDetails.js","components/applications/DevApplicationDetails.js","assets/empty_view.png","components/applications/EmptyApplicationsView.js","components/applications/filters/CustomSwitch.js","components/applications/filters/InDrawerFilter.js","components/notes/NotesDrawer.js","components/applications/ApplicationsView.js","components/commons/formsCommons/FormField.js","components/offers/createForm/OfferFormSkillList.js","components/offers/createForm/OfferForm.js","components/process/manage/ManageStages.js","components/commons/EStellaDatePicker.js","components/process/manage/ManageDate.js","components/process/manage/Dates.js","components/process/manage/ManageProcess.js","components/auth/login/LoginForm.js","components/auth/registration/UserRegistration.js","components/auth/registration/CompanyRegistration.js","components/auth/registration/RegistrationRadioButtons.js","components/auth/registration/RegistrationRouting.js","components/meeting/preparing/MeetingOrganizerWrapper.js","components/offers/list/HrOffersView.js","components/userMenu/FilesPage.js","components/userMenu/ProfilePage.js","utils/apis/UserAPI.js","components/userMenu/SettingsPage.js","components/userMenu/SettingsOverlay.js","utils/apis/OrganizationApi.js","components/organization/PartnerForm.js","components/organization/OrganizationPartner.js","components/organization/OrganizationPartnerList.js","components/organization/OrganizationPartnersManagement.js","components/tasks/review/SingleTestCase.js","components/tasks/review/SingleResult.js","components/tasks/review/SingleTaskReview.js","components/tasks/review/TasksCarousel.js","components/tasks/review/ReviewTask.js","components/commons/FileUpload.js","components/tasks/crud/description/AddDescription.js","components/tasks/crud/tests/testcases/Form.js","components/tasks/crud/tests/testcases/Manual.js","components/tasks/crud/tests/AddTests.js","components/tasks/crud/createTask.js","components/tasks/crud/TasksList.js","components/DevView.js","utils/routes.js","App.js","reportWebVitals.js","index.js"],"names":["decodeBase64","base64","Buffer","toString","encodeBase64","string","constants","tokenPayloadSchema","firstName","value","lastName","userType","mail","iss","isNaN","Number","iat","exp","recruitmentServiceBasicAPILink","headers","loginAPI","login","password","fetch","method","body","JSON","stringify","then","response","jwtUtils","saveTokenFromResponse","name","HttpError","code","message","Error","checkedFetch","url","data","errorMessage","status","checkResponseStatusOrThrowError","jwtAPI","userId","refreshToken","refreshApiPath","jwtHeaderKey","getUser","token","getAuthToken","possiblyUser","getPayload","payloadToOptUser","localStorage","getItem","getRefreshToken","setItem","get","deleteAuthToken","removeItem","deleteRefreshToken","undefined","catch","Swal","fire","text","icon","window","history","pushState","urlPath","location","reload","tokenSplitter","parts","split","length","getHeader","safeJsonRetrieve","base64UrlToBase64","base64Url","replace","decodeBase64Url","atob","decoded","parse","payload","schema","obj","Object","keys","every","key","isTokenActive","issuedAt","expiresAt","currentDate","Date","now","useLoggedIn","useHistory","useState","loggedIn","setLoggedIn","logout","push","filterTypes","operators","compare","a","b","offerSort","apply","offers","sort","userTypes","userMenuTabs","applicationStatus","IN_PROGRESS","ACCEPTED","REJECTED","useStyles","makeStyles","theme","purple0","backgroundColor","deepPurple","color","palette","getContrastText","purple1","pink0","green0","red0","red1","orange0","deepOrange","orange1","orange2","UserMenu","props","styles","anchorEl","setAnchorEl","direction","setDirection","open","setOpen","user","colors","values","stringToColor","hash","i","charCodeAt","handleChoice","to","redirect","style","Box","sx","display","alignItems","textAlign","IconButton","onClick","event","currentTarget","Avatar","className","children","userAvatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","MenuList","id","Boolean","MenuItem","Navbar","useTheme","AppBar","position","background","primary","dark","height","zIndex","drawer","Toolbar","marginTop","textDecoration","src","alt","width","marginLeft","Button","marginRight","createTheme","danger","main","light","success","secondary","card","focused","scrollToTop","document","scrollTop","documentElement","validateEmail","email","test","String","toLowerCase","getFilterValueByType","filters","filterType","find","filter","type","filterItems","items","tmpItems","forEach","item","arg","minSalary","maxSalary","organization","includes","operator","filterTags","map","tag","tags","innerTag","some","stage","createFilterFunction","getIconFromFilterType","ListElement","selected","idx","selectedStyle","marginBottom","Card","variant","CardContent","Typography","first","Divider","float","second","third","ListWithSelection","listItems","extractData","limit","propsHandleSelect","isSelectable","selectedIdx","setSelectedIdx","overflowY","handleSelect","getListItems","OffersList","getData","offer","onSelectedOffer","handleShortOfferSelect","Grid","container","border","padding","spacing","defaultProps","authFetch","authToken","dataHeaders","authHeaders","newHeaders","assign","authData","httpError","offersAPI","offerId","json","forCandidate","queryParam","surname","files","offerData","offerID","CenteredCircularProgress","justifyContent","CircularProgress","LandingOffers","setOffers","useEffect","title","size","fullWidth","LandingHrOffers","LandingOrganizationOffers","LandingList","LandingPage","margin","xs","md","flexDirection","sm","Image1","Image2","Image3","interviewAPI","interviewId","applicationId","MeetingFab","mainButtonStyles","onDefaultView","onWhiteboard","onTask","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","err","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","byteArray","Uint8Array","Blob","mdParser","MarkdownIt","MarkdownViewer","markdown","parsed","render","dangerouslySetInnerHTML","__html","paper","boxShadow","shadows","GenericFileViewer","handleClose","classes","txt","setTxt","fileName","indexOf","File","fileBase64","Modal","onClose","getViewer","getFirstLineFromTaskDescription","descriptionInBase64","firstLine","Task","task","tasksOperations","shouldDisplayMenu","menuAnchor","setMenuAnchor","descriptionBase64","timeLimit","descriptionFileName","Menu","keepMounted","taskOperation","action","withSwal","loadingTitle","promise","successSwalTitle","successSwalText","confirmButtonText","successFunction","errorSwalTitle","errorSwalText","errorConfirmButtonText","swal","showLoading","Math","floor","isStatus2xx","close","swalResult","isConfirmed","fallbackTask1","testsBase64","fallbackTask2","tasksApi","organizationId","tasksStageId","taskStageUUID","devPassword","organizationUUID","credentials","setReload","tasksIds","keyValue","tasks","useDevPassword","devPasswordKey","getDevPassword","sessionStorage","setDevPassword","getEncodedDevPassword","modal","AssignTasks","modalOptions","alreadyAssignedTasks","organizationTasks","assignKey","assignUUIDValue","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","top","left","transform","empty","actionTitle","newTasksIds","assignedTask","ModalButtons","Section","overflow","GridList","flexWrap","cols","GridListTile","TasksPassword","handleSubmit","setPassword","TextField","onChange","target","label","onKeyPress","preventDefault","useKeyPress","CardActions","WithDevPassword","WrappedComponent","wrappedProps","createPassword","params","useParams","EStellaAutocomplete","options","Autocomplete","onSelect","renderInput","TagsList","deletable","onDelete","Chip","makeTag","Note","note","author","whiteSpace","NotesList","notes","MarkdownEditor","handleChange","view","usableView","menu","html","renderHTML","NoteApi","paramId","note_body","dev_password","param","AddNote","onCancel","uuid","uuid_key","shouldUseAuthFetchToPost","noteText","setNoteText","setTags","currentTag","setCurrentTag","devMailKey","getDevMail","setDevMail","useDevMail","addNoteApiCall","doAddNote","addDevNote","devMail","preConfirm","getPopup","querySelector","showValidationMessage","gap","flexFlow","varient","NotesMenu","setTag","showAdd","setShowAdd","m","Set","flatMap","ably","Realtime","process","TaskWrapper","toSolveTask","submitLeftOffset","channelName","channel","channels","pub","publish","console","log","sub","func","subscribe","clientId","useAbly","outerMonacoWrapperStyle","codeCheckerBaseLink","fetchTasks","solverId","absoluteOffset","settings","right","submit","sharingCodeFunctions","MultipleTasksWrapper","propId","setTasks","isFetching","setIsFetching","currentSlide","setCurrentSlide","prev","state","next","editors","PrevButton","disabled","NextButton","showIndicators","showArrows","showStatus","selectedItem","ind","statusFormatter","curr","JitsiWrapper","admin","roomName","displayName","companyId","jitsiHeight","setJitsiHeight","jitsiWidth","setJitsiWidth","actionComponent","setActionComponent","setTaskStageUUID","getTasksByInterviewUUID","client_id","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","AdminMeetingDrawer","openNotesModal","setOpenNotesModal","openTasksModal","setOpenTasksModal","closedView","List","ListItem","fontSize","input","inputAttributes","autocapitalize","showCancelButton","Drawer","clsx","NotesMenuWrapper","setNotes","AssignTasksWrapper","setOrganizationTasks","setAlreadyAssignedTasks","MeetingDisplayNameForm","setName","mt","mb","onSubmit","MeetingDisplayName","shouldDisplay","shouldDisplayForm","setShouldDisplayForm","onNameFormSubmit","Meeting","Fetched","FilesDropzone","onDrop","useDropzone","isDragActive","getRootProps","getInputProps","paddingTop","paddingBottom","jobSeekerAPI","formControl","minWidth","_arrayBufferToBase64","buffer","binary","bytes","len","byteLength","fromCharCode","btoa","SelectSavedFile","onSave","setFile","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","DialogActions","FileCard","index","handleDelete","paddingLeft","DeleteForeverOutlined","ApplyForm","setSurname","setEmail","setFiles","loadedFiles","setLoadedFiles","shouldValidateField","setShouldValidateField","validatedApply","validate","validateName","validateSurname","useCallback","acceptedFiles","all","arrayBuffer","newFiles","oldFiles","concat","handleDeleteFile","_","error","helperText","newFile","showDenyButton","denyButtonText","isDenied","SkillIndicator","fullCircleStyle","emptyCircleStyle","borderRadius","isFilled","OfferSkill","skillLevel","skills","enumerated","enumerateSkillLevel","getDotsOnSkillLevel","ListElementDetails","cardContent","maxHeight","SingleMenu","buttons","menuName","anchor","setAnchor","button","OfferDetails","getButtons","entries","reduce","groups","group","mr","ml","component","localization","skill","level","p","description","getCardContent","PickUpOffer","ProcessStage","APPLIED","HR_INTERVIEW","TASK","QUIZ","TECHNICAL_INTERVIEW","ENDED","ActiveFilter","lastLabelWord","avatar","Filter","onFilterSubmitted","reloadItems","InDrawerFilter","InDrawerFilterProps","setFilters","toggleDrawer","handleFilterDelete","newFilters","ModalProps","onBackdropClick","transitionDuration","Sorter","onSort","element","setElement","clickable","handleItemClick","SorterWrapper","setLabel","elem","propTypes","PropTypes","isRequired","ColumnAndDetailsLayout","details","list","StandardViewAndFilterLayout","sorter","EStellaSlider","getValue","setValue","onValueChanged","getMaxValue","max","getMinValue","min","handleInputBlur","Slider","newValue","valueLabelDisplay","getAriaValueText","step","onBlur","fixedItems","sliderValue","setSliderValue","companyValue","setCompanyValue","positionValue","setPositionValue","getMinOffersSalary","getMaxOffersSalary","companyOptions","positionOptions","screen","calculateWidth","bottom","OffersView","selectedOffer","setSelectedOffer","fetchError","setFetchError","fetching","setFetching","fixedOffers","setFixedOffers","setSort","handleFilterSubmitted","getOffers","NaN","UnauthenticatedPage","withUserAuth","permittedTypes","hrOfferButtons","go","ApplicationsList","applications","onSelectedApplication","forDev","applicationData","application","jobSeeker","EmptyFilterApplicationsView","secondaryTail","ApplicationTimeline","stages","currentStageId","isBeforeCurrent","getTimelineContent","elevation","getDotColor","stageId","toUpperCase","Timeline","align","displayConnector","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","getTimelineItem","FileViewerWrapper","undecodedFile","applicationsAPI","devMails","processAPI","getProcessById","getAllPossibleStages","updateProcessStages","changeEndDate","date","preparedDate","this","prepareDate","changeStartDate","startProcess","getDate","getMonth","getFullYear","ApplicationDetails","isHR","isDev","rejectApplication","cancelButtonText","nextStage","nextStageRequiresDevs","devsMails","trim","doSetNextStage","nextStageIsOneOf","types","checkForNext","indexOfNextStage","findIndex","getDisabled","teleportToMO","offerName","applicationDate","seekerFiles","DevApplicationDetails","devApplication","openAssignTasks","setOpenAssignTasks","assignTask","EmptyApplicationsView","Image","CustomSwitch","checked","setChecked","getName","FormGroup","row","FormControlLabel","control","Switch","ApplicationsInDrawerFilter","possibleStages","statuses","acc","toggledStages","setToggledStages","toggledApplicationStatuses","setToggledApplicationStatuses","tagsOptions","setTagsOptions","onTagAdd","onRemoveTag","onOperatorChange","currentTags","possibleFilters","handleStateChange","isToggled","toggle","toggled","FilterCard","TagsFilter","RadioButtons","FormLabel","RadioGroup","Radio","NotesDrawer","ApplicationsView","getApplications","mailInBase64","selectedApplication","setSelectedApplication","setApplications","selectedApplicationNotes","setSelectedApplicationNotes","fixedApplications","setFixedApplications","areFiltersValid","getNotesDrawerAnchor","getNotesDrawerStyle","getSelectedApplicationId","getFilterView","getStandardView","innerApplications","fixedInnerApplications","mapApplicationForDev","FormField","additionalGridProps","field","fieldState","additionalTextFieldProps","OfferFormSkillList","defaultFormState","useForm","defaultValues","reset","rules","required","s","defaultValue","form","lg","onSkillDelete","OfferForm","mode","watch","trigger","updateOffer","formResult","parseInt","creatorId","autoComplete","pattern","multiline","minRows","maxRows","ManageStages","processId","setStages","setPossibleStages","finally","getStages","firstListItems","secondListItems","forbiddenIndexes","warningFunction","itemRender","onFirstListChange","leftSubmitGridProps","centerSubmitGridProps","rightSubmitGridProps","materialButtonProps","submitDivStyle","listStyle","EStellaDatePicker","divStyle","additionalProps","selectedDate","handleDateChange","utils","DateFnsUtils","format","ManageDate","processStartDate","Dates","endDate","toLocaleDateString","selectedEndDate","setSelectedEndDate","startDate","selectedStartDate","setSelectedStartDate","isProcessStarted","ManageProcess","setProcess","showHelp","ManageProcessInside","LoginForm","UserRegistration","CompanyRegistration","RegistrationRadioButtons","RegistrationRouting","setRender","getRegistrationForm","MeetingOrganizerWrapper","propType","paramType","outsideValues","setOutsideValues","userData","setUserData","hosts","guest","meetingOrganizerBaseLink","outsideJwt","drawerStyle","outsideMeetingValues","marginWithDrawer","HrOffersView","_base64ToArrayBuffer","binary_string","FilesChangedTip","onSaveFiles","OldFilePaper","NewFilePaper","initialFiles","handleDownload","ch","GetAppOutlined","FilesPage","downloadedFiles","setDownloadedFiles","downloadedFilesSet","filesSet","filesChanged","df","has","f","fetchFiles","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","alignContent","UserInfo","displayType","ProfilePage","userAPI","personalData","passwordRequest","EditPersonalInfoForm","EditPasswordForm","oldPassword","newPassword","repeatedPassword","newPasswordInput","RegExp","SettingsPage","TabPanel","tabName","other","role","hidden","a11yProps","root","indicator","SettingsOverlay","React","subPage","clone","order","dir","Tabs","orientation","indicatorColor","textColor","Tab","organizationsAPI","PartnerForm","users","setUsers","userAdded","u","OrganizationPartner","OrganizationPartnerList","onUserDelete","OrganizationPartnersManagement","el","updateUsers","SingleTestCase","testCase","testData","expectedResult","SingleResult","passed","SingleTaskReview","results","tests","decodedResults","decodedTestCases","setHeight","ref","useRef","current","clientHeight","language","readOnly","TasksCarousel","infiniteLoop","ReviewTask","FileUpload","uploaded","setUploaded","cursor","AddDescription","textEditor","mdEditor","fileEditor","editor","setEditor","labelPlacement","Form","addTestCase","setTestCase","output","AddCircleOutlined","ManualTestsCases","testCases","setTestCases","preparedTestCase","testCaseId","handleAddTestCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AddTests","setView","fileUploader","manualView","minHeight","clearTask","handleMarkdownChange","handleTextChange","handleFileChangeDescription","handleFileChange","handleFileChangeTests","substring","basicSwal","confirmButtonColor","allowOutsideClick","MySwal","withReactContent","handleManualTestsChange","createTests","createTimeLimit","TasksList","createTask","DevView","ListItemIcon","ListItemText","createRoute","path","getRoutes","routes","route","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e720ce5b.chunk.js","sourcesContent":["\nexport const decodeBase64 = (base64) => new Buffer(base64, \"base64\").toString('ascii')\n\nexport const encodeBase64 = (string) => new Buffer(string).toString('base64')\n\n","export const constants = {\n    navbar_height: \"60px\"\n}","export const tokenPayloadSchema = {\n    firstName: (value) => typeof value === 'string',\n    lastName: (value) => typeof value === 'string',\n    userType: (value) => value === 'job_seeker' || value === 'hr' || value === 'organization',\n    mail: (value) => typeof value === 'string',\n    iss: (value) => typeof value === 'string' && !isNaN(Number(value)),\n    iat: (value) => typeof value === 'number' && value % 1 === 0,\n    exp: (value) => typeof value === 'number' && value % 1 === 0\n}","// export const recruitmentServiceBasicAPILink = \"http://localhost:8080\"\nexport const recruitmentServiceBasicAPILink = \"https://recruitment-service-estella.herokuapp.com\"\n\nexport const meetingOrganizerLink = \"https://meeting-organizer-estella.herokuapp.com/\"\n\nexport const codeCheckerLink = \"https://e-stella-code-executor.herokuapp.com\"\n","\n\nexport const headers = {\n    'Content-Type': 'application/json'\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {headers} from \"./headers\";\n\nexport const loginAPI = {\n    jwtTokenKey: \"x-jwt\",\n    authTokenKey: \"x-auth-token\",\n    refreshTokenKey: \"x-refresh-token\",\n\n    authTokenStorageKey: \"RS_AUTH_TOKEN\",\n    refreshTokenStorageKey: \"RS_REFRESH_TOKEN\",\n\n    login: function(login, password) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/users/login\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                mail: login,\n                password: password\n            })\n        }).then(response => {\n            jwtUtils.saveTokenFromResponse(response)\n            return response\n        })\n    },\n\n    registerUser: function(login, password, firstName, lastName) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/jobseekers\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: firstName,\n                lastName: lastName,\n                mail: login,\n                password: password\n            })\n        })\n    },\n\n    registerCompany: function(login, password, name) {\n        return fetch(recruitmentServiceBasicAPILink + \"/api/organizations\", {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                name,\n                mail: login,\n                password\n            })\n        })\n    }\n}","class HttpError extends Error {\n    constructor(code, message) {\n        super(message)\n        this.code = code\n    }\n}\n\nconst checkResponseStatusOrThrowError = (response, errorMessage) => {\n    const code = response.status\n    if(code < 200 || code > 299) {\n        throw new HttpError(code, errorMessage || \"Something went wrong\")\n    }\n}\n\nexport const checkedFetch = (url, data, errorMessage) => {\n    return fetch(url, data)\n        .then(response => {\n            checkResponseStatusOrThrowError(response, errorMessage)\n            return response\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {jwtUtils} from \"../jwt/jwtUtils\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const jwtAPI = {\n    refreshToken: (userId, refreshToken) =>\n        checkedFetch(\n            recruitmentServiceBasicAPILink + jwtUtils.refreshApiPath(userId),\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-jwt\": refreshToken\n                }\n            }\n        )\n}","import {validateSchema} from \"../schemas/validateSchema\";\nimport {tokenPayloadSchema} from \"../schemas/tokenPayloadSchema\";\nimport {loginAPI} from \"../apis/LoginAPI\";\nimport {jwtAPI} from \"../apis/JwtAPI\";\nimport Swal from \"sweetalert2\";\n\nexport const jwtUtils = {\n    jwtHeaderKey: \"x-jwt\",\n\n    getUser: () => {\n        const token = jwtUtils.getAuthToken()\n        const possiblyUser = jwtUtils.getPayload(token)\n\n        return jwtUtils.payloadToOptUser(possiblyUser)\n    },\n\n    getAuthToken: () => localStorage.getItem(loginAPI.authTokenStorageKey),\n    getRefreshToken: () => localStorage.getItem(loginAPI.refreshTokenStorageKey),\n\n    saveTokenFromResponse: (response) => {\n        localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey))\n        localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey))\n    },\n\n    deleteAuthToken: () => localStorage.removeItem(loginAPI.authTokenStorageKey),\n    deleteRefreshToken: () => localStorage.removeItem(loginAPI.refreshTokenStorageKey),\n\n    refreshApiPath: (userId) => {\n        if (userId !== undefined)\n            return `/api/users/${userId}/refreshToken`\n        else\n            return undefined\n    },\n\n    refreshToken: () => {\n        const userId = jwtUtils.getUser()?.userId\n        const refreshToken = jwtUtils.getRefreshToken()\n        if(userId && refreshToken)\n            return jwtAPI.refreshToken(userId, refreshToken)\n                .then(response => {\n                    localStorage.setItem(loginAPI.authTokenStorageKey, response.headers.get(loginAPI.authTokenKey));\n                    localStorage.setItem(loginAPI.refreshTokenStorageKey, response.headers.get(loginAPI.refreshTokenKey));\n                    return response;\n                })\n                .catch(() => {\n                    localStorage.removeItem(loginAPI.authTokenStorageKey)\n                    localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                    Swal.fire({\n                        text: \"Your session expired. We will take you to our login page!\",\n                        icon: \"warning\"\n                    })\n                    .then(() => {\n                        window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                        window.location.reload()\n                    })\n                })\n    },\n\n    tokenSplitter: (token) => {\n        if(typeof token === \"string\") {\n            const parts = token.split('.')\n            if(parts.length === 3){\n                return parts\n            } else return null\n        } else {\n            return null\n        }\n    },\n\n    getHeader: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[0]\n        ),\n\n    getPayload: (token) =>\n        jwtUtils.safeJsonRetrieve(\n            jwtUtils.tokenSplitter(token)?.[1]\n        ),\n\n    base64UrlToBase64: (base64Url) =>\n        base64Url?.replace('-', '+').replace('_', '/'),\n\n    decodeBase64Url: (base64Url) =>\n        atob(jwtUtils.base64UrlToBase64(base64Url)),\n\n    safeJsonRetrieve: (base64Url) => {\n        if(typeof base64Url === \"string\"){\n            try {\n                const decoded = jwtUtils.decodeBase64Url(base64Url)\n                return JSON.parse(decoded)\n            } catch {\n                return null\n            }\n        } else return null\n    },\n\n    payloadToOptUser: (payload) => {\n        if(validateSchema(payload, tokenPayloadSchema))\n            return {\n                userId: Number(payload.iss),\n                firstName: payload.firstName,\n                lastName: payload.lastName,\n                userType: payload.userType,\n                mail: payload.mail\n            }\n        else\n            return null\n    },\n\n    isTokenActive: (token) => {\n        const payload = jwtUtils.getPayload(token)\n        const issuedAt = payload?.iat\n        const expiresAt = payload?.exp\n        if(issuedAt && expiresAt){\n            const currentDate = Date.now()\n            return issuedAt <= currentDate && currentDate <= expiresAt\n        }\n        return null\n    }\n}\n","export const validateSchema = (obj, schema) => obj &&\n    Object\n        .keys(schema)\n        .every(\n                key => schema[key](obj[key])\n        )\n\n","import {jwtUtils} from \"../jwt/jwtUtils\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {loginAPI} from \"../apis/LoginAPI\";\n\nexport const useLoggedIn = () => {\n    const history = useHistory()\n    const [loggedIn, setLoggedIn] = useState(jwtUtils.getUser() != null)\n\n    const logout = () => {\n        localStorage.removeItem(loginAPI.authTokenStorageKey)\n        localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n        setLoggedIn(false)\n        history.push(\"/\")\n        window.location.reload()\n    }\n\n    const login = () => {\n        setLoggedIn(true)\n        window.location.reload()\n    }\n\n    return { loggedIn, login, logout }\n}","export const filterTypes = {\n    MIN_SALARY: \"Minumum Salary\",\n    MAX_SALARY: \"Maximum Salary\",\n    COMPANY_NAME: \"Company Name\",\n    POSITION_NAME: \"Position Name\",\n    //add more for applications\n    TAGS: \"Tags\",\n    APPLICATION_STAGE: \"Application Stage\",\n    PROCESS_STAGE: \"Recruitment Process Stage\"\n}\n\nexport const operators = {\n    AND: \"And\",\n    OR: \"Or\"\n}\n\nconst compare = (a, b, name) => {\n    if(a[name] < b[name]) return 1\n    if(a[name] > b[name]) return -1\n    return 0\n}\nexport const offerSort = [\n    {\n        name: \"Highest Salary\",\n        apply: offers => offers.sort((a, b) => compare(a, b, \"minSalary\"))\n    },\n    {\n        name: \"Lowest Salary\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"maxSalary\"))\n    },\n    {\n        name: \"Name\",\n        apply: offers => offers.sort((a, b) => -compare(a, b, \"name\"))\n    }\n]\n\nexport const userTypes = {\n    JOB_SEEKER: \"job_seeker\",\n    HR: \"hr\",\n    ORGANIZATION: \"organization\"\n}\n\nexport const userMenuTabs = {\n    PROFILE: \"profile\",\n    SETTINGS: \"settings\",\n    FILES: \"files\"\n}\n\nexport const applicationStatus = {\n    IN_PROGRESS: \"In progress\",\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\"\n}","import React, {useState} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport {userTypes} from \"../../utils/Enums\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {deepOrange, deepPurple} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    purple0: {\n        backgroundColor: deepPurple[300],\n        color: theme.palette.getContrastText(deepPurple[300])\n    },\n    purple1: {\n        backgroundColor: deepPurple[200],\n        color: theme.palette.getContrastText(deepPurple[100])\n    },\n    pink0: {\n        backgroundColor: \"#b53387\",\n        color: theme.palette.getContrastText(\"#b53387\")\n    },\n    green0: {\n        backgroundColor: \"#0c4f06\",\n        color: theme.palette.getContrastText(\"#0c4f06\")\n    },\n    red0: {\n        backgroundColor: \"#de2618\",\n        color: theme.palette.getContrastText(\"#de2618\")\n    },\n    red1: {\n        backgroundColor: \"#9c0a00\",\n        color: theme.palette.getContrastText(\"#9c0a00\")\n    },\n    orange0: {\n        backgroundColor: deepOrange[500],\n        color: theme.palette.getContrastText(deepOrange[500])\n    },\n    orange1: {\n        backgroundColor: deepOrange[300],\n        color: theme.palette.getContrastText(deepOrange[300])\n    },\n    orange2: {\n        backgroundColor: deepOrange[200],\n        color: theme.palette.getContrastText(deepOrange[200])\n    },\n}))\n\nexport default function UserMenu(props) {\n    const styles = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [direction, setDirection] = useState(null);\n    const [open, setOpen] = useState(false);\n    const {logout} = useLoggedIn()\n\n    const user = jwtUtils.getUser()\n\n    const colors = Object.values(styles)\n\n    const stringToColor = (string) => {\n        let hash = 0;\n\n        for (let i = 0; i < string.length; i += 1) {\n            hash = (string.charCodeAt(i) + ((hash << 5) - hash)) % 100;\n        }\n\n        return colors[hash % colors.length];\n    }\n\n    const userAvatar = (user) => {\n        return {\n            className: stringToColor(user.firstName+user.lastName+user.mail),\n            children: `${user.firstName[0] || user.lastName[0] || user.mail[0] || \"\"}`,\n        };\n    }\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChoice = (direction) => {\n        setAnchorEl(null);\n        setDirection(direction);\n    };\n\n    const redirect = (direction) => {\n        return <Redirect to={direction} />\n    }\n\n    return user && <>\n        {direction ? <>\n            {redirect(direction)}\n            <UserMenu {...props} />\n        </> : <div style={props.style}>\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n                <IconButton style={props.style} onClick={handleClick}>\n                    <Avatar {...userAvatar(user)} />\n                </IconButton>\n            </Box>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper>\n                        <MenuList\n                            id=\"user-menu\"\n                            open={Boolean(anchorEl)}\n                        >\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/offers\")}>\n                                Company's offers\n                            </MenuItem>}\n                            {user.userType === userTypes.ORGANIZATION && <MenuItem onClick={() => handleChoice(\"/organization/users\")}>\n                                Company's partners\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers\")}>\n                                My offers\n                            </MenuItem>}\n                            {user.userType === userTypes.HR && <MenuItem onClick={() => handleChoice(\"/hr/offers/add\")}>\n                                Create offer\n                            </MenuItem>}\n                            {user.userType === userTypes.JOB_SEEKER && <MenuItem onClick={() => handleChoice(\"/user/applications\")}>\n                                My applications\n                            </MenuItem>}\n                            <MenuItem onClick={() => handleChoice(\"/settings\")}>My profile & settings</MenuItem>\n                            <MenuItem onClick={() => {\n                                handleChoice(\"/\")\n                                logout()\n                            }}>Logout</MenuItem>\n                        </MenuList>\n                    </Paper>\n                </ClickAwayListener>\n            </Popover>\n        </div>}\n    </>\n}","import {AppBar, Button, Toolbar, Typography, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../utils/constants\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../utils/hooks/useLoggedIn\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nexport const Navbar = () => {\n\n    const {loggedIn} = useLoggedIn()\n    const theme = useTheme()\n\n    return (<AppBar position=\"sticky\" style={{\n        background: theme.palette.primary.dark,\n        height: `${constants.navbar_height}`,\n        zIndex: theme.zIndex.drawer + 1\n    }}>\n        <Toolbar>\n            <div style={{marginTop: '-5px'}}>\n                <Link to=\"/\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <img src=\"https://imgur.com/5LUwfu8.png\" alt=\"logo\" width=\"30%\" />\n                </Link>\n            </div>\n            <div style={{marginLeft: '-30%'}}>\n                <Link to=\"/offers\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\">All Offers</Button>\n                </Link>\n            </div>\n            <div style={{marginRight: '1%', marginLeft: 'auto'}}>\n            {loggedIn ? <UserMenu /> : <div style={{marginLeft: \"auto\"}}>\n                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"loginButton\">Login</Button>\n                </Link>\n                <Link to=\"/register\" style={{color: \"white\", textDecoration: \"none\"}}>\n                    <Button color=\"inherit\" id=\"registerButton\">Register</Button>\n                </Link>\n            </div>}\n            </div>\n        </Toolbar>\n    </AppBar>)\n}\n\nexport default Navbar","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n    zIndex: {\n        drawer: 1000\n    },\n    status: {\n        danger: {\n            main: '#d32f2f',\n            light: '#ff6659'\n        },\n        success: {\n            main: '#388e3c',\n            light: '#6abf69'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#4c4fae'\n        },\n        secondary: {\n            main: '#54C1FB'\n        },\n        background: {\n            main: '#ffffff',\n            dark: '#272848'\n        },\n        card: {\n            main: '#d7d7d7',\n            light: '#e5e5e5',\n            dark: '#d3d3d3',\n            background: '#ffffff'\n        },\n        focused: {\n            light: '#8ff4ff',\n            main: '#54C1FB',\n            dark: '#0091c8'\n        }\n    }\n})","export default __webpack_public_path__ + \"static/media/landing_page_image1.723a56b4.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image2.ef5c1d20.png\";","export default __webpack_public_path__ + \"static/media/landing_page_image3.e23f3674.png\";","import {filterTypes, operators} from \"./Enums\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n}\n\nexport const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase())\n}\n\nexport const getFilterValueByType = (filters, filterType) =>\n    filters?.find(filter => filter.type === filterType)?.value\n\nconst createFilterFunction = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return (arg) => arg.minSalary >= filter.value\n        case filterTypes.MAX_SALARY:\n            return (arg) => arg.maxSalary <= filter.value\n        case filterTypes.COMPANY_NAME:\n            if (filter.value) {\n                return (arg) => arg.organization.name.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        case filterTypes.POSITION_NAME:\n            if (filter.value) {\n                return (arg) => arg.position.toLowerCase().includes(filter.value.toLowerCase())\n            } else {\n                return () => true\n            }\n        //add more for applications\n        case filterTypes.TAGS:\n            if (filter.value && filter.operator) {\n                const filterTags = filter.value.map(tag => tag.toLowerCase())\n                switch (filter.operator) {\n                    case operators.AND:\n                        return (arg) => arg.tags.length > 0 && filterTags.every(tag => arg.tags.map(innerTag => innerTag.toLowerCase()).includes(tag))\n                    case operators.OR:\n                        return (arg) => arg.tags.length > 0 && filterTags.some(tag => arg.tags.map(innerTag => innerTag.toLowerCase()).includes(tag))\n                    default:\n                        return () => true\n                }\n            } else {\n                return () => true\n            }\n        case filterTypes.APPLICATION_STAGE:\n            return filter.value ? (arg) => filter.value.includes(arg?.status) : () => true\n        case filterTypes.PROCESS_STAGE:\n            return filter.value ? (arg) => filter.value.includes(arg?.stage?.type) : () => true\n        default:\n            return () => true\n    }\n}\n\nexport const filterItems = (items, filters) => {\n    let tmpItems = items\n    filters.forEach(filter => {\n        tmpItems = tmpItems.filter(item => (createFilterFunction(filter))(item))\n    })\n    return tmpItems\n}\n\nexport const getIconFromFilterType = (filter) => {\n    switch (filter.type) {\n        case filterTypes.MIN_SALARY:\n            return <MonetizationOnIcon id={`min-filter-icon`} />\n        case filterTypes.MAX_SALARY:\n            return <MonetizationOnIcon id={`max-filter-icon`} />\n        case filterTypes.COMPANY_NAME:\n            return <BusinessIcon id={`company-filter-icon`} />\n        case filterTypes.POSITION_NAME:\n            return <PersonIcon id={`position-filter-icon`} />\n        default:\n            return null\n    }\n}","import {Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const ListElement = ({ data, selected, onClick, idx }) => {\n\n    const theme = useTheme()\n\n    const selectedStyle = selected ? {backgroundColor: theme.palette.focused.main} : {backgroundColor: theme.palette.card.background}\n\n    return(\n        <div style={{ width: \"100%\", marginBottom: \"1em\" }} onClick={() => onClick(data, idx)}>\n            <Card variant=\"outlined\" style={selectedStyle}>\n                <CardContent style={{marginBottom: \"1em\"}}>\n                    <Typography variant=\"h5\">\n                        {data.first}\n                    </Typography>\n                    <Divider />\n                    <div style={{marginTop: \"1em\"}}>\n                        <Typography style={{float: \"left\"}} color=\"textSecondary\">\n                            {data.second}\n                        </Typography>\n                        <Typography style={{float: \"right\"}}>\n                            {data.third}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nListElement.propTypes = {\n    data: PropTypes.object.isRequired,\n    selected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n}","import React, {useState} from \"react\";\nimport {constants} from \"../../../utils/constants\";\nimport {scrollToTop} from \"../../../utils/functions\";\nimport {ListElement} from \"./ListElement\";\n\nexport const ListWithSelection = ({listItems, extractData, limit, propsHandleSelect, isSelectable}) => {\n\n    const [selectedIdx, setSelectedIdx] = useState(-1)\n\n    const handleSelect = (item, idx) => {\n        if(isSelectable) {\n            setSelectedIdx(idx)\n            propsHandleSelect(item, idx)\n            scrollToTop()\n        }\n    }\n\n    const getListItems = () => {\n        return listItems\n            ?.filter((item, idx) => limit ? idx < limit : true)\n            ?.map((item, idx) => \n                (\n                    <ListElement key={idx} idx={idx} onClick={(item, idx) => handleSelect(item, idx)}\n                              selected={selectedIdx === idx} data={extractData(item)} /> \n                )\n            )\n    }\n\n    return (\n        <div style={{overflowY: 'scroll', height: `calc(100vh - 7em - ${constants[\"navbar_height\"]})`}}>\n            {getListItems()}\n        </div>\n    )\n\n}","import PropTypes from 'prop-types';\nimport {scrollToTop} from '../../../utils/functions';\nimport {ListWithSelection} from \"../../commons/layouts/ListWithSelection\";\nimport React from \"react\";\nimport {Grid, Typography} from '@material-ui/core'\n\nexport const OffersList = (props) => {\n\n    const offers = props.offers\n\n    const getData = (offer) => {\n        return {\n            first: offer.name,\n            second: `${offer.minSalary} - ${offer.maxSalary}`,\n            third: offer.position,\n            offer: offer\n        }\n    }\n\n    const handleShortOfferSelect = (offer) => {\n        if(props.onSelectedOffer) {\n            props.onSelectedOffer(offer)\n            scrollToTop()\n        }\n    }\n\n    const getView = () => offers.length > 0 ?\n    (<ListWithSelection\n        listItems={offers}\n        extractData={getData}\n        limit={props.limit}\n        propsHandleSelect={(offer, idx) => handleShortOfferSelect(offer.offer, idx)}\n        isSelectable={!!props.onSelectedOffer}\n    />)\n    : \n    (<Grid container style={{height: '80vh', border: \"1px solid #eee\", padding: '2em', width: '100%'}} spacing={2} direction=\"column\">\n        <Grid item>\n            <img src=\"https://thumbs.dreamstime.com/b/job-offer-application-letter-response-career-opportunity-business-proposition-recruitment-agreement-man-receives-employment-188064915.jpg\"        \n                width=\"80%\"\n            />\n        </Grid>\n        <Grid item>\n            <Typography variant=\"h4\" style={{marginBottom: '3px'}}>No open offers!</Typography>\n            <Typography color=\"textSecondary\"> We're sorry but curently there are no offers that you can apply to. </Typography>\n        </Grid>\n    </Grid>)\n\n\n    return getView() \n    \n}\n\nOffersList.propTypes = {\n    limit: PropTypes.number,\n    onSelectedOffer: PropTypes.func,\n    offers: PropTypes.array.isRequired\n}\n\nOffersList.defaultProps = {\n    limit: 3\n}","import {jwtUtils} from \"./jwt/jwtUtils\";\nimport {loginAPI} from \"./apis/LoginAPI\";\nimport {checkedFetch} from \"./chekedFetch\";\nimport Swal from \"sweetalert2\";\n\nexport const authFetch = (url, data, errorMessage) => {\n    const authToken = jwtUtils.getAuthToken()\n    const dataHeaders = data?.headers\n    const authHeaders = authToken ? {[loginAPI.jwtTokenKey]: authToken} : {}\n    const newHeaders = dataHeaders ? Object.assign(dataHeaders, authHeaders) : authHeaders\n    const authData = Object.assign(data || {}, {headers: newHeaders})\n    return checkedFetch(url, authData, errorMessage)\n        .catch(httpError => {\n            if(httpError.code === 401)\n                jwtUtils.refreshToken().then(() => {\n                    authData.headers[loginAPI.jwtTokenKey] = jwtUtils.getAuthToken()\n                    return checkedFetch(url, authData, errorMessage)\n                        .catch(httpError => {\n                            if(httpError.code === 401) {\n                                localStorage.removeItem(loginAPI.refreshTokenStorageKey)\n                                localStorage.removeItem(loginAPI.authTokenStorageKey)\n                                Swal.fire({\n                                    text: \"Your session expired. We will take you to our login page!\",\n                                    icon: \"warning\"\n                                })\n                                .then(() => {\n                                    window.history.pushState({urlPath: \"/#/login\"}, \"\", \"/#/login\")\n                                    window.location.reload()\n                                })\n                            } else {\n                                throw httpError\n                            }\n                        })\n                })\n            else {\n                throw httpError\n            }\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\"\nimport {headers} from \"./headers\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const offersAPI = {\n    getOfferById: function(offerId){\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerId}`)\n            .then(response => response.json())\n    },\n\n    getAllOffers: function(forCandidate = false){\n        const queryParam = forCandidate ? \"?only_started=true\" : \"\"\n        return checkedFetch(recruitmentServiceBasicAPILink + \"/api/offers\" + queryParam)\n            .then(response => response.json())\n    },\n\n    applyWithNoUser: function (offerId, name, surname, email, files=[]) {\n        return fetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerId}/no-user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                firstName: name,\n                lastName: surname,\n                mail: email,\n                files: files\n            })\n        })\n    },\n\n    create: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    update: function (offerData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${offerData.offerId}`, {\n            method: \"PUT\",\n            headers: headers,\n            body: JSON.stringify(offerData)\n        })\n    },\n\n    applyWithUser: function(offerID, files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/apply/${offerID}/user`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                files: files\n            })\n        })\n    },\n\n    getOffersFromHr() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/offers`, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n    },\n\n    getOffersFromOrganization() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/offers`, {\n            method: \"GET\"\n        }).then(response => response.json())\n    },\n\n    deleteOffer(id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/offers/${id}`, {\n            method: \"DELETE\",\n            headers: headers\n        })\n    }\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst CenteredCircularProgress = (props) =>\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"2em\"}}>\n        <CircularProgress {...props} />\n    </div>\n\nexport default CenteredCircularProgress","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport Image1 from '../../assets/landing_page_image1.png';\nimport Image2 from '../../assets/landing_page_image2.png';\nimport Image3 from '../../assets/landing_page_image3.png';\nimport {OffersList} from \"../offers/list/OffersList\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userTypes} from \"../../utils/Enums\";\nimport Swal from \"sweetalert2\";\n\nconst LandingOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        offersAPI.getAllOffers(true)\n            .then(data => setOffers(data || []))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers!\",\n                    icon: \"error\"\n                })\n            })\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Latest Offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/offers/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/offers')}>\n            See more!\n        </Button>\n    </>\n}\n\nconst LandingHrOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() => {\n        return offersAPI\n            .getOffersFromHr()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    }, [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList onSelectedOffer={(selected) => history.push(`/hr/offers/view/${selected.id}`)}\n                        limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/hr/offers')}>\n            Go to your offers\n        </Button>\n    </>\n}\n\nconst LandingOrganizationOffers = () => {\n    const history = useHistory()\n    const [offers, setOffers] = useState(null)\n\n    useEffect(() =>\n        offersAPI\n            .getOffersFromOrganization()\n            .then(data => setOffers(data || []))\n            .catch(() => Swal.fire({\n                title: \"Error\",\n                text: \"We weren't able to get offers!\",\n                icon: \"error\"\n            }))\n    , [])\n\n    return offers == null ? <CenteredCircularProgress size={60} /> : <>\n        <Typography variant=\"h6\" style={{marginBottom: \"1em\", textAlign: \"right\"}}>\n            Your recently created offers\n        </Typography>\n        <div style={{height: \"60vh\", overflowY: \"hidden\"}}>\n            <OffersList limit={3}\n                        offers={offers}/>\n        </div>\n        <Button fullWidth variant=\"outlined\" onClick={() => history.push('/organization/offers')}>\n            Go to organization's offers\n        </Button>\n    </>\n}\n\nconst LandingList = () => {\n    const userType = jwtUtils.getUser()?.userType\n\n    switch (userType) {\n        case userTypes.HR:\n            return <LandingHrOffers />\n        case userTypes.ORGANIZATION:\n            return <LandingOrganizationOffers />\n        default:\n            return <LandingOffers />\n    }\n}\n\nexport const LandingPage = () => <Grid container spacing={2} style={{width: \"90%\", margin: \"auto\"}}>\n    <Grid item xs={12} md={8}>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <img src=\"https://imgur.com/5LUwfu8.png\" alt=\"logo\" width=\"30%\" style={{marginTop: '-7px'}} />\n            <Typography variant=\"h4\">\n                Everything you'll ever need\n            </Typography>\n        </div>\n        <Grid container style={{marginTop: \"2em\"}} spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <img src={Image1} alt=\"Man working in office\" style={{width: \"100%\"}}/>\n            </Grid>\n            <Grid container item xs={12} sm={6} direction=\"column\" spacing={1}>\n                <Grid item>\n                    <img src={Image2} alt=\"Couple working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n                <Grid item>\n                    <img src={Image3} alt=\"Woman working in office\" style={{width: \"48%\"}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n    <Grid item xs={12} md={4}>\n        <LandingList />\n    </Grid>\n</Grid>\n","import {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\"\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\n\nexport const interviewAPI = {\n\n    getJobSeekerNameByInterviewId : (interviewId) => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/jobseeker/${interviewId}`).then(response => response.json()),\n\n    getNewestInterviewId: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNewestInterview: applicationId => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/interview/newest/${applicationId}/interview`, {}, \"Couldn't find interview for this application\")\n            .then(response => response.json())\n    },\n\n    getNotesByInterviewId: (interviewId, password) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?interview_note=${interviewId}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': password\n            }\n        }).then(response => response.json())\n    },\n\n    getInterviewObjectById: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/interview/${interviewId}`)\n        .then(response => response.json()),\n\n    getTaskStageUUIDByInterviewId: interviewId => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages/byInterview/${interviewId}`)\n        .then(response => response.json())\n}","import {Action, Fab} from \"react-tiny-fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useTheme} from \"@material-ui/core\";\n\nexport const MeetingFab = (props) => {\n\n    const theme = useTheme()\n\n    return(\n        <Fab\n            mainButtonStyles={{backgroundColor: theme.palette.primary.dark}}\n            icon={<AddIcon />}\n            event={'click'}\n        >\n            <Action\n                text=\"Default View\"\n                onClick={props.onDefaultView}\n            >\n                <VoiceChatIcon />\n            </Action>\n            <Action\n                text=\"Whiteboard\"\n                onClick={props.onWhiteboard}\n            >\n                <DashboardIcon />\n            </Action>\n            <Action\n                text=\"Task\"\n                onClick={props.onTask}\n            >\n                <AssignmentIndIcon />\n            </Action>\n        </Fab>\n    )\n}","export const convertFileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = err => reject(err)\n    })\n}\n\nexport const b64toBlob = (b64Data, contentType='', sliceSize=512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n\n    return new Blob(byteArrays, {type: contentType});\n}","import MarkdownIt from \"markdown-it\";\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownViewer = ({ markdown }) => {\n\n    let parsed = mdParser.render(markdown)\n\n    return (\n        <div dangerouslySetInnerHTML={{__html:parsed}} />\n    )\n}","import PropTypes from 'prop-types'\nimport {makeStyles, Modal} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport {b64toBlob} from \"../../utils/apis/files\";\nimport {MarkdownViewer} from \"./MarkdownViewer\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport const GenericFileViewer = ({ file, open, handleClose }) => {\n\n    const classes = useStyles()\n\n    const [txt, setTxt] = useState(null)\n\n    useEffect(() => {\n        if(file?.fileName?.indexOf('txt') !== -1) {\n            new File([b64toBlob(file.fileBase64)], file.fileName).text()\n                .then(result => setTxt(result))\n        }\n    }, [file])\n\n    const decodeFile = () => {\n        return atob(file.fileBase64)\n    }\n\n    const getViewer = () => {\n        switch (true) {\n            case file.fileName.indexOf('md') !== -1:\n                return <MarkdownViewer markdown={decodeFile()} />\n            case file?.fileName?.indexOf('pdf') !== -1:\n                return <iframe title=\"File\" src={`data:application/pdf;base64,${file?.fileBase64}`} height=\"100%\" width=\"100%\"/>\n            case file?.fileName?.indexOf('txt') !== -1:\n                return txt\n            default:\n                return null\n        }\n    }\n\n    return (\n        <Modal open={open}\n               onClose={handleClose}\n        >\n            <div style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"50%\", height: \"60%\", marginTop: \"5em\"}} className={classes.paper}>\n                {open && getViewer()}\n            </div>\n        </Modal>\n    )\n}\n\nGenericFileViewer.propTypes = {\n    file: PropTypes.shape({\n        fileName: PropTypes.string.isRequired,\n        fileBase64: PropTypes.string.isRequired\n    })\n}","import {decodeBase64} from \"../../utils/hooks/Base64\"\n\nexport const getFirstLineFromTaskDescription = (descriptionInBase64) => {\n    const description = decodeBase64(descriptionInBase64)\n\n    const firstLine = description.split('\\n')[0]\n\n    return JSON.stringify(firstLine).replace( /\\W/g , '')\n}","import {Button, Card, CardContent, Divider, IconButton, Menu, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {GenericFileViewer} from \"../../commons/GenericFileViewer\";\nimport {getFirstLineFromTaskDescription} from \"../tasksUtils\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport const Task = ({task, tasksOperations, shouldDisplayMenu}) => {\n\n    const [open, setOpen] = useState(false)\n    const [menuAnchor, setMenuAnchor] = useState(null)\n\n    const menuClose = () => {\n        setMenuAnchor(null)\n    }\n\n    return (\n        <Card style={{padding: '1em'}}>\n        {   shouldDisplayMenu &&\n            <div style={{float: 'right'}}>\n                <IconButton onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                    <MoreHorizIcon/>\n                </IconButton>\n            </div>\n        }\n            <CardContent>\n                <Typography variant=\"h5\">{ getFirstLineFromTaskDescription(task.descriptionBase64) }</Typography>\n                <Typography variant=\"subtitle\" color=\"textSecondary\">Time limit: {task.timeLimit}</Typography>\n                <Divider style={{marginTop: '1em', marginBottom: '1em'}}/>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setOpen(true)}>Show Description</Button>\n                <GenericFileViewer file={{fileBase64: task.descriptionBase64, fileName: task.descriptionFileName}}\n                                   open={open} handleClose={() => setOpen(false)}/>\n            </CardContent>\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={!!menuAnchor}\n                onClose={menuClose}\n            >\n                {tasksOperations.map(taskOperation => <Button onClick={taskOperation.action}>{taskOperation.title}</Button>)}\n            </Menu>\n        </Card>\n    )\n}","import Swal from \"sweetalert2\";\n\nconst isStatus2xx = (status) => (Math.floor(status / 100) === 2)\n\nexport const withSwal = ({\n                             loadingTitle,\n                             promise,\n                             successSwalTitle,\n                             successSwalText,\n                             confirmButtonText,\n                             successFunction,\n                             errorSwalTitle,\n                             errorSwalText,\n                             errorConfirmButtonText\n                         }) => {\n    let swal = new Swal({\n        title: loadingTitle\n    })\n    Swal.showLoading()\n    promise()\n        .then(response => response.json().then(data => ({status: response.status, result: data})))\n        .then(({status, result}) => {\n            if (!isStatus2xx(status)) {\n                throw Error(result.message || \"Something went wrong!\")\n            }\n            swal.close()\n            Swal.fire({\n                title: successSwalTitle,\n                text: successSwalText || \"\",\n                icon: \"success\",\n                confirmButtonText: confirmButtonText || \"OK\"\n            }).then(swalResult => {\n                if (swalResult.isConfirmed && successFunction) {\n                    successFunction(result)\n                }\n            })\n        })\n        .catch(err => {\n            swal.close()\n            Swal.fire({\n                title: errorSwalTitle,\n                text: errorSwalText || err,\n                icon: \"error\",\n                confirmButtonText: errorConfirmButtonText || \"OK\"\n            })\n        })\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from 'sweetalert2'\nimport {checkedFetch} from '../chekedFetch'\nimport {withSwal} from '../../components/commons/formsCommons/WithSwal'\n\n\n\nconst fallbackTask1 = { id: 41, descriptionBase64: 'IyBBbHBoYWJldA0KDQojIyBEZXNjcmlwdGlvbg0KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGZpcnN0IGxldHRlcnMgb2YgYWxwaGFiZXQuDQoNCiMjIEV4YW1wbGUNCmBgYA0KaW5wdXQ6IDUNCg0Kb3V0cHV0OiAiYWJjZGUiDQpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'Ww0KICB7DQogICAgInRlc3RDYXNlSWQiOiAxLA0KICAgICJ0ZXN0RGF0YSI6IDEsDQogICAgImV4cGVjdGVkUmVzdWx0IjogImEiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDIsDQogICAgInRlc3REYXRhIjogMiwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWIiDQogIH0sDQogIHsNCiAgICAidGVzdENhc2VJZCI6IDMsDQogICAgInRlc3REYXRhIjogNSwNCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYWJjZGUiDQogIH0NCl0=', timeLimit: 30 }\nconst fallbackTask2 = { id: 53, descriptionBase64: 'IyBBbHBoYWJldAoKIyMgRGVzY3JpcHRpb24KR2l2ZW4gYSBwb3NpdGl2ZSBudW1iZXIgX19uX18sIHByaW50IF9fbl9fIGBiYHMKCiMjIEV4YW1wbGUKYGBgCmlucHV0OiA0CgpvdXRwdXQ6ICJiYmJiIgpgYGA=', descriptionFileName: 'fakeTaskDescription.md', testsBase64: 'WwogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMSwKICAgICJ0ZXN0RGF0YSI6IDEsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYiIKICB9LAogIHsKICAgICJ0ZXN0Q2FzZUlkIjogMiwKICAgICJ0ZXN0RGF0YSI6IDIsCiAgICAiZXhwZWN0ZWRSZXN1bHQiOiAiYmIiCiAgfSwKICB7CiAgICAidGVzdENhc2VJZCI6IDMsCiAgICAidGVzdERhdGEiOiA1LAogICAgImV4cGVjdGVkUmVzdWx0IjogImJiYmJiIgogIH0KXQ==', timeLimit: 70 }\n\nexport const tasksApi = {\n\n    getTask: (processId) => {\n        if(processId){\n            Swal.showLoading()\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?process=${processId}`)\n                .then(response => {\n                    Swal.close() \n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    getTasksByOrganization: (organizationId, password) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationId}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': password\n            }\n        }).then(response => response.json())\n        .catch(err => {\n            Swal.close()\n            Swal.fire({\n                icon: 'error',\n                text: `We're sorry, but we couldn't fetch tasks from this organization.`\n            })\n        })\n    },\n\n    getTasks: (tasksStageId) => {\n        if (tasksStageId) {\n            return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${tasksStageId}`)\n                .then(response => {\n                    Swal.close()\n                    return response.json()\n                })\n                .catch(err => {\n                    Swal.close()\n                    return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n                })\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                icon: 'error',\n                text: `Looks like somebody didn't add a task but wants to solve one something, we've prepared a task for you though!`\n            })\n            return new Promise(resolve => resolve([fallbackTask1, fallbackTask2]))\n        }\n    },\n\n    codeCheckerLink: \"https://e-stella-code-executor.herokuapp.com\",\n\n    getNotesWithTasksByTaskUUID: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?task_note=${taskStageUUID}&with_tasks=true`, {\n            method: \"GET\",\n            headers: {\n                \"X-Dev-Password\": devPassword\n            }\n        })\n            .then(response => response.json())\n    },\n\n    getTasksFromOrganization: (organizationUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${organizationUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    getTasksFromTaskStage: (taskStageUUID, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?taskStage=${taskStageUUID}`, {\n            method: 'GET',\n            headers: {\n                'x-dev-password': devPassword\n            }\n        }).then(response => response.json())\n    },\n\n    updateTasks: (task, credentials, setReload) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?owner=${credentials.organizationId}`, {\n            method: 'POST',\n            headers: {\n                'x-dev-password': credentials.password,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n        withSwal({\n            loadingTitle: 'Updating Task',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    assignTasks: (tasksIds, password, setReload, key, keyValue) => {\n        const promise = () => checkedFetch(`${recruitmentServiceBasicAPILink}/api/taskStages?${key}=${keyValue}`, {\n            method: \"PUT\",\n            body: JSON.stringify({tasks: tasksIds}),\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': password\n            }\n        })\n        withSwal({\n            loadingTitle: 'Updating assigned tasks',\n            successSwalTitle: 'Task successfully assigned!',\n            promise,\n            successFunction: () => setReload(reload => !reload)\n        })\n    },\n\n    getTasksByInterviewId: (interviewId) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/tasks?interview=${interviewId}`, {\n            method: 'GET'\n        }).then(response => response.json())\n    }\n\n}","import {encodeBase64} from './Base64'\n\nexport const useDevPassword = () => {\n\n    const devPasswordKey = \"devPassword\"\n\n    const setDevPassword = (password) => sessionStorage.setItem(devPasswordKey, password)\n\n    const getDevPassword = () => sessionStorage.getItem(devPasswordKey)\n\n    const getEncodedDevPassword = () => {\n        const password = getDevPassword()\n        return password ? encodeBase64(password) : ''\n    }\n\n    return {getDevPassword, setDevPassword, getEncodedDevPassword}\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport {Button, Divider, Grid, GridList, GridListTile, Typography} from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Task} from './crud/Task'\nimport {tasksApi} from '../../utils/apis/tasksAPI'\nimport {useDevPassword} from '../../utils/hooks/useDevPassword'\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    paper: {\n      position: 'absolute',\n      width: '50%',\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n\nexport const AssignTasks = ({ modalOptions, alreadyAssignedTasks, organizationTasks, setReload, assignKey, assignUUIDValue }) => {\n\n    const classes = useStyles()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const onAssign = (task) => {\n        const tasksIds = alreadyAssignedTasks.map(assignedTask => assignedTask.id)\n        tasksApi.assignTasks([...tasksIds, task.id], getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    const onDeassign = (task) => {\n        const newTasksIds = alreadyAssignedTasks.filter(assignedTask => assignedTask.id !== task.id).map(task => task.id)\n        tasksApi.assignTasks(newTasksIds, getEncodedDevPassword(), setReload, assignKey, assignUUIDValue)\n    }\n\n    return (\n        <Modal\n            open={modalOptions.open}\n            onClose={modalOptions.onClose}\n            className={classes.modal}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            style={{zIndex: 1000}}\n        >\n            <Fade in={modalOptions.open}>\n                <div className={classes.paper} style={getModalStyle()}>\n                    \n                    <Section title=\"Tasks you've already assigned:\" tasks={alreadyAssignedTasks} empty=\"No one has assigned any tasks for this application\" actionTitle=\"Deassign\" action={onDeassign} />\n                    <Divider style={{margin: '1em 0'}} />\n                    <Section title=\"Tasks you can assign:\" tasks={organizationTasks} empty=\"Your organization doesn't have any task.\" actionTitle=\"Assign\" action={onAssign} />\n\n                    <ModalButtons handleClose={modalOptions.handleClose} />\n                </div>\n            </Fade>\n        </Modal>\n    )\n\n}\n\nAssignTasks.propTypes = {\n    modalOptions: PropTypes.exact({\n        open: PropTypes.bool.isRequired,\n        handleClose: PropTypes.func.isRequired\n    })\n}\n\nconst ModalButtons = ({ handleClose }) => {\n\n    return (<Grid container direction=\"row\">\n                <Grid item xs={5}>\n                    <Typography color=\"textSecondary\">To assign task, expand menu and click \"Assign\"</Typography>\n                </Grid>\n                <Grid item xs={2} />\n                <Grid item xs={5}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClose} fullWidth>Job Done!</Button>\n                </Grid>\n            </Grid>)\n}\n\nconst Section = ({ title, tasks, empty, action, actionTitle }) => {\n\n    return (<div style={{margin: '1em 0', overflow: 'hidden', width: '100%'}}>\n        <Typography variant=\"h6\" color=\"textSecondary\" style={{marginBottom: '5px'}}>{title}</Typography>\n            {\n                tasks?.length > 0 ?\n                    <GridList style={{flexWrap: 'nowrap'}} cols={2.5}>\n                        {tasks.map((task, idx) => <GridListTile key={task}><Task task={task} tasksOperations={[{ title: actionTitle, action: () => action(task) }]} shouldDisplayMenu /></GridListTile>)}\n                    </GridList> :\n                    <Typography>{empty}</Typography>\n            }\n    </div>)\n}","export const useKeyPress = (key, event, action) => {\n    if(event.key === key) {\n        action()\n        event.preventDefault()\n    }\n}\n\nexport const keys = {\n    Enter: \"Enter\"\n}","import {useState} from \"react\";\nimport {Button, Card, CardActions, CardContent, TextField, Typography} from \"@material-ui/core\";\nimport {keys, useKeyPress} from \"../../utils/hooks/useKeyPress\";\n\nexport const TasksPassword = ({ handleSubmit, text }) => {\n\n    const [password, setPassword] = useState(\"\")\n\n    const handleKeyPress = (event) => {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useKeyPress(keys.Enter, event, () => handleSubmit(password))\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: '40%', marginTop: '3em', marginLeft: 'auto', marginRight: 'auto', padding: '2em'}}>\n            <CardContent style={{marginBottom: '1em'}}>\n                <div style={{width: '60%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n                    <Typography variant=\"h6\">\n                        {text ?? 'We need to validate, who you are, so please, provide password from your mail:'}\n                    </Typography>\n                </div>\n                <TextField\n                    value={password}\n                    onChange={({target}) => setPassword(target.value)}\n                    variant=\"outlined\"\n                    label=\"Password from email\"\n                    fullWidth\n                    onKeyPress={handleKeyPress}\n                />\n            </CardContent>\n            <CardActions style={{width: '40%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Button onClick={() => handleSubmit(password)} variant=\"contained\" color=\"primary\" fullWidth>\n                    Go!\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import {useState} from 'react';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {useParams} from 'react-router-dom'\nimport {TasksPassword} from './TasksPassword';\n\nexport const WithDevPassword = ({ WrappedComponent, wrappedProps, createPassword, text }) => {\n\n    const params = useParams()\n    \n    const [password, setPassword] = useState(\"\")\n    const { setDevPassword, getDevPassword } = useDevPassword()\n\n    const handleSubmit = (password) => {\n        setDevPassword(createPassword(params.id, password))\n        setPassword(password)\n    }\n\n    return !!password || getDevPassword() ? <WrappedComponent {...wrappedProps} id={params.id} {...params} /> : <TasksPassword handleSubmit={handleSubmit} text={text}/>\n} \n\n","import PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const EStellaAutocomplete = ({ options, label, onChange }) => {\n\n    const handleChange = ({ target }) => {\n        onChange(target.value)\n    }\n\n    return (\n        <Autocomplete\n            options={options}\n            onSelect={handleChange}\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" label={label} />}\n        />\n    )\n}\n\nEStellaAutocomplete.propTypes = {\n    options: PropTypes.array.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}","import {Chip} from '@material-ui/core';\n\nexport const TagsList = ({ tags, deletable = false, onDelete = () => {} }) => {\n\n    const makeTag = (tag, idx) => {\n        const props = deletable ? {onDelete: () => onDelete(tag)} : {}\n        return (<Chip style={{margin: '10px'}} key={idx} label={tag} variant=\"outlined\" color=\"primary\" {...props} />)\n    }\n\n    return (\n        <div style={{display: 'flex', overflow: 'scroll'}}>\n            {tags.map((tag, idx) => makeTag(tag, idx))}\n        </div>\n    )\n}","import {Card, CardContent, Divider, Typography} from '@material-ui/core';\nimport {decodeBase64} from '../../utils/hooks/Base64'\nimport {TagsList} from './TagsList'\n\nexport const Note = ({ note }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{padding: '2em', width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n            <Typography variant=\"h6\" color=\"textSecondary\">{note.author}</Typography>\n            <TagsList tags={note.tags} />\n            <Divider />\n            <CardContent>\n                <Typography style={{whiteSpace:'pre-wrap'}}>{decodeBase64(note.text)}</Typography>\n            </CardContent>\n        </Card>\n    )\n}","import {Grid} from '@material-ui/core';\nimport {Note} from './Note';\n\nexport const NotesList = ({notes}) => {\n\n    return (\n        <Grid container>\n            {notes.map((note, idx) => (\n                <Grid item xs={12} style={{margin: '1em'}}>\n                    <Note note={note} key={idx} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\n\nconst mdParser = new MarkdownIt()\n\nexport const MarkdownEditor = ({ style, handleChange, view }) => {\n\n    const usableView = {menu: true, html: true, md: true, ...view}\n\n    return (\n        <MdEditor style={style || { height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleChange} view={usableView} />\n    )\n}\n","import {checkedFetch} from '../chekedFetch'\nimport {recruitmentServiceBasicAPILink} from './APILinks'\nimport { authFetch } from '../authFetch'\n\nexport const NoteApi = {\n\n    addNote: ({ key, paramId, note_body, dev_password }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'x-dev-password': dev_password,\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            }\n        })\n        \n    },\n\n    addNoteFromHr: ({ key, paramId, note_body }) => {\n        const param = key && paramId ? `?${key}=${paramId}` : ''\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/add_notes${param}`, {\n            method: 'PUT',\n            body: JSON.stringify({\"notes\": [note_body]}),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n    }\n\n}","import {Button, Card, CardActions, Divider, TextField, Typography, useTheme} from '@material-ui/core'\nimport {MarkdownEditor} from '../commons/MarkdownEditor'\nimport {useState} from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {TagsList} from './TagsList'\nimport '../../App.css';\nimport {useDevMail} from '../../utils/hooks/useDevMail';\nimport {encodeBase64} from '../../utils/hooks/Base64';\nimport {useDevPassword} from '../../utils/hooks/useDevPassword';\nimport {NoteApi} from '../../utils/apis/NoteApi';\nimport Swal from 'sweetalert2'\nimport {withSwal} from '../commons/formsCommons/WithSwal'\nimport { jwtUtils } from '../../utils/jwt/jwtUtils'\n\nexport const AddNote = ({ onCancel, uuid, uuid_key, setReload, shouldUseAuthFetchToPost }) => {\n\n    const theme = useTheme()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [noteText, setNoteText] = useState('')\n    const [tags, setTags] = useState([])\n    const [currentTag, setCurrentTag] = useState('')\n\n    const {getDevMail, setDevMail} = useDevMail()\n\n    const handleNoteTextChange = ({html, text}) => {\n        setNoteText(text)\n    }\n\n    const handleAddCurrentTag = () => {\n        setTags([...tags, currentTag])\n        setCurrentTag('')\n    }\n\n    const deleteTag = (tag) => {\n        setTags(tags.filter(item => item != tag))\n    }\n\n    const addNoteApiCall = (mail) => {\n        if (shouldUseAuthFetchToPost) {\n            return () => NoteApi.addNoteFromHr({\n                key: uuid_key,\n                paramId: uuid,\n                note_body: {\n                    author: mail,\n                    tags: tags,\n                    fileBase64: encodeBase64(noteText)\n                }\n            })\n        } else return () => NoteApi.addNote({\n            key: uuid_key,\n            paramId: uuid,\n            note_body: {\n                author: mail,\n                tags: tags,\n                fileBase64: encodeBase64(noteText)\n            },\n            dev_password: getEncodedDevPassword()\n        })\n    }\n\n    const doAddNote = (mail) => {\n        withSwal({\n            loadingTitle: 'Adding Note',\n            promise: addNoteApiCall(mail),\n            successSwalTitle: 'Note successfully added',\n            successFunction: () => {\n                setReload?.(reload => !reload)\n            }\n        })\n        setTags([])\n        setNoteText('')\n        onCancel()\n    }\n\n    const addNote = () => {\n        if (shouldUseAuthFetchToPost) {\n            const mail = jwtUtils.getUser().mail\n            doAddNote(mail)\n        } else {\n            addDevNote()\n        }\n    }\n\n    const addDevNote = () => {\n        const devMail = getDevMail()\n        if (!devMail) {\n            Swal.fire({\n                title: \"Missing informations!\",\n                html: 'Please, provide your mail, so everyone knows, who you are.<br /><input type=\"text\" id=\"mail\" class=\"swal2-input\" placeholder=\"Mail\">',\n                icon: 'warning',\n                preConfirm: () => {\n                    const mail = Swal.getPopup().querySelector('#mail').value\n                    if (!mail) {\n                        Swal.showValidationMessage(`Please enter your mail`)\n                    } else {\n                        setDevMail(mail)\n                    }\n                    return { mail }\n                }\n            }).then(result => {\n                doAddNote(result.value.mail)\n            })\n        } else {\n            doAddNote(devMail)\n        }\n    }\n\n    return (\n        <Card style={{marginLeft: 'auto', marginRight: 'auto', width: '80%', marginTop: '1em', padding: '1em', textAlign: 'left'}} variant='outlined'>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between', alignItems: 'base-line'}}>\n                <Typography style={{marginBottom: '10px'}}>Tags:</Typography>\n                <TagsList tags={tags} deletable onDelete={deleteTag} />\n            </div>\n\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>\n                <TextField label=\"Add Tag\" variant=\"outlined\" value={currentTag} style={{width: '90%'}} onChange={({target}) => setCurrentTag(target.value)} />\n                <Button onClick={handleAddCurrentTag}><AddCircleOutlineIcon color=\"action\" /></Button>\n            </div>\n\n            <Divider style={{margin: '1em 0'}} />\n\n            <Typography>Note:</Typography>\n            <MarkdownEditor handleChange={handleNoteTextChange} style={{height: '100px'}} view={{menu: false, html: false}}/>\n            \n            <CardActions>\n                <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', justifyContent: 'space-between', width: '100%'}}> \n                    <Button size=\"small\" onClick={onCancel} style={{ border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main, width: '40%' }} varient=\"outline\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addNote} size=\"small\" style={{ background: theme.palette.secondary.dark, color: theme.palette.background.main, width: '40%' }} variant=\"contained\">\n                        Add\n                    </Button>\n                </div>\n            </CardActions>\n        </Card>\n    )\n}","export const useDevMail = () => {\n\n    const devMailKey = \"devMail\"\n\n    const setDevMail = (mail) => sessionStorage.setItem(devMailKey, mail)\n\n    const getDevMail = () => sessionStorage.getItem(devMailKey)\n\n    return {getDevMail, setDevMail}\n\n}","import {constants} from \"../../utils/constants\";\nimport {Box, Button, Divider, Grid, Typography} from '@material-ui/core'\nimport {EStellaAutocomplete} from \"../EStellaAutocomplete\";\nimport {useState} from 'react';\nimport {NotesList} from './NotesList'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {AddNote} from './AddNote'\n\n\nexport const NotesMenu = ({ notes, uuid, uuid_key, reload, setReload, shouldUseAuthFetchToPost = false }) => {\n\n    const [tag, setTag] = useState('')\n    const [showAdd, setShowAdd] = useState(false)\n\n    const getDistinctTags = () => new Array(...new Set(notes.flatMap(note => note.tags)))\n\n    const getNotes = () => tag ? notes.filter(note => note.tags.includes(tag)) : notes\n\n    const addNote = () => {\n        setShowAdd(true)\n    }\n\n    return (\n        <div style={{marginTop: `calc(${constants.navbar_height} + 3em)`, textAlign: 'center'}}>\n            \n            <Grid container direction=\"row\">\n                <Grid item xs={11}>\n                    <Typography variant=\"h5\">\n                        Notes\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <Button onClick={addNote}><AddCircleOutlineIcon color=\"action\" /></Button>\n                </Grid>\n            </Grid>\n\n            { showAdd && <AddNote onCancel={() => setShowAdd(false)} uuid={uuid} uuid_key={uuid_key} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> }\n\n            <Divider style={{marginTop: '1em'}} />\n\n            <Box m={2}>\n                <EStellaAutocomplete options={getDistinctTags()} label={\"Search for tags\"} onChange={(value) => setTag(value)} />\n            </Box>\n\n            {notes?.length > 0 ? <NotesList notes={getNotes()} /> : 'Oh no, there are no notes yet!' }\n        </div>\n    )\n}","import {Realtime} from \"ably/browser/static/ably-commonjs.js\"\nimport {v4 as uuid} from 'uuid'\n\nconst ably = new Realtime({ key: process.env.REACT_APP_ABLY_KEY })\nconst id = uuid()\n\nexport const useAbly = (channelName) => {\n\n    const channel = ably.channels.get(channelName)\n    const pub = (data) => channel.publish('change', data, (err) => err ? console.log(err) : console.log(''))\n    const sub = (func) => channel.subscribe(func)\n\n    return { channel, pub, sub, clientId: id }\n\n}\n","import {codeCheckerLink} from \"../../utils/apis/APILinks\";\nimport {CodeEditor} from \"e-stella-code-editor\";\nimport React from \"react\";\nimport {useAbly} from \"../../utils/hooks/useAbly\";\n\nconst TaskWrapper = ({ toSolveTask = true, submitLeftOffset = 0, taskStageUUID,  task }) => {\n    const { pub, sub, clientId } = useAbly(`codeChanged/${taskStageUUID}/${task.id}`)\n\n    const fetchTasks = () => new Promise(resolve => resolve([task]))\n    const outerMonacoWrapperStyle = toSolveTask ? null : { height: '60vh' }\n\n    return <CodeEditor\n        codeCheckerBaseLink={codeCheckerLink}\n        fetchTasks={fetchTasks}\n        solverId={taskStageUUID}\n        absoluteOffset={{settings: { top: 0, right: 0 }, submit: {top: 0, left: submitLeftOffset}}}\n        outerMonacoWrapperStyle={outerMonacoWrapperStyle}\n        sharingCodeFunctions={{ pub, sub, id: clientId }}\n    />\n}\n\nexport default TaskWrapper","import {useParams} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {Carousel} from 'react-responsive-carousel';\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport TaskWrapper from \"./TaskWrapper\";\nimport {Button, Grid} from \"@material-ui/core\";\n\nexport const MultipleTasksWrapper = ({ id: propId, toSolveTask = true, submitLeftOffset = 0, fetchTasks }) => {\n\n    let { taskStageUUID } = useParams()\n\n    if(!taskStageUUID) taskStageUUID = propId\n\n    const [tasks, setTasks] = useState([])\n    const [isFetching, setIsFetching] = useState(true)\n\n    const [currentSlide, setCurrentSlide] = useState(0)\n\n    const prev = () => setCurrentSlide(state => state - 1)\n    const next = () => setCurrentSlide(state => state + 1)\n    const updateCurrentSlide = (index) => setCurrentSlide(index)\n\n    useEffect(() =>\n        fetchTasks(taskStageUUID).then(tasks => {\n            setTasks(tasks)\n            setIsFetching(false)\n        }),\n        [setIsFetching, setTasks, taskStageUUID]\n    )\n\n    const editors = tasks.map(task => <TaskWrapper\n        task={task}\n        taskStageUUID={taskStageUUID}\n        toSolveTask={toSolveTask}\n        submitLeftOffset={submitLeftOffset}\n    />)\n\n    const PrevButton = () => <Button\n        onClick={prev}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === 0}\n        fullWidth>Previous Task</Button>\n\n    const NextButton = () => <Button\n        onClick={next}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={currentSlide === tasks.length - 1}\n        fullWidth>Next Task</Button>\n\n    return isFetching ? <CenteredCircularProgress size={100} /> : <div>\n        <Grid style={{padding: '1em', backgroundColor: \"#1e1e1e\"}} container spacing={2}>\n            <Grid item xs={12} md={6}><PrevButton /></Grid>\n            <Grid item xs={12} md={6}><NextButton /></Grid>\n        </Grid>\n        <Carousel\n            showIndicators={false}\n            showArrows={false}\n            showStatus={true}\n            selectedItem={currentSlide}\n            onChange={ind => updateCurrentSlide(ind)}\n            statusFormatter={(curr, items) => `Task ${curr} of ${items}`}\n        >\n            {editors}\n        </Carousel>\n    </div>\n}","import {JitsiComponent} from \"e-stella-jitsi\";\nimport {MeetingFab} from \"./MeetingFab\";\nimport {useEffect, useState} from \"react\";\nimport {Whiteboard} from \"e-stella-whiteboard\";\nimport {AssignTasks} from \"../../tasks/AssignTasks\";\nimport {WithDevPassword} from \"../../tasks/WithDevPassword\"\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {NotesMenu} from '../../notes/NotesMenu';\nimport {Button, Divider, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\nimport {constants} from '../../../utils/constants'\nimport clsx from 'clsx';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Swal from \"sweetalert2\";\nimport {MultipleTasksWrapper} from \"../../tasks/MultipleTasksWrapper\";\n\nexport const JitsiWrapper = ({ admin, roomName, displayName, interviewId, companyId }) => {\n\n    const [jitsiHeight, setJitsiHeight] = useState('calc(100vh - 60px)')\n    const [jitsiWidth, setJitsiWidth] = useState('100%')\n    const [actionComponent, setActionComponent] = useState(null)\n    const [taskStageUUID, setTaskStageUUID] = useState(null)\n\n    useEffect(() => {\n        interviewAPI.getTaskStageUUIDByInterviewId(interviewId)\n            .then(data => setTaskStageUUID(data.taskStageUUID))\n    }, [interviewId, companyId])\n\n    const getWhiteboardCode = () => {\n        if (roomName.length < 15) return 'abcdefghijklmnopqrst'\n        return roomName\n    }\n    const addWhiteboard = () => {\n        setJitsiWidth('20%')\n        setJitsiHeight('calc(100vh - 60px)')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: 'calc(100vh-60px)'}}>\n                <Whiteboard\n                    client_id={process.env.REACT_APP_WHITEBOARD_KEY}\n                    code={getWhiteboardCode()}\n                />\n            </div>\n        )\n    }\n\n    const defaultView = () => {\n        setJitsiHeight('calc(100vh-60px)')\n        setJitsiWidth('100%')\n        setActionComponent(null)\n    }\n\n    const showTask = () => {\n        setJitsiWidth('20%')\n        setActionComponent(\n            <div style={{float: \"left\", width: '80%', height: '80vh', overflow: 'scroll'}}>\n                <MultipleTasksWrapper fetchTasks={getTasksByInterviewUUID} submitLeftOffset={'25%'} id={taskStageUUID}/>\n            </div>\n        )\n    }\n\n    const getTasksByInterviewUUID = () => tasksApi.getTasksByInterviewId(interviewId)\n\n    return (\n        <div>\n            {\n                admin &&\n                    <AdminMeetingDrawer interviewId={interviewId} companyId={companyId} />\n            }\n            <MeetingFab onWhiteboard={addWhiteboard} onDefaultView={defaultView} onTask={showTask}/>\n            <div style={{height: jitsiHeight, width: jitsiWidth, float: \"left\"}}>\n                <JitsiComponent admin={admin} roomName={roomName} displayName={displayName}/>\n            </div>\n            {actionComponent}\n        </div>\n    )\n}\n\n\nconst drawerWidth = 600;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\nconst AdminMeetingDrawer = ({ interviewId, companyId }) => {\n\n    const [openNotesModal, setOpenNotesModal] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [openTasksModal, setOpenTasksModal] = useState(false)\n\n    const { getDevPassword, setDevPassword } = useDevPassword()\n\n    const classes = useStyles()\n\n    const getNotesView = () => (\n        <WithDevPassword\n            WrappedComponent={NotesMenuWrapper}\n            wrappedProps={{\n                reload, setReload, interviewId\n            }}\n            createPassword={(id, password) => `${companyId}:${password}`}\n            text=\"Insert password\"\n        />\n    )\n\n    const doOpenTasksModal = () => {\n        if (getDevPassword()) {\n            setOpenTasksModal(true)\n        } else {\n            Swal.fire({\n                title: 'Provide your password from mail!',\n                input: 'text',\n                inputAttributes: {\n                    autocapitalize: 'off'\n                },\n                showCancelButton: true,\n                confirmButtonText: 'Submit'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    setDevPassword(`${companyId}:${result.value}`)\n                    setOpenTasksModal(true)\n                }\n            })\n        }\n    }\n\n    const closedView = (\n            <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`, display: 'flex', flexDirection: 'column'}}>\n                <ListItem>\n                    <Button onClick={() => setOpenNotesModal(true)}>\n                        <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                    </Button>\n                </ListItem>\n                    <Divider style={{margin: '1em 0'}} />\n                <ListItem>\n                    <Button onClick={() => doOpenTasksModal()}>\n                        <AssignmentIcon fontSize=\"large\" color=\"action\" />\n                    </Button>\n                </ListItem>\n            </List>\n    )\n\n    return (\n        <div>\n            {openNotesModal && (\n                <Button onClick={() => setOpenNotesModal(false)} style={{position:'absolute', top: '5em', left: '20px', zIndex: '10001'}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: openNotesModal,\n                    [classes.drawerClose]: !openNotesModal,\n                    })}\n                    classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: openNotesModal,\n                        [classes.drawerClose]: !openNotesModal,\n                    }),\n                    }}\n            >\n                {openNotesModal ? getNotesView() : closedView}\n                <AssignTasksWrapper openTasksModal={openTasksModal} setOpenTasksModal={setOpenTasksModal} interviewId={interviewId} organizationId={companyId} reload={reload} setReload={setReload} />\n            </Drawer>\n        </div>\n    )\n}\n\nconst NotesMenuWrapper = ({reload, setReload, interviewId}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        interviewAPI.getNotesByInterviewId(interviewId, getEncodedDevPassword())\n            .then(data => setNotes(data.notes))\n    }, [interviewId, reload])\n\n    return (\n        <NotesMenu\n            notes={notes}\n            uuid={interviewId}\n            uuid_key=\"interview_note\"\n            reload={reload}\n            setReload={setReload}\n        />\n    )\n}\n\nconst AssignTasksWrapper = ({openTasksModal, setOpenTasksModal, interviewId, organizationId, reload, setReload}) => {\n\n    const {getEncodedDevPassword} = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n\n    useEffect(() => {\n        if(devPassword) {\n        tasksApi.getTasksFromOrganization(organizationId, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksByInterviewId(interviewId)\n            .then(data => setAlreadyAssignedTasks(data))\n        }\n    }, [reload, organizationId, interviewId])\n\n    return (\n        <AssignTasks\n            modalOptions={{\n                open: openTasksModal,\n                handleClose: () => setOpenTasksModal(false)\n            }}\n            alreadyAssignedTasks={alreadyAssignedTasks}\n            organizationTasks={organizationTasks}\n            setReload={setReload}\n            assignKey=\"interview\"\n            assignUUIDValue={interviewId}\n        />\n    )\n}","import {useState} from \"react\";\nimport {Box, Button, TextField, Typography, useTheme} from \"@material-ui/core\";\n\nexport const MeetingDisplayNameForm = (props) => {\n\n    const theme = useTheme()\n\n    const [name, setName] = useState(\"\")\n\n    const handleClick = () => {\n        props.onSubmit(name)\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <Box mt={10} mb={5} style={{textAlign: \"left\", marginLeft: \"30%\"}}>\n                <Typography variant=\"h4\">\n                    One more step...\n                </Typography>\n            </Box>\n            <Box mb={5} m={2} style={{textAlign: \"left\", marginLeft: \"31%\", color: theme.palette.text.secondary}}>\n                <Typography variant=\"h5\">\n                    How should we call you?\n                </Typography>\n            </Box>\n            <Box mt={5} m={5}>\n                <TextField\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                    label=\"Your name\"\n                />\n            </Box>\n            <Box m={5}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit</Button>\n            </Box>\n        </div>\n    )\n}","import {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {MeetingDisplayNameForm} from \"./MeetingDisplayNameForm\";\nimport {useState} from \"react\";\n\nexport const MeetingDisplayName = ({ roomName, interviewId, companyId }) => {\n\n    const [shouldDisplayForm, setShouldDisplayForm] = useState({\n        shouldDisplay: true,\n        name: \"\"\n    })\n\n    const getAdminDisplayer = () => {\n        return shouldDisplayForm.shouldDisplay ? <MeetingDisplayNameForm onSubmit={onNameFormSubmit}/> :\n            <JitsiWrapper admin={true} roomName={roomName} displayName={shouldDisplayForm.name} interviewId={interviewId} companyId={companyId}/>\n    }\n\n    const onNameFormSubmit = (name) => {\n        setShouldDisplayForm({\n            shouldDisplay: false,\n            name: name\n        })\n    }\n\n    return getAdminDisplayer()\n}","import {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport {MeetingDisplayName} from \"./MeetingDisplayName\";\nimport {JitsiWrapper} from \"./JitsiComponentWrapper\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nexport const Meeting = () => {\n    let { interviewId, companyId } = useParams()\n    const [name, setName] = useState(null)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n        if(companyId === undefined) {\n            interviewAPI.getJobSeekerNameByInterviewId(interviewId)\n                .then(data => {\n                    setName(`${data?.firstName || \"\"} ${data?.lastName || \"\"}`)\n                    setIsFetching(false)\n                })\n        } else {\n            setIsFetching(false)\n        }\n    }, [companyId, interviewId])\n\n    return (\n        <div>\n            {\n                isFetching ? <CircularProgress /> :\n                <Fetched name={name} interviewId={interviewId} companyId={companyId} />\n            }\n        </div>\n    )\n}\n\nconst Fetched = ({ name, interviewId, companyId }) => {\n    return (\n        name === null ?\n            <MeetingDisplayName roomName={`${interviewId}`} interviewId={interviewId} companyId={companyId}/>\n            : <JitsiWrapper admin={false} roomName={`${interviewId}`} displayName={name ? name : \"John Doe\"} interviewId={interviewId}/>\n    )\n}","import {useDropzone} from \"react-dropzone\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\n\nconst FilesDropzone = ({onDrop}) => {\n    const {isDragActive, getRootProps, getInputProps} = useDropzone({onDrop})\n    const color = isDragActive ? \"grey\" : \"lightgrey\"\n    return <Paper style={{\n        padding: \"2em\",\n        paddingTop: \"4em\",\n        paddingBottom: \"4em\",\n        backgroundColor: color,\n        justifyContent: \"center\",\n        display: \"flex\"\n    }} {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n            isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Drag and drop files here, or click to select them</p>\n        }\n    </Paper>\n}\n\nexport default FilesDropzone","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const jobSeekerAPI = {\n\n    getJobSeeker: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/${id}`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    getFiles: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"GET\"\n        })\n        .then(response => response.json())\n    },\n\n    insertFiles: function(files) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/jobseekers/files`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({files: files})\n        })\n    }\n}","import Swal from \"sweetalert2\";\nimport {useParams} from \"react-router-dom\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {validateEmail} from \"../../../utils/functions\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilesDropzone from \"../../userMenu/FilesDropzone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {jobSeekerAPI} from \"../../../utils/apis/JobSeekerAPI\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    }\n}));\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst SelectSavedFile = ({files, onSave, open, setOpen}) => {\n    const [file, setFile] = useState(null)\n\n    const classes = useStyles()\n\n    const handleChange = (event) => {\n        setFile(event.target.value)\n    }\n\n    const handleClose = () => {\n        setFile(null)\n        setOpen(false)\n    }\n\n    const handleSave = () => {\n        onSave(file)\n        setFile(null)\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Select file to attach</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">File</InputLabel>\n                            <Select\n                                labelId=\"demo-dialog-select-label\"\n                                id=\"demo-dialog-select\"\n                                value={file}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={null}>\n                                    <em>None</em>\n                                </MenuItem>\n                                {files.map(file => <MenuItem value={file}>{file.fileName}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\" disabled={file == null}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst FileCard = ({file, index, handleDelete}) => {\n    return <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </Paper>\n}\n\nexport const ApplyForm = () => {\n\n    const {id} = useParams()\n\n    const {loggedIn} = useLoggedIn()\n    const user = jwtUtils.getUser()\n\n    const [name, setName] = useState(user?.firstName || \"\")\n    const [surname, setSurname] = useState(user?.lastName || \"\")\n    const [email, setEmail] = useState(user?.mail || \"\")\n    const [files, setFiles] = useState([])\n    const [loadedFiles, setLoadedFiles] = useState([])\n    const [open, setOpen] = useState(false)\n\n    const [shouldValidateField, setShouldValidateField] = useState({\n        name: false,\n        surname: false,\n        email: false\n    })\n\n    useEffect(() => {\n        if(loggedIn)\n            jobSeekerAPI.getFiles().then(files => {\n                setLoadedFiles(files)\n            })\n    }, [])\n\n    const apply = () => {\n        if (validate()) {\n            if (files === []) {\n                Swal.fire({\n                    title: \"Warning\",\n                    text: \"You're not including any CV file, are you sure about it?\",\n                    icon: \"warning\",\n                    showDenyButton: true,\n                    confirmButtonText: \"Yes, I'm sure\",\n                    denyButtonText: \"No, let me insert my CV\"\n                }).then(result => {\n                    if (result.isConfirmed) {\n                        validatedApply([])\n                    } else if (result.isDenied) {\n                        Swal.close()\n                    }\n                })\n            } else {\n                validatedApply(files)\n            }\n        } else {\n            Swal.fire({\n                title: \"Error alert!\",\n                text: \"Check if all fields are filled correctly\",\n                icon: \"error\",\n                confirmButtonText: \"OK\"\n            })\n        }\n    }\n\n    const validatedApply = (files) => {\n        withSwal({\n            loadingTitle: \"Applying\",\n            promise: () => loggedIn ? offersAPI.applyWithUser(id, files) : offersAPI.applyWithNoUser(id, name, surname, email, files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully applied for this offer!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't process your application for this offer\",\n        })\n    }\n\n    const validate = () => {\n        return validateEmail(email) && validateName(name) && validateSurname(surname)\n    }\n\n\n    const validateName = (name) => {\n        return name !== \"\"\n    }\n    const validateSurname = (surname) => {\n        return surname !== \"\"\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    const handleDeleteFile = (index) => {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const onAttachFile = (newFile) => {\n        setFiles(oldFiles => oldFiles.concat([newFile]))\n    }\n\n    return (\n        <Grid container spacing={1} style={{width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={({target}) => {\n                        setName(target.value)\n                        setShouldValidateField({...shouldValidateField, name: true})\n                    }}\n                    error={!validateName(name) && shouldValidateField.name}\n                    helperText={!validateName(name) && shouldValidateField.name ? \"Name cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Surname\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={surname}\n                    onChange={({target}) => {\n                        setSurname(target.value)\n                        setShouldValidateField({...shouldValidateField, surname: true})\n                    }}\n                    error={!validateSurname(surname) && shouldValidateField.surname}\n                    helperText={!validateSurname(surname) && shouldValidateField.surname ? \"Surname cannot be empty\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"E-mail address\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({target}) => {\n                        setEmail(target.value)\n                        setShouldValidateField({...shouldValidateField, email: true})\n                    }}\n                    error={!validateEmail(email) && shouldValidateField.email}\n                    helperText={!validateEmail(email) && shouldValidateField.email ? \"Email isn't valid\" : \" \"}\n                    disabled={loggedIn}\n                />\n            </Grid>\n            <Grid item xs={12} md={loadedFiles.length !== 0 ? 6 : 12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            {loadedFiles.length !== 0 && <Grid item xs={12} md={6}>\n                <Button style={{height: \"100%\"}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={handleClickOpen}\n                        fullWidth>\n                    Attach saved file\n                </Button>\n                <SelectSavedFile files={loadedFiles} open={open} setOpen={setOpen} onSave={file => onAttachFile(file)} />\n            </Grid>}\n            {files.map((file, ind) => <Grid item xs={12} md={6} style={{marginBottom: \"15px\"}}>\n                <FileCard file={file} index={ind} handleDelete={handleDeleteFile} />\n            </Grid>)}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item md={9} xs={false} />\n            <Grid item md={3} xs={12}>\n                <Button variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        onClick={apply}\n                        fullWidth>\n                    Apply\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n","import {Box, useTheme} from \"@material-ui/core\";\n\nexport const SkillIndicator = (props) => {\n\n    const theme = useTheme()\n\n    const fullCircleStyle = {\n        backgroundColor: theme.palette.focused.dark,\n    }\n\n    const emptyCircleStyle = {\n        borderRadius: \"50%\",\n        width: \"15px\",\n        height: \"15px\",\n        border: `1px solid ${theme.palette.focused.dark}`,\n    }\n\n    return(\n        <Box m={1}>\n            { props.isFilled ? <div style={{...fullCircleStyle, ...emptyCircleStyle}}/> : <div style={emptyCircleStyle}/> }\n        </Box>\n    )\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport {SkillIndicator} from \"./SkillIndicator\";\n\nexport const OfferSkill = ({ name, skillLevel }) => {\n\n    const enumerateSkillLevel = () => {\n        switch (skillLevel) {\n            case 'NICE_TO_HAVE': return 1\n            case 'JUNIOR': return 2\n            case 'REGULAR': return 3\n            case 'ADVANCED': return 4\n            default: return 5\n        }\n    }\n\n    const theme = useTheme()\n\n    const getDotsOnSkillLevel = () => {\n        const skills = []\n        const enumerated = enumerateSkillLevel()\n        for(let i=0; i<5; i++){\n            skills.push(<div style={{float: \"left\"}} key={i}><SkillIndicator isFilled={ i < enumerated} /></div>)\n        }\n        return skills\n    }\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1} id=\"indicators\" style={{display: \"flex\"}}>\n                        {getDotsOnSkillLevel()}\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {name}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {skillLevel}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Card, useTheme} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport React from \"react\";\n\nexport const ListElementDetails = ({cardContent}) => {\n\n    const theme = useTheme()\n\n    return <div>\n        <Card variant=\"outlined\"\n              style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", backgroundColor: theme.palette.card.background,\n                  marginBottom: \"1em\", overflowY: 'scroll', maxHeight: `calc(100vh - 10em - ${constants[\"navbar_height\"]})`}}>\n            {cardContent}\n        </Card>\n    </div>\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Typography} from '@material-ui/core'\n\n\nexport const SingleMenu = ({ buttons, menuName, offer, history }) => {\n\n    const [anchor, setAnchor] = useState(null)\n\n    const handleClick = (event) => {\n        setAnchor(event.currentTarget)\n    } \n\n    const handleClose = () => {\n        setAnchor(null)\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick} variant=\"outlined\" color=\"primary\">{ menuName }</Button>\n    \n            <Menu\n                anchorEl={anchor}\n                keepMounted\n                open={!!anchor}\n                onClose={handleClose}\n            >\n                {buttons.map(button => (<MenuItem key={button.text}>\n                            <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                                <Typography>\n                                    {button.text}\n                                </Typography>\n                            </Button>\n                            </MenuItem>))}\n            </Menu>\n\n        </div>\n    )\n\n}","import {useHistory} from \"react-router-dom\";\nimport {Box, Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {OfferSkill} from \"./OfferSkill\";\nimport PropTypes from \"prop-types\";\nimport {ListElementDetails} from \"../../commons/layouts/ListElementDetails\";\nimport {SingleMenu} from './SingleMenu.js'\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\n\nexport const OfferDetails = (props) => {\n\n    const history = useHistory()\n\n    const offer = props.offer\n\n    const groups = (buttons) => buttons.reduce((groups, item) => {\n        const group = (groups[item.menu] || []);\n        group.push(item);\n        groups[item.menu] = group;\n        return groups;\n      }, {});\n\n    const getButtons = () => {\n        const user = jwtUtils.getUser()\n\n        if (user?.userType == \"hr\" || user?.userType == \"organization\") {\n            return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n                        {\n                        Object.entries(groups(props.buttons)).map(([menu, buttons]) => {\n                            return <Box key={menu} mr={1} ml={1}>\n                                <SingleMenu menuName={menu} buttons={buttons} offer={offer} history={history} />\n                            </Box>\n                            })\n                        }\n                    </div>)\n        }\n\n        return (<div style={{float: \"right\", marginRight: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\n            {props.buttons.map(button => {\n            return <Box key={button.text} mr={1} ml={1}>\n                <Button variant=\"outlined\" onClick={() => button.action(offer, history)} {...button.style}>\n                    <Typography>\n                        {button.text}\n                    </Typography>\n                </Button>\n            </Box>})}\n            </div>\n        )\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Box mb={12}>\n                <div style={{float: \"left\"}}>\n                    <Box>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {offer.name}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            {offer.organization?.name}\n                        </Typography>\n                    </Box>\n                </div>\n                {getButtons()}\n            </Box>\n            <Divider/>\n            <Box style={{width: \"100%\"}}>\n                <Box mt={1}>\n                    <div style={{float: \"left\"}}>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                            {offer.position}\n                        </Typography>\n                    </div>\n                </Box>\n                <Box>\n                    <div style={{float: \"right\", marginRight: \"20px\"}}>\n                        <div>\n                            <Typography variant=\"h6\">\n                                {offer.minSalary} - {offer.maxSalary}\n                            </Typography>\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                {offer.localization}\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Box>\n            <Box mt={8} mb={4}>\n                <Grid container>\n                    {offer.skills.map((skill, idx) =>\n                        <Grid key={idx} item><OfferSkill key={idx}\n                                                         name={skill.name}\n                                                         skillLevel={skill.level}/></Grid>)}\n                </Grid>\n            </Box>\n            <Divider/>\n            <Box m={2} p={2}>\n                {offer.description}\n            </Box>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}\n\nOfferDetails.propTypes = {\n    offer: PropTypes.object.isRequired,\n    buttons: PropTypes.array\n}\n\nOfferDetails.defaultProps = {\n    buttons: [{\n        text: \"Apply\",\n        action: (offer, history) => history.push(`/offers/apply/${offer.id}`),\n        menu: \"Apply menu\",\n        style: {color: 'primary', variant: 'contained'}\n    }]\n}\n","import React from \"react\";\nimport { Typography } from '@material-ui/core'\n\nexport const PickUpOffer = () => (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://img.myloview.pl/fototapety/job-application-or-employment-resume-research-for-vacancy-outline-concept-work-candidate-documentation-with-cv-motivation-letter-after-job-interview-vector-illustration-business-labor-and-hr-scene-700-255625478.jpg\" alt=\"Application\" style={{width: '80%'}} />\n            <Typography variant=\"h6\" color=\"textSecondary\">Pick offer from the list on the right</Typography>\n        </div>\n    )","import DescriptionIcon from '@material-ui/icons/Description';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport const ProcessStage = {\n    APPLIED: {\n        name: \"Applied\",\n        description: \"\",\n        icon: <DescriptionIcon />\n    },\n    HR_INTERVIEW: {\n        name: \"Hr Interview\",\n        description: \"\",\n        icon: <AssignmentIndIcon />\n    },\n    TASK: {\n        name: \"Task\",\n        description: \"\",\n        icon: <AssignmentTurnedInIcon />\n    },\n    QUIZ: {\n        name: \"Quiz\",\n        description: \"\",\n        icon: <ContactSupportIcon />\n    },\n    TECHNICAL_INTERVIEW: {\n        name: \"Technical Interview\",\n        description: \"\",\n        icon: <ComputerIcon />\n    },\n    ENDED: {\n        name: \"The end\",\n        description: \"\",\n        icon: <CancelIcon />\n    },\n}","import {Avatar, Chip, Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {getIconFromFilterType} from \"../../../utils/functions\";\nimport {ProcessStage} from '../../../utils/procesStages'\n\nexport const ActiveFilter = ({ label, handleDelete, filter, color }) => {\n\n    const lastLabelWord = label.split(' ')[label.split(' ').length - 1]\n\n    const getLabel = () => lastLabelWord in ProcessStage ? `${filter.type}: ${ProcessStage[lastLabelWord].name}` : label\n\n    return (\n        <Grid item>\n            <Chip label={getLabel()} onDelete={handleDelete} color={color} avatar={<Avatar id={`${label}-avatar`}>\n                {getIconFromFilterType(filter)}\n            </Avatar>} />\n        </Grid>\n    )\n}\n\nActiveFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired\n}\n\nActiveFilter.defaultProps = {\n    color: \"primary\"\n}","import FilterListIcon from '@material-ui/icons/FilterList';\nimport {Button, Drawer, Grid} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ActiveFilter} from \"./ActiveFilter\";\n\nexport const Filter = ({ onFilterSubmitted, reloadItems, InDrawerFilter, InDrawerFilterProps }) => {\n\n    const [open, setOpen] = useState(false)\n    const [filters, setFilters] = useState([])\n\n    const handleFilterSubmitted = (filters) => {\n        setFilters(filters)\n        onFilterSubmitted(filters)\n    }\n\n    const toggleDrawer = () => {\n        setOpen(!open)\n    }\n\n    const getFiltersAsActiveFilters = () => {\n        return filters.map(filter => filter.value ? <Grid item key={filter.type}><ActiveFilter\n            handleDelete={() => handleFilterDelete(filter.type)}\n            label={`${filter.type}: ${filter.value}`}\n            filter={filter}/></Grid> : null)\n    }\n\n    const handleFilterDelete = (filterType) => {\n        const newFilters = filters.filter(filter => filter.type !== filterType)\n        setFilters(newFilters)\n        reloadItems(newFilters)\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    <Button onClick={() => toggleDrawer()}><FilterListIcon fontSize=\"large\"/></Button>\n                </Grid>\n                {getFiltersAsActiveFilters()}\n            </Grid>\n\n            <Drawer anchor=\"left\" open={open} ModalProps={{onBackdropClick: () => toggleDrawer()}}\n                    transitionDuration={700}>\n                <InDrawerFilter {...InDrawerFilterProps} onFilterSubmitted={handleFilterSubmitted} filters={filters} toggleDrawer={toggleDrawer}/>\n            </Drawer>\n\n        </div>\n    )\n}\n\n","import {Chip, List, ListItem, Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {useState} from \"react\";\nimport {offerSort} from \"../../../utils/Enums\";\n\nexport const Sorter = ({label, onSort}) => {\n\n    const [element, setElement] = useState(null)\n\n    const openList = (event) => setElement(event.currentTarget)\n\n    const handleClose = () => setElement(null)\n\n    const open = Boolean(element)\n\n    const handleItemClick = (sort) => {\n        onSort(sort)\n        handleClose()\n    }\n\n    const getListItems = () => {\n        return offerSort\n            .map(sort => <ListItem button onClick={() => handleItemClick(sort)} key={sort.name}>{sort.name}</ListItem>)\n    }\n\n    return (\n        <div>\n            <Chip label={label}\n                  variant=\"outlined\"\n                  onClick={openList}\n                  clickable\n                  style={{width: \"15em\", height: \"3em\", fontSize: \"1em\"}}\n            />\n            <Popover open={open}\n                 anchorEl={element}\n                 onClose={handleClose}\n                 anchorOrigin={{\n                     vertical: 'bottom',\n                     horizontal: 'center',\n                 }}\n                 transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'center',\n                 }}\n            >\n                <List>\n                    {getListItems()}\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nSorter.propTypes = {\n    label: PropTypes.string.isRequired,\n    onSort: PropTypes.func.isRequired\n}","import {useState} from \"react\";\nimport {Sorter} from \"./Sorter\";\nimport PropTypes from \"prop-types\";\n\nexport const SorterWrapper = ({ onSort }) => {\n    const [label, setLabel] = useState(\"Sort Offers\")\n\n    const handleOnSort = (elem) => {\n        setLabel(elem.name)\n        onSort(elem)\n    }\n\n    return (\n        <Sorter label={label} onSort={handleOnSort} />\n    )\n}\n\nSorter.propTypes = {\n    onSort: PropTypes.func.isRequired\n}","import {Grid} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const ColumnAndDetailsLayout = ({details, list}) => {\n\n    return (\n        <div style={{marginTop: \"15px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={8}>\n                    {details}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    {list}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nColumnAndDetailsLayout.propTypes = {\n    details: PropTypes.any.isRequired,  //component representing details of list item\n    list: PropTypes.any.isRequired      //component representing list of items\n}","import {Divider} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport const StandardViewAndFilterLayout = ({filter, sorter, view}) => {\n\n    return (\n        <div>\n            <div style={{marginBottom: \"10px\", display: \"flex\"}}>\n                <div style={{alignItems: \"flex-start\"}}>\n                    {filter}\n                </div>\n                <div style={{alignItems: \"flex-end\", marginLeft: \"auto\", marginRight: \"10px\"}}>\n                    {sorter}\n                </div>\n            </div>\n            <Divider/>\n            {view}\n        </div>\n    )\n}\n\nStandardViewAndFilterLayout.propTypes = {\n    filter: PropTypes.any,   //component representing filter with its view and logic\n    sorter: PropTypes.any,   //component representing sorter with its view and logic\n    view: PropTypes.any.isRequired      //component representing view that should be displayed\n}","import {Grid, Slider, TextField, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaSlider = (props) => {\n\n    const getValue = (event, value) => {\n        return event.target.value === '' ? value : Number(event.target.value)\n    }\n\n    const value = props.value\n    const setValue = props.onValueChanged\n    const getMaxValue = (event) => getValue(event, props.max)\n    const getMinValue = (event) => getValue(event, props.min)\n\n    const handleInputBlur = () => {\n        if(value[0] < props.min) setValue([props.min, value[1]])\n        if(value[1] > props.max) setValue([value[0], props.max])\n    }\n\n    return (\n        <div style={{width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <Typography>\n                {props.label}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={(event, newValue) => setValue(newValue)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={() => `${value}`}\n                max={props.max}\n                min={props.min}\n                step={props.step}\n            />\n            <Grid container direction=\"row\" style={{marginTop: \"10px\"}}>\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[0]}\n                        onChange={(event) => setValue([getMinValue(event), value[1]])}\n                        onBlur={handleInputBlur}\n                        min={props.min}\n                        max={value[1]}\n                        type=\"number\"\n                    />\n                </Grid>\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <TextField\n                        value={value[1]}\n                        onChange={(event) => setValue([value[0], getMaxValue(event)])}\n                        onBlur={handleInputBlur}\n                        min={value[0]}\n                        max={props.max}\n                        type=\"number\"\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nEStellaSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    step: PropTypes.number,\n    value: PropTypes.array.isRequired,\n    onValueChanged: PropTypes.func.isRequired\n}\n\nEStellaSlider.defaultProps = {\n    min: 0,\n    max: 100,\n    step: 10\n}\n","import {Box, Button, Grid} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport {EStellaSlider} from \"../commons/filter/EStellaSlider\";\nimport {useEffect, useState} from \"react\";\nimport {filterTypes} from \"../../utils/Enums\";\nimport {getFilterValueByType} from \"../../utils/functions\";\nimport {EStellaAutocomplete} from '../EStellaAutocomplete'\n\nexport const InDrawerFilter = ({items, fixedItems, filters, onFilterSubmitted, toggleDrawer}) => {\n\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const [companyValue, setCompanyValue] = useState(\"\")\n    const [positionValue, setPositionValue] = useState(\"\")\n\n    useEffect(() => {\n        setSliderValue([\n            getFilterValueByType(filters, filterTypes.MIN_SALARY) || getMinOffersSalary(),\n            getFilterValueByType(filters, filterTypes.MAX_SALARY) || getMaxOffersSalary()\n        ])\n    }, [])\n\n    const createFilters = () => {\n        return [\n            {type: filterTypes.MIN_SALARY, value: sliderValue[0]},\n            {type: filterTypes.MAX_SALARY, value: sliderValue[1]},\n            {type: filterTypes.COMPANY_NAME, value: companyValue},\n            {type: filterTypes.POSITION_NAME, value: positionValue}\n        ]\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    const getMinOffersSalary = () => Math.min(...fixedItems.map(offer => offer.minSalary))\n    const getMaxOffersSalary = () => Math.max(...fixedItems.map(offer => offer.maxSalary))\n\n    const handleFilterSubmit = () => {\n        toggleDrawer()\n        onFilterSubmitted(createFilters())\n    }\n\n    const companyOptions = [...new Set(fixedItems.map(offer => offer.organization.name))]\n    const positionOptions = [...new Set(fixedItems.map(offer => offer.position))]\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\"}}>\n            <Grid container spacing={2} direction=\"column\">\n                <Grid item>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={10}/>\n                        <Grid item xs={2}><Button onClick={toggleDrawer}><CloseIcon\n                            fontSize=\"large\"/></Button></Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <EStellaSlider label=\"Salary\" max={getMaxOffersSalary()} min={getMinOffersSalary()} step={100}\n                                   value={sliderValue} onValueChanged={(value) => setSliderValue(value)}/>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={companyOptions}  label=\"Company Name\" value={companyValue}\n                            onChange={(value) => setCompanyValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item>\n                    <Box m={1} p={1}>\n                        <EStellaAutocomplete options={positionOptions}  label=\"Position\" value={positionValue}\n                                            onChange={(value) => setPositionValue(value)}\n                        />\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} style={{position: \"absolute\", bottom: \"5%\", right: \"20%\"}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={false} md={8} />\n                        <Grid item xs={12} md={4}>\n                            <Button variant=\"outlined\" onClick={handleFilterSubmit}>\n                                Filter\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nInDrawerFilter.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired,\n    offers: PropTypes.array.isRequired,\n    onFilterSubmitted: PropTypes.func.isRequired,\n    filters: PropTypes.array, // - state of previous drawer,\n    fixedOffers: PropTypes.array.isRequired\n}","import {OffersList} from \"./OffersList\";\nimport {OfferDetails} from \"../details/OffersDetails\";\nimport React, {useEffect, useState} from \"react\";\nimport {PickUpOffer} from \"./PickUpOffer\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {Filter} from \"../../commons/filter/Filter\";\nimport {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {filterItems} from \"../../../utils/functions\";\nimport PropTypes from \"prop-types\";\nimport {SorterWrapper} from \"../../commons/sorter/SorterWrapper\";\nimport {ColumnAndDetailsLayout} from \"../../commons/layouts/ColumnAndDetailsLayout\";\nimport {StandardViewAndFilterLayout} from \"../../commons/layouts/StandardViewAndFilterLayout\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\nimport Swal from \"sweetalert2\";\nimport { InDrawerFilter } from \"../InDrawerFilter\";\n\nexport const OffersView = (props) => {\n\n    const [selectedOffer, setSelectedOffer] = useState(null)\n    const [offers, setOffers] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [fetching, setFetching] = useState(true)\n    const {id} = useParams()\n    const [fixedOffers, setFixedOffers] = useState([])\n    const [sort, setSort] = useState({apply: (offers) => offers})\n\n    const handleFilterSubmitted = (filters) => {\n        setOffers(sort.apply(filterItems(fixedOffers, filters)))\n    }\n\n    useEffect(() => {\n        if (id !== undefined) {\n            offersAPI.getOfferById(id)\n                .then(data => setSelectedOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer's details!\",\n                        icon: \"error\"\n                    })\n                })\n        }\n    }, [id])\n\n    useEffect(() => {\n        props.getOffers()\n            .then(data => {\n                setOffers(data || [])\n                setFixedOffers(data || [])\n                setFetching(false)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We weren't able to get offers! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => {\n                    setFetching(false)\n                    setFetchError(true)\n                })\n            })\n    }, [props])\n\n    const handleSort = (sort) => {\n        /* Probably race problem, don't know how to fix, but works now, if sorting offers doesn't work in future,\n        * probably the case\n        * Possible solution to race problem - state with sort and offers merged, but I don't like this idea */\n        setSort(sort)\n        setOffers(offers => ([...sort.apply(offers)]))\n    }\n\n    const layoutInternalView = () =>\n        selectedOffer ? <OfferDetails offer={selectedOffer} buttons={props.buttons} /> : <PickUpOffer />\n\n    const offersList = () =>\n        <OffersList limit={NaN} onSelectedOffer={(selectedOffer => setSelectedOffer(selectedOffer))} offers={offers} />\n\n    return fetchError ? <Redirect to=\"/\" /> : (fetching ? <CenteredCircularProgress size={80} /> : <StandardViewAndFilterLayout\n            filter={<Filter\n                            onFilterSubmitted={handleFilterSubmitted}\n                            reloadItems={handleFilterSubmitted}\n                            InDrawerFilter={InDrawerFilter}\n                            InDrawerFilterProps={{\n                                items: offers,\n                                fixedItems: offers\n                            }}\n                            />}\n            sorter={<SorterWrapper onSort={handleSort} />}\n            view={<ColumnAndDetailsLayout details={layoutInternalView()} list={offersList()} />}\n        />)\n}\n\nOffersView.propTypes = {\n    getOffers: PropTypes.func.isRequired,\n}\n","import {useEffect} from \"react\";\nimport Swal from \"sweetalert2\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const UnauthenticatedPage = () => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        Swal.fire({\n            title: \"Unauthenticated\",\n            text: \"We're sorry, but you're unauthenticated to go here! Try to log in, and if you think \" +\n                \"that you should be able to come here, contact your administrator or us at estellaagh@gmail.com.\",\n            icon: \"error\"\n        }).then(() => {\n            history.push('/')\n        })\n    }, [history])\n\n    return (\n        <></>\n    )\n}","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {UnauthenticatedPage} from \"./UnauthenticatedPage\";\nimport PropTypes from 'prop-types';\n\nexport const withUserAuth = (WrappedComponent, permittedTypes, wrappedProps) => {\n    const user = jwtUtils.getUser()\n\n    return (\n        <>\n            {\n                permittedTypes.includes(user?.userType) ? <WrappedComponent {...wrappedProps} /> : <UnauthenticatedPage />\n            }\n        </>\n    )\n}\n\nwithUserAuth.propTypes = {\n    permittedTypes: PropTypes.array.isRequired,\n    WrappedComponent: PropTypes.any.isRequired\n}\n\nwithUserAuth.defaultProps = {\n    wrappedProps: {}\n}","import {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {offersAPI} from \"../../utils/apis/OfferApi\";\n\nexport const hrOfferButtons = (theme) => [\n    {\n        text: \"Edit process\",\n        action: (offer, history) => history.push(`/hr/process/manage/${offer.id}`),\n        style: {\n            style: { background: theme.palette.secondary.dark, color: theme.palette.background.main },\n            variant: \"contained\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Edit offer\",\n        action: (offer, history) => {\n            history.push(`/hr/offers/edit/${offer.id}`)\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Delete offer\",\n        action: (offer, history) => {\n            withSwal({\n                loadingTitle: \"Deleting offer\",\n                promise: () => offersAPI.deleteOffer(offer.id),\n                successSwalTitle: \"Successfully deleted\",\n                successSwalText: \"Offer has been deleted\",\n                confirmButtonText: \"Ok\",\n                successFunction: () => history.go(0),\n                errorSwalTitle: \"Offer not deleted\",\n                errorSwalText: \"We couldn't delete your offer\",\n                errorConfirmButtonText: \"Ok\"\n            })\n        },\n        style: {\n            style: { border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main },\n            variant: \"outlined\"\n        },\n        menu: \"Offer Menu\"\n    },\n    {\n        text: \"Applications\",\n        action: (offer, history) => history.push(`/hr/applications/${offer.id}`),\n        style: {\n            color: \"primary\",\n            variant: \"contained\"\n        },\n        menu: \"Applications Menu\"\n    }\n\n]","import {ListWithSelection} from \"../commons/layouts/ListWithSelection\";\nimport {scrollToTop} from \"../../utils/functions\";\nimport {Typography} from '@material-ui/core'\n\nexport const ApplicationsList = ({applications, onSelectedApplication, forDev=false}) => {\n\n    const extractData = (applicationData) => {\n\n        const application = forDev ? applicationData.application : applicationData\n\n        return {\n            first: `${application.jobSeeker.user.firstName} ${application.jobSeeker.user.lastName}`,\n            second: application.stage.type,\n            third: application.status,\n            application: applicationData\n        }\n    }\n\n    const handleSelect = (application, idx) => {\n        onSelectedApplication(application)\n        scrollToTop()\n    }\n\n    return applications.length > 0 ?\n        <ListWithSelection\n            listItems={applications}\n            extractData={extractData}\n            limit={NaN}\n            propsHandleSelect={(application, idx) => handleSelect(application.application, idx)}\n            isSelectable={!!onSelectedApplication}\n        />\n        :\n        <EmptyFilterApplicationsView />\n}\n\nconst EmptyFilterApplicationsView = () => {\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://st2.depositphotos.com/3643473/6205/i/950/depositphotos_62059839-stock-photo-person-and-question-marks.jpg\" alt=\"Person with question marks around head\" style={{width: '80%', marginBottom: '1em'}} />\n            <Typography variant=\"h5\" color=\"textSecondary\">Oh no, your filters are too specific! Try to remove some of them</Typography>\n        </div>\n    )\n}","import {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {ProcessStage} from \"../../utils/procesStages\";\nimport {makeStyles, Paper, Typography, useTheme} from \"@material-ui/core\";\nimport {applicationStatus} from \"../../utils/Enums\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport const ApplicationTimeline = ({stages, currentStageId, status}) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n\n    let isBeforeCurrent = true\n\n    const getTimelineContent = (stage) => (\n        <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n                {stage.name}\n            </Typography>\n            <Typography>{stage.description}</Typography>\n        </Paper>\n    )\n\n    const getDotColor = stageId => {\n        if (stageId === currentStageId) {\n            isBeforeCurrent = false\n            return theme.palette.primary.main\n        }\n        if (isBeforeCurrent) return theme.status.success.main\n        else if (status === applicationStatus.REJECTED.toUpperCase()) {\n            return theme.status.danger.main\n        } else if (status === applicationStatus.IN_PROGRESS.toUpperCase().replace(\" \", \"_\")) {\n            return theme.palette.secondary.light\n        } else return \"grey\"\n    }\n\n    const getTimelineItem = (key, displayConnector) => {\n        const parts = key.split(\".\")\n        const stage = ProcessStage[parts[0]]\n        const stageId = Number(parts[1])\n        return (\n            <TimelineItem key={key}>\n                <TimelineSeparator>\n                    <TimelineDot style={{backgroundColor: getDotColor(stageId)}}>\n                        {stage.icon}\n                    </TimelineDot>\n                    {displayConnector ? <TimelineConnector /> : null}\n                </TimelineSeparator>\n                <TimelineContent>{getTimelineContent(stage)}</TimelineContent>\n            </TimelineItem>\n        )\n    }\n\n    const getTimelineItems = () => {\n        return stages\n            .map((item, idx) => {\n            return getTimelineItem(`${item.type}.${item.id}`, idx !== stages.length - 1)\n        })\n    }\n\n    return <Timeline align=\"alternate\">\n        {getTimelineItems()}\n    </Timeline>\n}","import React, {useState} from 'react'\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport {GenericFileViewer} from \"../commons/GenericFileViewer\";\n\nexport const FileViewerWrapper = ({undecodedFile}) => {\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Grid container direction=\"row\" spacing={1} alignItems = \"center\">\n            <Grid item xs={6}><Typography>{undecodedFile.fileName}</Typography></Grid>\n            <Grid item xs={6}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen}>\n                    View File\n                </Button>\n            </Grid>\n            <GenericFileViewer handleClose={handleClose} open={open} file={undecodedFile}/>\n        </Grid>\n    )\n}","import {checkedFetch} from \"../chekedFetch\";\nimport {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {headers} from \"./headers\";\n\nexport const applicationsAPI = {\n    getApplicationsByOfferId: function(offerId) {\n        return checkedFetch(\n            recruitmentServiceBasicAPILink + `/api/applications/offer/${offerId}`,\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    getApplicationsByJobSeeker: function() {\n        return authFetch(\n            recruitmentServiceBasicAPILink + '/api/applications/job-seeker',\n            {method: \"GET\"}\n        ).then(response => response.json())\n    },\n\n    rejectApplication: function(applicationId) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/reject`, {method: \"PUT\"})\n    },\n\n    nextStage: function(applicationId, devMails) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/applications/${applicationId}/next`, {\n            method: \"PUT\",\n            body: JSON.stringify({\"devs\": devMails}),\n            headers: headers\n        })\n    },\n\n    getApplicationsForDev: function(organizationId, devMail, devPassword) {\n        return checkedFetch(recruitmentServiceBasicAPILink + `/api/applications/forDev/${devMail}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n        },\n\n    getNotesByApplicationIdFromHr: (applicationId) => {\n        return authFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`)\n            .then(response => response.json())\n    },\n\n    getNotesByApplicationIdFromDev: (applicationId, devPassword) => {\n        return checkedFetch(`${recruitmentServiceBasicAPILink}/api/applications/get_notes?cv_note=${applicationId}`, {\n            headers: {\n                'content-type': 'application/json',\n                'x-dev-password': devPassword\n            }}).then(response => response.json())\n    }\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\nimport {checkedFetch} from \"../chekedFetch\";\n\nexport const processAPI = {\n\n    getProcessById: function (id) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}`, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n    },\n\n    getAllPossibleStages: function() {\n        return checkedFetch(recruitmentServiceBasicAPILink + '/api/process/stages')\n            .then(response => response.json())\n    },\n\n    updateProcessStages: function(id, items) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/stages/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stages: items\n            })\n        })\n    },\n\n    changeEndDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/end_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    changeStartDate: function(id, date) {\n        const preparedDate = this.prepareDate(date)\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start_date`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                date: preparedDate\n            })\n        })\n    },\n\n    startProcess: (id) => {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/process/${id}/start`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    },\n\n    prepareDate: function(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear()\n    }\n\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Box, Button, CardContent, Divider, Grid, Typography, useTheme} from \"@material-ui/core\";\nimport {ApplicationTimeline} from \"./ApplicationTimeline\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {applicationsAPI} from \"../../utils/apis/applicationsAPI\";\nimport Swal from \"sweetalert2\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {validateEmail} from \"../../utils/functions\";\n\nexport const ApplicationDetails = ({application, isHR, reload, isDev}) => {\n\n    const theme = useTheme()\n    const history = useHistory()\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    const rejectApplication = () => {\n        Swal.fire({\n            title: \"Do you really want to reject this application?\",\n            text: \"This operation cannot be undone\",\n            showCancelButton: true,\n            confirmButtonText: \"Reject Application\",\n            cancelButtonText: \"Abort!\",\n            icon: \"question\"\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Rejecting Application\",\n                    promise: () => applicationsAPI.rejectApplication(application.id),\n                    successFunction: () => reload(),\n                    successSwalText: \"Application rejected successfully\"\n                })\n            } else {\n                Swal.fire({\n                    title: \"You've cancelled this operation\",\n                    text: \"Application isn't rejected\",\n                    icon: \"success\"\n                })\n            }\n        })\n    }\n\n    const nextStage = () => {\n        if ( nextStageRequiresDevs() ) {\n            const devMails = []\n            Swal.fire({\n                title: \"We need more info\",\n                icon: \"warning\",\n                text: 'Next stage of this appliaction requires people with technical knowledge. Please, insert their mails here, splitting them with commas (,)',\n                input: \"text\",\n                preConfirm: (devsMails) => {\n                    if (devsMails) {\n                        devsMails.split(\",\")\n                            .map(mail => mail.trim())\n                            .forEach(mail => devMails.push(mail))\n                        devMails.forEach(mail => {\n                            if(!validateEmail(mail)) {\n                                Swal.showValidationMessage(`${mail} is not a valid email`)\n                                devMails.length = 0\n                            } \n                        })\n                    } else {\n                        Swal.showValidationMessage(\"Please, add mails of such people, as you won't be able to change it later.\")\n                    }\n                }\n            }).then(result => {\n                if (result.isConfirmed) {\n                    doSetNextStage(devMails)\n                }\n            })\n        } else {\n            doSetNextStage([])\n        }\n    }\n\n    const doSetNextStage = (devMails) => {\n        withSwal({\n            loadingTitle: \"Setting next stage of Application\",\n            promise: () => applicationsAPI.nextStage(application.id, devMails),\n            successFunction: () => reload(),\n            successSwalTitle: \"Next stage set successfully\"\n        })\n    }\n\n    const nextStageRequiresDevs = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"TASK\"], true)\n\n    const stageRequiresMeeting = () => nextStageIsOneOf([\"TECHNICAL_INTERVIEW\", \"HR_INTERVIEW\"])\n\n    const nextStageIsOneOf = (types, checkForNext) => {\n        let indexOfNextStage = application?.stages?.findIndex(stage => stage.id === application.stage.id)\n        if (checkForNext) indexOfNextStage += 1\n        return types.includes(application?.stages[indexOfNextStage]?.type)\n    }\n\n    const getDisabled = () => {\n        return application.status === \"REJECTED\" || application.status === \"ACCEPTED\"\n    }\n\n    const getRejectButtonStyle = () =>\n        getDisabled() ? {} : {border: `1px solid ${theme.status.danger.main}`, color: theme.status.danger.main}\n\n    const teleportToMO = () =>\n        isHR ? history.push(`/meeting/organizer/${application.id}`) : history.push(`/meeting/job_seeker/${application.id}`)\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={9}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>{ isHR || isDev ? 'Candidate' : 'You' } didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        {\n                            stageRequiresMeeting() && !getDisabled() && !isDev &&\n                                (<Grid item xs={3} ><Button color=\"secondary\" variant=\"contained\" onClick={teleportToMO} fullWidth><Typography variant=\"body2\">Plan meeting</Typography></Button></Grid>)\n                        }\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        {\n                            isHR && !isDev &&\n                            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                <Button style={getRejectButtonStyle()} variant=\"outlined\" onClick={rejectApplication} disabled={getDisabled()}>\n                                    Reject Application\n                                </Button>\n                                <Box m={1}/>\n                                <Button color=\"primary\" variant=\"contained\" onClick={nextStage} disabled={getDisabled()}>\n                                    Next Stage\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={12}>\n                            <ApplicationTimeline stages={application.stages} currentStageId={application.stage.id}\n                                                 status={application.status}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <ListElementDetails cardContent={getCardContent()}/>\n    )\n}","import {ListElementDetails} from \"../commons/layouts/ListElementDetails\";\nimport {Button, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {FileViewerWrapper} from \"./FileViewerWrapper\";\nimport {processAPI} from \"../../utils/apis/ProcessAPI\";\nimport {useEffect, useState} from 'react'\nimport {AssignTasks} from \"../tasks/AssignTasks\";\nimport {tasksApi} from \"../../utils/apis/tasksAPI\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\n\nexport const DevApplicationDetails = ({devApplication}) => {\n\n    console.log(devApplication)\n\n    const application = devApplication?.application\n\n    const { getEncodedDevPassword } = useDevPassword()\n    const devPassword = getEncodedDevPassword()\n\n    const [openAssignTasks, setOpenAssignTasks] = useState(false)\n    const [alreadyAssignedTasks, setAlreadyAssignedTasks] = useState([])\n    const [organizationTasks, setOrganizationTasks] = useState([])\n    const [reload, setReload] = useState(false)\n\n    const getSeekerFiles = () => {\n        return application.seekerFiles\n            .map((file, idx) => (\n                <Grid item key={idx} xs={12} md={6}>\n                    <FileViewerWrapper undecodedFile={file}/>\n                </Grid>))\n    }\n\n    useEffect(() => {\n        tasksApi.getTasksFromOrganization(devApplication.organizationUUID, devPassword)\n            .then(data => setOrganizationTasks(data))\n        tasksApi.getTasksFromTaskStage(devApplication.taskStageUUID, devPassword)\n            .then(data => setAlreadyAssignedTasks(data))\n    }, [devApplication, reload])\n\n    const assignTask = () => {\n        setOpenAssignTasks(true)\n    }\n\n    const getCardContent = () => {\n        return (<CardContent>\n            <Grid container direction=\"row\" spacing={4}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography\n                                    variant=\"h6\">{application.jobSeeker.user.firstName} {application.jobSeeker.user.lastName}</Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" color=\"textSecondary\">{application.offerName || devApplication?.position}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}\n                              style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                            <div>\n                                <Typography>{application.jobSeeker.user.mail}</Typography>\n                            </div>\n                            <div>\n                                <Typography color=\"textSecondary\">{processAPI.prepareDate(new Date(application.applicationDate))}</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}><Divider/></Grid>\n                        <Grid item xs={8}>\n                            {\n                                application.seekerFiles.length === 0 ?\n                                    <Typography>Candidate didn't supply any files.</Typography> :\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        {getSeekerFiles()}\n                                    </Grid>\n                            }\n                        </Grid>\n                        <Grid item xs={12}>\n{/*                         UNCOMMENT AFTER MERGE WITH NOTES - ES-231 I THINK SO\n                            <div style={{display: 'flex', gap: '1em', flexFlow: 'row wrap'}}>\n                            {\n                                notes.map(note => <SingleNote note={note} />)\n                            }\n                            </div>\n                             */}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={assignTask}>Assign Task</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>)\n    }\n\n    return (\n        <div>\n            <ListElementDetails cardContent={getCardContent()}/>\n            <AssignTasks\n                modalOptions={{open: openAssignTasks, handleClose: () => setOpenAssignTasks(false)}}\n                alreadyAssignedTasks={alreadyAssignedTasks}\n                organizationTasks={organizationTasks}\n                setReload={setReload}\n                assignKey=\"taskStage\"\n                assignUUIDValue={devApplication.taskStageUUID}\n            />\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/empty_view.b5f042b2.png\";","import Image from '../../assets/empty_view.png'\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const EmptyApplicationsView = ({isHR, isDev}) => {\n\n    const history = useHistory()\n\n    const handleApply = () => {\n        history.push('/offers')\n    }\n\n    const handleBackToOffers = () => {\n        history.push('/hr/offers')\n    }\n\n    return (\n        <Box m={4}>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item xs={12} sm={5}>\n                    <img src={Image} alt=\"Person looking for something\" width=\"100%\"/>\n                </Grid>\n                <Grid item xs={false} sm={2}/>\n                <Grid item xs={12} sm={5}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <Typography variant=\"h4\" color=\"textPrimary\">\n                                Oops... We couldn't find\n                                any {isHR ? \"\" : \"of your\"} applications {isHR ? \"on this offer\" : \"\"}!\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            {\n                                !isDev &&\n                                isHR ? <Button variant=\"contained\" color=\"primary\" onClick={handleBackToOffers}>\n                                        <Typography variant=\"h6\"> Back to my offers </Typography>\n                                    </Button>\n                                    : <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n                                        <Typography variant=\"h6\"> Apply right now! </Typography>\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}","import { useState } from 'react'\nimport { Switch } from '@material-ui/core'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {ProcessStage} from '../../../utils/procesStages'\nimport { applicationStatus } from '../../../utils/Enums'\n\nexport const CustomSwitch = ({ onChange, name }) => {\n\n    const [checked, setChecked] = useState(false)\n\n    const handleSwitchChange = ({ target }) => {\n        setChecked(target.checked)\n        onChange(target.checked)\n    }\n\n    const getName = () => name in ProcessStage ? ProcessStage[name].name : name in applicationStatus ? applicationStatus[name] : ''\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={checked} onChange={handleSwitchChange} name={getName()} />}\n                label={getName()}\n            />\n        </FormGroup>\n    )\n}","import { useState } from 'react'\nimport { filterTypes, operators } from '../../../utils/Enums'\nimport {CustomSwitch} from './CustomSwitch'\nimport { Button, Divider, Card, Typography, Grid } from '@material-ui/core'\nimport { EStellaAutocomplete } from '../../EStellaAutocomplete'\nimport { TagsList } from '../../notes/TagsList'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport const ApplicationsInDrawerFilter = ({ items, fixedItems, filters, onFilterSubmitted, toggleDrawer }) => {\n\n    const possibleStages = [...new Set(fixedItems.map(item => item.stage.type))]\n    const statuses = [...new Set(fixedItems.map(item => item.status))]\n    const tags = fixedItems.reduce((acc, item) => [...acc, ...item.tags], [])\n\n    const [toggledStages, setToggledStages] = useState([])\n    const [toggledApplicationStatuses, setToggledApplicationStatuses] = useState([])\n    const [tagsOptions, setTagsOptions] = useState({ tags: [], operator: operators.AND })\n\n    const onStageChange = (stage, isToggled) => {\n        if (isToggled) {\n            setToggledStages([...toggledStages, stage])\n        } else {\n            setToggledStages(toggledStages.filter(toggled => toggled !== stage))\n        }\n    }\n\n    const onApplicationStatusChange = (status, isToggled) => {\n        setToggledApplicationStatuses(isToggled ? [...toggledApplicationStatuses, status] : toggledApplicationStatuses.filter(toggle => toggle !== status))\n    }\n\n    const onTagAdd = (tag) => tag && setTagsOptions({...tagsOptions, tags: [...new Set([...tagsOptions.tags, tag])]})\n    const onTagDelete = (tag) => setTagsOptions({...tagsOptions, tags: tagsOptions.tags.filter(innerTag => innerTag !== tag)})\n    const onOperatorChange = (operator) => setTagsOptions({...tagsOptions, operator: operator.target.value})\n\n    const createFilters = () => [\n        {type: filterTypes.PROCESS_STAGE, value: toggledStages},\n        {type: filterTypes.APPLICATION_STAGE, value: toggledApplicationStatuses},\n        {type: filterTypes.TAGS, value: tagsOptions.tags, operator: tagsOptions.operator}\n    ]\n\n    const handleFilterSubmit = () => {\n        toggleDrawer()\n        onFilterSubmitted(createFilters().filter(filter => filter.value?.length !== undefined ? filter.value?.length > 0 : !!filter.value))\n    }\n\n    const calculateWidth = () => {\n        const width = window.screen.width\n        if (width < 700) {\n            return 0.6 * width\n        } else {\n            return 0.3 * width\n        }\n    }\n\n    return (\n        <div style={{width: `${calculateWidth()}px`, padding: \"2em\", marginTop: '1em'}}>\n\n            <TagsFilter tags={tags} onTagAdd={onTagAdd} onRemoveTag={onTagDelete} onOperatorChange={onOperatorChange} currentTags={tagsOptions.tags} value={tagsOptions.operator} />\n\n            <FilterCard possibleFilters={statuses} title=\"Current Application Status:\" handleStateChange={onApplicationStatusChange} />\n\n            <FilterCard possibleFilters={possibleStages} title=\"Current Process Stage:\" handleStateChange={onStageChange} />\n\n            <Button style={{position: 'absolute', bottom: '5%', right: '20%'}} type=\"outlined\" onClick={handleFilterSubmit}>Filter</Button>\n        </div>\n    )\n}\n\nconst FilterCard = ({ possibleFilters, title, handleStateChange }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{width: '90%', marginLeft: 'auto', marginRight: 'auto', padding: '1em', margin: '2em 0'}}>\n            <Typography variant=\"h6\">{title}</Typography>\n            {possibleFilters.map((filter, idx) => <CustomSwitch key={idx} name={filter} onChange={(isToggled) => handleStateChange(filter, isToggled)} />)}\n        </Card>\n    )\n}\n\nconst TagsFilter = ({ tags, onTagAdd, onRemoveTag, onOperatorChange, value, currentTags=[] }) => {\n\n    return (\n        <Card variant=\"outlined\" style={{width: '90%', marginLeft: 'auto', marginRight: 'auto', padding: '1em', margin: '2em 0'}}>\n            <Typography variant=\"h6\" style={{marginBottom: '1em'}}>Tags:</Typography>\n            <Grid container direction=\"row\" spacing={2} style={{marginBottom: '1em'}}>\n                <Grid sm={7}>\n                    <EStellaAutocomplete\n                        options={tags}\n                        onChange={onTagAdd}\n                        label=\"Tags\"\n                    />\n                </Grid>\n                <Grid item xs={1} />\n                <Grid sm={4}>\n                    <RadioButtons onOperatorChange={onOperatorChange} value={value} />\n                </Grid>\n            </Grid>\n            <TagsList\n                tags={currentTags}\n                deletable\n                onDelete={onRemoveTag}\n            />\n        </Card>\n    )\n}\n\nconst RadioButtons = ({ onOperatorChange, value }) => {\n\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Operators</FormLabel>\n            <RadioGroup value={value} onChange={onOperatorChange} style={{display: 'flex', flexDirection: 'row'}}>\n                <FormControlLabel value={operators.AND} control={<Radio />} label=\"And\" />\n                <FormControlLabel value={operators.OR} control={<Radio />} label=\"Or\" />\n            </RadioGroup>\n        </FormControl>\n    )\n}","import {useState} from 'react'\nimport {Button, Drawer, List, ListItem} from '@material-ui/core'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {constants} from \"../../utils/constants\";\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {NotesMenu} from './NotesMenu'\n\nconst drawerWidth = 600;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n}));\n\n\nexport const NotesDrawer = ({ notes, uuid, uuid_key, reload, setReload, anchor = \"left\", shouldUseAuthFetchToPost = false }) => {\n\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState(false)\n\n    const handleNoteClick = () => {\n        setOpen(true)\n    }\n\n    const closeNote = () => {\n        setOpen(false)\n    }\n\n    const closedView = (<List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                            <ListItem>\n                                <Button onClick={handleNoteClick}>\n                                    <NoteAddIcon fontSize=\"large\" color=\"action\"/>\n                                </Button>\n                            </ListItem>\n                        </List>)\n\n    const getCloseIconStyling = () => anchor === \"left\" ? {left: '20px'} : {right: '20px'}\n\n    return (\n        <div>\n            {open && (\n                <Button onClick={closeNote} style={{position:'absolute', top: '5em', zIndex: '10001', ...getCloseIconStyling()}}>\n                    <CloseIcon size=\"large\" color=\"action\" />\n                </Button>\n            )}\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                  })}\n                  classes={{\n                    paper: clsx({\n                      [classes.drawerOpen]: open,\n                      [classes.drawerClose]: !open,\n                    }),\n                  }}\n                anchor={anchor}\n            >\n                {open ? <NotesMenu notes={notes} uuid={uuid} uuid_key={uuid_key} reload={reload} setReload={setReload} shouldUseAuthFetchToPost={shouldUseAuthFetchToPost} /> : closedView}\n            </Drawer>\n        </div>\n    )\n}","import {Redirect, useParams} from \"react-router-dom\";\nimport {StandardViewAndFilterLayout} from \"../commons/layouts/StandardViewAndFilterLayout\";\nimport {ColumnAndDetailsLayout} from \"../commons/layouts/ColumnAndDetailsLayout\";\nimport {ApplicationsList} from \"./ApplicationsList\";\nimport React, {useEffect, useState} from \"react\";\nimport {ApplicationDetails} from \"./ApplicationDetails\";\nimport {DevApplicationDetails} from './DevApplicationDetails';\nimport {EmptyApplicationsView} from \"./EmptyApplicationsView\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../commons/CenteredCircularProgress\";\nimport {useDevPassword} from \"../../utils/hooks/useDevPassword\";\nimport { Filter } from '../commons/filter/Filter'\nimport { filterItems } from \"../../utils/functions\";\nimport { ApplicationsInDrawerFilter } from \"./filters/InDrawerFilter\";\nimport { Typography } from '@material-ui/core'\nimport {NotesDrawer} from '../notes/NotesDrawer'\nimport { applicationsAPI } from \"../../utils/apis/applicationsAPI\";\n\nexport const ApplicationsView = ({getApplications, isHR, isDev, mailInBase64, organizationUUID}) => {\n\n    const {id} = useParams()\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const devPassword = getEncodedDevPassword()\n\n    const [selectedApplication, setSelectedApplication] = useState(null)\n    const [applications, setApplications] = useState([])\n    const [fetching, setFetching] = useState(false)\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n    const [selectedApplicationNotes, setSelectedApplicationNotes] = useState([])\n\n    // state for filter and sort\n    const [fixedApplications, setFixedApplications] = useState([])\n    const [sort, setSort] = useState({apply: (applications) => applications})\n\n    const handleFilterSubmitted = (filters) => {\n        if(areFiltersValid(filters)){\n            setApplications(sort.apply(filterItems(fixedApplications, filters)))\n        }\n        else {\n            setApplications(sort.apply(fixedApplications))\n        }\n    }\n\n    const areFiltersValid = (filters) => filters.map(filter => filter.value)\n        .some(value => value?.length !== undefined ? value?.length > 0 : !!value)\n\n    const text = isDev ? `We weren't able to get this offer's applications! You will be redirected to main page.` : isHR ? `We weren't able to get this offer's applications! You will be redirected to your offers.` : `We weren't able to get your applications!`\n\n    useEffect(() => {\n        setFetching(true)\n        getApplications(id, mailInBase64, devPassword)\n            .then(data => {\n                const applications = isDev ? data.filter(application => application.application.status !== \"REJECTED\") : data\n                setApplications(applications)\n                setFixedApplications(applications)\n                selectedApplication && setSelectedApplication(data.filter(application => application.id === selectedApplication.id)[0])\n                setFetching(false)\n            }).catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: text,\n                    icon: \"error\"\n                }).then(() => {\n                    setFetchError(true)\n                    setFetching(false)\n                })\n            })\n    }, [setApplications, getApplications, id, reload])\n\n    useEffect(() => {\n        if (selectedApplication && isHR) {\n            applicationsAPI.getNotesByApplicationIdFromHr(selectedApplication.id)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        } else if (selectedApplication && isDev) {\n            applicationsAPI.getNotesByApplicationIdFromDev(selectedApplication.application.id, devPassword)\n                .then(data => setSelectedApplicationNotes(data?.notes || []))\n        }\n    }, [selectedApplication, reload])\n\n    const getNotesDrawerAnchor = () => isHR ? \"left\" : isDev ? \"right\" : \"none\"\n    const getNotesDrawerStyle = () => isDev ? {marginRight: '3em'} : {marginLeft: '3em'}\n    const getSelectedApplicationId = () => isDev ? selectedApplication?.application?.id : selectedApplication?.id\n\n    const getFilterView = (applications, fixedApplications) => (\n        <Filter\n            onFilterSubmitted={handleFilterSubmitted}\n            reloadItems={handleFilterSubmitted}\n            InDrawerFilter={ApplicationsInDrawerFilter}\n            InDrawerFilterProps={{\n                items: applications,\n                fixedItems: fixedApplications,\n            }}\n        />\n    )\n\n    const getStandardView = (innerApplications, fixedInnerApplications, WrappedComponent = ApplicationDetails, wrappedProps = {application: selectedApplication, isHR, reload: () => setReload(!reload), isDev}, forDev=false) => (\n        <>\n            <div style={{...getNotesDrawerStyle()}}>\n                <StandardViewAndFilterLayout\n                    filter={getFilterView(innerApplications, fixedInnerApplications)}\n                    sorter={null}\n                    view={\n                        <ColumnAndDetailsLayout\n                            details={selectedApplication ?\n                                <WrappedComponent {...wrappedProps}  /> :\n                                <div>Select application</div>}\n                            list={<ApplicationsList\n                                forDev={forDev}\n                                applications={innerApplications}\n                                onSelectedApplication={selected => setSelectedApplication(selected)}\n                            />}\n                        />\n                    }\n                />\n            </div>\n            { \n                (isHR || isDev) && getSelectedApplicationId() &&\n                <NotesDrawer\n                    notes={selectedApplicationNotes}\n                    uuid={getSelectedApplicationId()}\n                    uuid_key=\"cv_note\"\n                    reload={reload}\n                    setReload={setReload}\n                    anchor={getNotesDrawerAnchor()}\n                    shouldUseAuthFetchToPost={isHR}\n                /> \n            }\n        </>\n    )\n\n    const mapApplicationForDev = application => {\n        return {\n            ...application,\n            organizationUUID\n        }\n    }\n    const getDevView = () => getStandardView(applications.map(mapApplicationForDev), fixedApplications.map(mapApplicationForDev),\n    DevApplicationDetails, {devApplication: {...selectedApplication, organizationUUID}, isDev, reload: () => setReload(!reload)}, true)\n\n    const getView = () => isDev ? getDevView() : getStandardView(applications, fixedApplications)\n\n    return fetchError ? <Redirect to={isHR ? '/hr/offers' : '/'} />\n        : (fetching ? <CenteredCircularProgress size={80} />\n            : (fixedApplications?.length !== 0 && fixedApplications !== undefined ?\n                getView()\n                 : <EmptyApplicationsView isHR={isHR} isDev={isDev} />\n            )\n        )\n}\n\nconst EmptySelectedApplicationView = () => {\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <img src=\"https://img.myloview.pl/fototapety/job-application-or-employment-resume-research-for-vacancy-outline-concept-work-candidate-documentation-with-cv-motivation-letter-after-job-interview-vector-illustration-business-labor-and-hr-scene-700-255625478.jpg\" alt=\"Application\" style={{width: '80%'}} />\n            <Typography variant=\"h6\" color=\"textSecondary\">Pick application from the list on the right</Typography>\n        </div>\n    )\n}","import {Grid, TextField} from \"@material-ui/core\"\nimport {Controller} from \"react-hook-form\"\nimport React from \"react\";\n\nexport const FormField = (props) => <Grid item xs={12} {...props.additionalGridProps}>\n    <Controller\n        {...props}\n        render={({field, fieldState}) => \n            <TextField \n                {...field}\n                {...props.additionalTextFieldProps} \n                variant=\"outlined\"  \n                error={fieldState.error != null} \n                fullWidth\n                helperText={fieldState.error?.message || \" \"} />\n        } />\n</Grid>","import {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\"\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Controller, useForm} from \"react-hook-form\"\nimport {OfferSkill} from \"../details/OfferSkill\"\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const OfferFormSkillList = (props) => {\n    const classes = useStyles()\n\n    const defaultFormState = {name: \"\", level: \"\"}\n    const skills = props.value || []\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onSkillAdd = (data) => {\n        props.onChange(skills.concat([data]))\n        reset()\n    }\n\n    const onSkillDelete = (idx) => {\n        props.onChange(skills.slice(0, idx).concat(skills.slice(idx+1, undefined)))\n    }\n\n    return <>\n        <form id=\"skill-form\" name=\"skill-form\" onSubmit={handleSubmit(onSkillAdd)} />\n        <Grid item xs={12} sm={6}>\n            <Controller\n                control={control}\n                name=\"name\"\n                rules={{required: true, validate: (skill) => !skills.some(s => s.name === skill)}}\n                defaultValue={defaultFormState.name}\n                render={({field}) => \n                    <TextField\n                        {...field}\n                        label=\"Skill\"\n                        variant=\"outlined\"\n                        form=\"skill-form\"\n                        fullWidth />\n                } \n            />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <FormControl variant=\"outlined\" form=\"skill-form\" fullWidth>\n                <InputLabel>Skill level</InputLabel>\n                <Controller\n                    control={control}\n                    name=\"level\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.level}\n                    render={({field}) => \n                        <Select {...field} label=\"Skill level\" form=\"skill-form\">\n                            <MenuItem value='NICE_TO_HAVE'>Nice to have</MenuItem>\n                            <MenuItem value='JUNIOR'>Junior</MenuItem>\n                            <MenuItem value='REGULAR'>Regular</MenuItem>\n                            <MenuItem value='ADVANCED'>Advanced</MenuItem>\n                            <MenuItem value='MASTER'>Master</MenuItem>\n                        </Select>\n                    } \n                />\n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n            <Button \n                className={classes.button}\n                type=\"submit\" \n                variant=\"contained\" \n                form=\"skill-form\"\n                color=\"secondary\"\n                fullWidth>Add skill</Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Box mt={0} mb={0}>\n                <Grid container>\n                    {skills.map((skill, idx) =>\n                        <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                            <Grid container>\n                                <Grid item xs={11}>\n                                    <OfferSkill key={idx} name={skill.name} skillLevel={skill.level}/>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Box mt={3}>\n                                        <IconButton aria-label=\"delete\" style={{padding:\"0px\"}} onClick={() => onSkillDelete(idx)}>\n                                            <ClearIcon fontSize=\"medium\" />\n                                        </IconButton>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                </Grid>\n            </Box>\n        </Grid>\n        </>\n}","import {Controller, useForm} from \"react-hook-form\"\nimport {Button, Grid, makeStyles} from \"@material-ui/core\"\nimport {FormField} from \"../../commons/formsCommons/FormField\"\nimport React, {useEffect, useState} from \"react\"\nimport {OfferFormSkillList} from \"./OfferFormSkillList\"\nimport {offersAPI} from \"../../../utils/apis/OfferApi\"\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '100%'\n    }\n}))\n\nexport const OfferForm = (props) => {\n    const { id } = useParams()\n    const [fetchError, setFetchError] = useState(false)\n\n    const history = useHistory()\n\n    const defaultFormState = {\n        name:\"\",\n        position:\"\",\n        localization:\"\",\n        minSalary:\"\",\n        maxSalary:\"\",\n        description:\"\",\n        skills:[]\n    }\n    const {handleSubmit, watch, trigger, control, reset} = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const minSalary = watch(\"minSalary\", null)\n    const maxSalary = watch(\"maxSalary\", null)\n\n    function updateOffer(data) {\n        defaultFormState.name = data.name\n        defaultFormState.position = data.position\n        defaultFormState.localization = data.localization\n        defaultFormState.minSalary = data.minSalary\n        defaultFormState.maxSalary = data.maxSalary\n        defaultFormState.description = data.description\n        defaultFormState.skills = data.skills\n        reset(defaultFormState)\n    }\n\n    useEffect(() => {\n        if(id !== undefined){\n            offersAPI.getOfferById(id)\n                .then(data => updateOffer(data))\n                .catch(() => {\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We weren't able to get this offer! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => setFetchError(true))\n                })\n        }\n    }, [id])\n\n    const classes = useStyles()\n\n    useEffect(() => {if(maxSalary) trigger(\"minSalary\")}, [trigger, maxSalary])\n    useEffect(() => {if(minSalary) trigger(\"maxSalary\")}, [trigger, minSalary])\n\n    const onSubmit = (data) => {\n        const formResult = Object.assign(data, {\n            minSalary: parseInt(data.minSalary),\n            maxSalary: parseInt(data.maxSalary),\n            creatorId: parseInt(data.creatorId),\n            offerId: id\n        })\n        withSwal({\n            loadingTitle: \"Saving offer\",\n            promise: () => props.onSubmit(formResult),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved offer!\",\n            successFunction: () => history.push('/hr/offers'),\n            errorSwalTitle: \"We couldn't save this offer for you\"\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <div style={{width: \"90%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n        <form id=\"offer-form\" name=\"offer-form\" onSubmit={handleSubmit(onSubmit)} />\n        <Grid container spacing={2}>\n            <FormField\n                control={control}\n                name=\"name\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Offer name\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"position\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Position\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"localization\"\n                rules={{\n                    required: {value: true, message: \"Required field\"}\n                }} \n                additionalTextFieldProps={{\n                    label:\"Location\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }} />\n            <FormField\n                control={control}\n                name=\"minSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    max: {value: maxSalary, message: \"Minimum salary cannot be higher than maximum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Minimum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                control={control}\n                name=\"maxSalary\"\n                rules={{\n                    required: {value: true, message: \"Required field\"},\n                    pattern: {value: /^[1-9]\\d*$/, message: \"Must be a positive number\"},\n                    min: {value: minSalary, message: \"Maximum salary cannot be lower than minimum\"}\n                }} \n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    label:\"Maximum salary\",\n                    autoComplete: \"off\",\n                    form:\"offer-form\"\n                }}\n                additionalGridProps={{\n                    xs:12,\n                    sm:6\n                }} />\n            <FormField\n                name=\"description\"\n                control={control}\n                rules={{required: {value: true, message: \"Required field\"}}}\n                defaultValue=\"\"\n                additionalTextFieldProps={{\n                    multiline: true,\n                    minRows: 8,\n                    maxRows: 8,\n                    autoComplete: \"off\",\n                    label:\"Short description\",\n                    form:\"offer-form\"\n                }}/>\n            <Controller\n                name=\"skills\"\n                control={control}\n                defaultValue={[]}\n                render={({field: {onChange, value}}) => \n                    <OfferFormSkillList onChange={onChange} value={value} />\n                }\n            />\n            <Grid item xs={false} sm={8} />\n            <Grid item xs={12} sm={4}>\n                <Button className={classes.button}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        form=\"offer-form\"\n                        color=\"primary\"\n                        fullWidth>\n                    Save offer\n                </Button>\n            </Grid>\n        </Grid></div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Box, Card, CardContent, Typography, useTheme} from \"@material-ui/core\";\nimport {TwoColumnDnD} from \"estella-two-column-dnd\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const ManageStages = ({processId}) => {\n\n    const theme = useTheme()\n\n    const [stages, setStages] = useState([])\n    const [possibleStages, setPossibleStages] = useState([])\n    const [fetchError, setFetchError] = useState(false)\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        let swal = new Swal({\n            title: \"Getting data\"\n        })\n        Swal.showLoading()\n        processAPI.getProcessById(processId)\n            .then(data => {\n                setStages(data.stages);\n                swal.close()\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get process data!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n        processAPI.getAllPossibleStages()\n            .then(data => setPossibleStages(data))\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get possible stages!\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n            .finally(() => swal.close())\n    }, [reload, processId])\n\n    const getPossibleStages = () => possibleStages.map(stage => {\n        return {'type': stage}\n    })\n\n    const getStages = () => stages\n\n    const handleSubmit = (items) => {\n        if(items !== getStages()) {\n            withSwal({\n                loadingTitle: \"Updating stages\",\n                promise: () => processAPI.updateProcessStages(processId, items.map(item => item.type)),\n                successSwalTitle: \"Stages Updated\",\n                successFunction: () => setReload(reload => !reload)\n            })\n        }\n    }\n\n    const fireSwal = (title, text, icon) => {\n        Swal.fire({\n            title: title,\n            text: text,\n            icon: icon\n        })\n    }\n\n    return fetchError ? <Redirect to=\"/\" /> : <TwoColumnDnD\n        firstListItems={getStages()}\n        secondListItems={getPossibleStages()}\n        //temporary solution - would be the best to actually change TwoColumnDnD to fire callback about setting items length\n        forbiddenIndexes={[0, getStages().length]}\n        warningFunction={() => fireSwal(\n            \"You can't do this!\",\n            \"We're sorry, but you cannot set this stage here! See help for more information.\",\n            \"warning\"\n        )}\n        itemRender={(item) => (\n            <Box m={1}>\n                <Card variant=\"outlined\" style={{textAlign: \"center\"}}>\n                    <CardContent>\n                        <Typography>{item.type}</Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )}\n        onFirstListChange={(items) => handleSubmit(items)}\n        leftSubmitGridProps={{xs: 10}}\n        centerSubmitGridProps={{xs: 1}}\n        rightSubmitGridProps={{xs: 1}}\n        materialButtonProps={{variant: \"outlined\"}}\n        submitDivStyle={{marginTop: \"15px\"}}\n        listStyle={{height: \"60vh\", backgroundColor: theme.palette.focused.dark, padding: \"1em\", overflowY: \"scroll\"}}\n    />\n}","import {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from 'prop-types';\n\nexport const EStellaDatePicker = ({ divStyle, additionalProps, selectedDate, handleDateChange, label=\"End of recruitment process\" }) => {\n\n    return (\n        <div style={{...divStyle}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    value={selectedDate}\n                    label={label}\n                    onChange={handleDateChange}\n                    {...additionalProps}\n                />\n            </MuiPickersUtilsProvider>\n        </div>\n    )\n}\n\nEStellaDatePicker.propTypes = {\n    style: PropTypes.object,\n    additionalProps: PropTypes.object,\n    handleDateChange: PropTypes.func.isRequired,\n    selectedDate: PropTypes.any.isRequired\n}","import {EStellaDatePicker} from \"../../commons/EStellaDatePicker\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\n\nexport const ManageDate = ({selectedDate, onChange, processStartDate, disabled, label}) => {\n\n    const handleDateChange = (date) => {\n        if (!processStartDate || date > new Date(processStartDate)) {\n            onChange(date)\n        } else {\n            Swal.fire({\n                title: \"Oops, you cannot do this!\",\n                text: \"Looks like you've tried to set a date that's earlier than today!\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    return <EStellaDatePicker\n            selectedDate={selectedDate}\n            handleDateChange={handleDateChange}\n            divStyle={{marginLeft: \"1em\", marginRight: \"auto\"}}\n            disabled={disabled}\n            label={label}\n        />\n}\n\nManageDate.propTypes = {\n    selectedDate: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import {ManageDate} from \"./ManageDate\";\nimport {Button, Card, CardContent, Divider, Grid, Typography} from \"@material-ui/core\";\nimport Swal from \"sweetalert2\";\nimport {useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\n\nexport const Dates = ({ process, reload, setReload }) => {\n\n    const [selectedEndDate, setSelectedEndDate] = useState(process?.endDate || new Date().toLocaleDateString())\n    const [selectedStartDate, setSelectedStartDate] = useState(process?.startDate || new Date().toLocaleDateString())\n    \n    const isProcessStarted = () => process?.startDate != null && new Date(process?.startDate) <= new Date()\n\n    const startProcess = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after you start your process\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Starting process\",\n                    promise: () => processAPI.startProcess(process.id),\n                    successSwalTitle: \"Process Started!\",\n                    successFunction: () => setReload(!reload)\n                })\n            }\n        })\n    }\n\n    const handleEndSubmit = () => {\n        withSwal({\n            loadingTitle: \"Updating end date\",\n            promise: () => processAPI.changeEndDate(process.id, selectedEndDate),\n            successSwalTitle: \"Date updated\",\n            successFunction: () => setReload(!reload)\n        })\n    }\n\n    const handleStartSubmit = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to modify stages after the date your process will start\",\n            icon: \"warning\",\n            showCancelButton: true\n        }).then(result => {\n            if(result.isConfirmed) {\n                withSwal({\n                    loadingTitle: \"Updating start date\",\n                    promise: () => processAPI.changeStartDate(process.id, selectedStartDate),\n                    successSwalTitle: \"Date updated\",\n                    successFunction: () => setReload(!reload)\n                })      \n            }\n        })\n    }\n\n    return (\n        <>\n            <Grid container spacing={3} style={{height: \"100%\", textAlign: 'center'}} direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule Start Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedStartDate}\n                                        onChange={(date) => setSelectedStartDate(date)}\n                                        label=\"Start of recruitment process\"\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleStartSubmit} disabled={isProcessStarted()}>Schedule</Button>\n                            </div>\n                            <Divider style={{marginTop: '1em', marginBottom: '1em'}} />\n                            <Typography variant=\"h6\" style={{marginBottom: '5px'}}>Or</Typography>\n                            <Button variant=\"contained\" color=\"primary\" onClick={startProcess} disabled={isProcessStarted()}>Start your process now!</Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Card style={{width: \"100%\", height: \"100%\"}} variant=\"outlined\">\n                        <CardContent>\n                            <Typography variant=\"h6\">Schedule End Of Process</Typography>\n                            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '1em', alignItems: 'center', justifyContent: 'center'}}>\n                                <ManageDate selectedDate={selectedEndDate}\n                                        onChange={(date) => setSelectedEndDate(date)}\n                                        processStartDate={process?.startDate}\n                                />\n                                <Button variant=\"outlined\" color=\"primary\" onClick={handleEndSubmit}>Schedule</Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\n","import {ManageStages} from \"./ManageStages\";\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport Swal from \"sweetalert2\";\nimport React, {useEffect, useState} from \"react\";\nimport {processAPI} from \"../../../utils/apis/ProcessAPI\";\nimport {Dates} from \"./Dates\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const ManageProcess = () => {\n\n    const {id} = useParams()\n    const [fetchError, setFetchError] = useState(false)\n    const [process, setProcess] = useState(null)\n\n    const [reload, setReload] = useState(false)\n\n    useEffect(() => {\n        processAPI.getProcessById(id)\n            .then(data => {\n                setProcess(data)\n            })\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    text: \"We were unable to get this process! You will be redirected to home page\",\n                    icon: \"error\"\n                }).then(() => setFetchError(true))\n            })\n    }, [id, reload])\n\n    const showHelp = () => {\n        Swal.fire({\n            title: \"Help\",\n            icon: \"question\",\n            html: 'Here are some most commons tips:<br>' +\n                '<ul>' +\n                '<li>To delete stage from right list, simply drag it outside the list</li>' +\n                '<li>Remember that you cannot insert before APPLIED stage and after ENDED stage</li>' +\n                '</ul>'\n        })\n    }\n\n    const ManageProcessInside = () =>\n        process == null ? <CenteredCircularProgress size={80} /> : <div style={{marginLeft: \"1em\", marginRight: \"1em\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                    <Grid container spacing={2} direction=\"column\">\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"auto\"}}>\n                            <Grid item><Typography variant=\"h5\">Recruitment Process Settings</Typography></Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n\n                        <Grid item style={{marginLeft: \"1em\", marginRight: \"1em\", marginTop: '1em'}}>\n                            <Dates process={process} reload={reload} setReload={setReload} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item style={{marginLeft: \"auto\", marginRight: \"2em\"}}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item><Typography variant=\"h6\">Stages</Typography></Grid>\n                                <Grid item><HelpIcon onClick={showHelp} color=\"primary\"/></Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item> <Divider/> </Grid>\n                        <Grid item style={{marginTop: '1em'}}>\n                            <ManageStages processId={id}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n\n    return fetchError ? <Redirect to=\"/\" /> : <ManageProcessInside />\n}","import {useForm} from \"react-hook-form\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport React from \"react\";\nimport {useLoggedIn} from \"../../../utils/hooks/useLoggedIn\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const LoginForm = (props) => {\n\n    const {loggedIn, login} = useLoggedIn()\n\n    const defaultFormState = {\n        login: \"\",\n        password: \"\"\n    }\n\n    const {handleSubmit, control, reset} = useForm({mode: 'onChange', defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Logging in...\",\n            promise: () => loginAPI.login(data.login, data.password),\n            successSwalTitle: \"Successfully logged in!\",\n            successFunction: (token) => {\n                reset()\n                login()\n                props.reload.setReload(!props.reload.reload)\n            },\n            errorSwalTitle: \"We couldn't log you in!\"\n        })\n        if(props.onSubmit) {\n            props.onSubmit(data)\n        }\n    }\n\n    return loggedIn ? <Redirect to=\"/\" /> : <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Login!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"login-form\" name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <FormField\n                            control={control}\n                            name=\"login\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Login\"\n                            }}\n                        />\n                        <FormField\n                            control={control}\n                            name=\"password\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Password\",\n                                autoComplete: \"off\",\n                                type: \"password\"\n                            }}\n                        />\n                        <Grid item xs={false} sm={8} />\n                        <Grid item xs={12} sm={4}>\n                            <Button type=\"submit\" variant=\"contained\" size=\"large\" fullWidth color=\"primary\">Login</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Card>\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\n\nexport const UserRegistration = (props) => {\n    const defaultFormState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerUser(data.login, data.password, data.firstName, data.lastName),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"You can log in now!\",\n            confirmButtonText: \"Go to login page\",\n            successFunction: (response) => {\n                reset()\n                history.push('/login')\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"user-register-form\" name=\"user-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"user-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"firstName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"First Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"lastName\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Last Name\",\n                            form: \"user-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" form=\"user-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n}","import {useForm} from \"react-hook-form\";\nimport {withSwal} from \"../../commons/formsCommons/WithSwal\";\nimport {loginAPI} from \"../../../utils/apis/LoginAPI\";\nimport {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../../commons/formsCommons/FormField\";\nimport {useHistory} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const CompanyRegistration = () => {\n\n    const defaultFormState = {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const history = useHistory()\n\n    const { handleSubmit, control, reset } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = (data) => {\n        withSwal({\n            loadingTitle: \"Registering...\",\n            promise: () => loginAPI.registerCompany(data.login, data.password, data.name),\n            successSwalTitle: \"Successfully registered!\",\n            successSwalText: \"Your company was successfully registered and now it's waiting for our verification. Please, be patient and wait for email from us!\",\n            confirmButtonText: \"Back to main page\",\n            successFunction: () => {\n                reset()\n                history.push(\"/\")\n            },\n            errorSwalTitle: \"We couldn't register you!\"\n        })\n    }\n\n    return (\n        <Card variant=\"outlined\" style={{width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\", padding: \"30px 10px\"}}>\n            <Typography variant=\"h5\" style={{marginBottom: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", width: \"80%\"}}>Register your company!</Typography>\n            <div style={{width: \"80%\", marginRight: \"auto\", marginLeft: \"auto\", padding: \"10px\", paddingBottom: \"30px\"}}>\n                <form id=\"company-register-form\" name=\"company-register-form\" onSubmit={handleSubmit(onSubmit)} />\n\n                <Grid container spacing={2}>\n                    <FormField\n                        control={control}\n                        name=\"login\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                            pattern: {value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Login is your email, so it must be a valid email\"}\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Email\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"password\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Password\",\n                            form: \"company-register-form\",\n                            type: \"password\"\n                        }}\n                    />\n                    <FormField\n                        control={control}\n                        name=\"name\"\n                        rules={{\n                            required: {value: true, message: \"Required field\"},\n                        }}\n                        defaultValue=\"\"\n                        additionalTextFieldProps={{\n                            label: \"Company Name\",\n                            form: \"company-register-form\"\n                        }}\n                    />\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" form=\"company-register-form\" fullWidth>Register</Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Card>\n    )\n\n}","import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nexport const RegistrationRadioButtons = (props) => {\n\n    const handleChange = ({ target }) => {\n        props.handleChange(target.value)\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n            <RadioGroup name=\"registrationRender\" value={props.value} onChange={handleChange}\n                        style={{display: \"inline\", marginBottom: \"2em\"}}>\n                <FormControlLabel value=\"user\" control={<Radio/>} label=\"User Registration\"/>\n                <FormControlLabel value=\"company\" control={<Radio/>} label=\"Company Registration\"/>\n            </RadioGroup>\n        </div>\n    )\n}\n\nRegistrationRadioButtons.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}","import React, {useState} from \"react\";\nimport {UserRegistration} from \"./UserRegistration\";\nimport {CompanyRegistration} from \"./CompanyRegistration\";\nimport {RegistrationRadioButtons} from \"./RegistrationRadioButtons\";\n\nexport const RegistrationRouting = () => {\n\n    const [render, setRender] = useState(\"user\")\n\n    const handleChange = (value) => {\n        setRender(value)\n    }\n\n    const getRegistrationForm = () => {\n        switch (render) {\n            case 'user':\n                return <UserRegistration />\n            case 'company':\n                return <CompanyRegistration />\n            default:\n                return null\n        }\n    }\n\n    return(\n        <div>\n            <RegistrationRadioButtons  handleChange={(value) => handleChange(value)} value={render}/>\n            {getRegistrationForm()}\n        </div>\n    )\n}","import {MeetingOrganizer} from \"e-stella-meeting-organizer\";\nimport {meetingOrganizerLink} from \"../../../utils/apis/APILinks\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {jwtUtils} from \"../../../utils/jwt/jwtUtils\";\nimport {constants} from \"../../../utils/constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {interviewAPI} from \"../../../utils/apis/InterviewAPI\";\nimport Swal from \"sweetalert2\";\nimport CenteredCircularProgress from \"../../commons/CenteredCircularProgress\";\n\nexport const MeetingOrganizerWrapper = ({ type : propType }) => {\n\n    const {type : paramType, uuid} = useParams()\n    const [outsideValues, setOutsideValues] = useState(null)\n    const [fetchError, setFetchError] = useState(false)\n    const [userData, setUserData] = useState(null)\n\n    let redirectPath = \"/\"\n\n    const type = paramType || propType\n\n    useEffect(() => {\n        if(type === \"organizer\") {\n            interviewAPI.getNewestInterview(uuid)\n                .then(data => {\n                    setOutsideValues({hosts: data?.hosts || [], guest: data?.application?.jobSeeker?.user?.mail || '', uuid: data?.id})\n                })\n                .catch(() =>\n                    Swal.fire({\n                        title: \"Error\",\n                        text: \"We couldn't find the interview data for this application! You will be redirected to home page\",\n                        icon: \"error\"\n                    }).then(() => {\n                        setFetchError(true)\n                    })\n                )\n        } else {\n            setUserData({uuid, userType: type})\n        }\n    }, [type, uuid])\n\n    const getStillFetching = () => type === \"organizer\" ? !!outsideValues : !!userData \n\n    return fetchError ? <Redirect to={redirectPath} /> : (\n        getStillFetching() ? <MeetingOrganizer meetingOrganizerBaseLink={meetingOrganizerLink}\n                                userData={userData}\n                                outsideJwt={jwtUtils.getAuthToken()}\n                                drawerStyle={{marginTop: `calc(${constants.navbar_height} + 1em)`}}\n                                outsideMeetingValues={outsideValues} />: <CenteredCircularProgress size={80} />\n    )\n}","import {offersAPI} from \"../../../utils/apis/OfferApi\";\nimport {hrOfferButtons} from \"../HrOfferButtons\";\nimport {theme} from \"../../../utils/theme\";\nimport {OffersView} from \"./OffersView\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Drawer, List, ListItem} from \"@material-ui/core\";\nimport {constants} from \"../../../utils/constants\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst marginWithDrawer = \"100px\"\n\nconst HrOffersView = () => <div style={{marginLeft: marginWithDrawer}}>\n    <OffersView\n        getOffers={() => offersAPI.getOffersFromHr()}\n        buttons={hrOfferButtons(theme)}\n    />\n    <Drawer\n        variant=\"permanent\"\n        style={{display: \"flex\", alignItems: \"center\", width: marginWithDrawer}}\n    >\n        <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n            <ListItem>\n                <Link to=\"/hr/offers/add\">\n                    <IconButton>\n                        <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                    </IconButton>\n                </Link>\n            </ListItem>\n        </List>\n    </Drawer>\n</div>\n\nexport default HrOffersView","import {jobSeekerAPI} from \"../../utils/apis/JobSeekerAPI\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {DeleteForeverOutlined, GetAppOutlined} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Box from \"@material-ui/core/Box\";\nimport FilesDropzone from \"./FilesDropzone\";\n\nfunction _base64ToArrayBuffer(base64) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nconst FilesChangedTip = ({onSaveFiles}) =>\n    <Paper elevation={0} variant=\"outlined\" style={{\n        padding: \"1em\",\n        paddingLeft: \"1em\",\n        backgroundColor: deepOrange[100],\n        display: \"flex\"\n    }}>\n        <Grid container>\n            <Grid item xs={12} md={9} lg={12}>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    height=\"100%\"\n                >\n                    <Typography>Click \"Save files\" in order to save your changes</Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={3} lg={12}>\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onSaveFiles}>Save files</Button>\n            </Grid>\n        </Grid>\n    </Paper>\n\nconst OldFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"primary\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\n\nconst NewFilePaper = ({children}) =>\n    <Paper style={{\n        padding: \"5px\",\n        paddingLeft: \"1em\",\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }}>\n        {children}\n    </Paper>\n\nconst FileCard = ({file, index, initialFiles, handleDownload, handleDelete}) => {\n    const ch = <>\n        {file.fileName}\n        <div>\n            <IconButton\n                onClick={() => handleDownload(file.fileName, file.fileBase64)}\n            >\n                <GetAppOutlined/>\n            </IconButton>\n            <IconButton\n                onClick={() => handleDelete(index)}\n            >\n                <DeleteForeverOutlined/>\n            </IconButton>\n        </div>\n    </>\n    return <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n        {initialFiles.some(a => a.id === file.id) ?\n            <OldFilePaper>{ch}</OldFilePaper>:\n            <NewFilePaper>{ch}</NewFilePaper>}\n    </Grid>\n}\n\nexport const FilesPage = () => {\n    const [downloadedFiles, setDownloadedFiles] = useState([])\n    const [files, setFiles] = useState([])\n\n\n    const downloadedFilesSet = new Set(downloadedFiles)\n    const filesSet = new Set(files)\n\n    const filesChanged = downloadedFiles.some(df => !filesSet.has(df)) || files.some(f => !downloadedFilesSet.has(f))\n\n    const fetchFiles = () => jobSeekerAPI.getFiles().then(f => {\n        f.sort((a, b) => a.id - b.id)\n        setDownloadedFiles(f)\n        setFiles(f)\n    })\n\n    const onDrop = useCallback(acceptedFiles => {\n        Promise.all(acceptedFiles.map(value =>\n            value.arrayBuffer().then(\n                arrayBuffer => { return {\n                    fileName: value.name,\n                    fileBase64: _arrayBufferToBase64(arrayBuffer)\n                }}\n            )\n        )).then(newFiles => {\n            setFiles(oldFiles => oldFiles.concat(newFiles))\n        })\n    }, [])\n\n    useEffect(\n        fetchFiles,\n    []\n    )\n\n    function handleDownload(fileName, base64) {\n        const url = window.URL.createObjectURL(new Blob([_base64ToArrayBuffer(base64)]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    function handleDelete(index) {\n        setFiles(oldFiles => oldFiles.filter((_, ind) => index !== ind))\n    }\n\n    function onSaveFiles() {\n        withSwal({\n            title: \"Saving files\",\n            promise: () => jobSeekerAPI.insertFiles(files),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully saved your files!\",\n            errorSwalTitle: \"Something went wrong\",\n            errorSwalText: \"We couldn't save these files for you\",\n            successFunction: fetchFiles\n        })\n    }\n\n    return <div>\n        <Grid container spacing={2}>\n            <Grid item lg={files.length ? 6 : 12} xs={12}>\n                <FilesDropzone onDrop={onDrop} />\n            </Grid>\n            <Grid container item alignContent=\"flex-start\" lg={files.length ? 6 : false} xs={12}>\n                <Grid item xs={12} style={{marginBottom: \"15px\"}}>\n                    {filesChanged && <FilesChangedTip onSaveFiles={onSaveFiles}/>}\n                </Grid>\n                {files.map((value, index) =>\n                    <FileCard key={index} index={index} file={value} initialFiles={downloadedFiles} handleDownload={handleDownload} handleDelete={handleDelete} />\n                )}\n            </Grid>\n            <Grid item xs={false} md={6} lg={10} />\n            <Grid item xs={12} md={6} lg={2}>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {userTypes} from \"../../utils/Enums\";\n\n\nfunction UserInfo({label, value}) {\n    return <><Grid item xs={12} sm={3}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"lightgrey\"}}><Box display=\"flex\" justifyContent=\"flex-end\">{label}</Box></Paper>\n    </Grid>\n    <Grid item xs={12} sm={9}>\n        <Paper style={{padding: \"1em\", backgroundColor: \"primary\"}}>{value}</Paper>\n    </Grid></>\n}\n\nfunction displayType(userType) {\n    switch (userType) {\n        case userTypes.JOB_SEEKER:\n            return \"Candidate\"\n\n        case userTypes.HR:\n            return \"Human Resources Specialist\"\n\n        case userTypes.ORGANIZATION:\n            return \"Organization\"\n\n        default:\n            return undefined\n    }\n}\n\nexport const ProfilePage = () => {\n    const user = jwtUtils.getUser()\n    return <Grid container>\n        <Grid item lg={2} md={1} sm={false}/>\n        <Grid container spacing={2} item lg={8} md={10} sm={12}>\n            <UserInfo label=\"ID:\" value={user.userId} />\n            <UserInfo label=\"Name:\" value={`${user.firstName} ${user.lastName}`} />\n            <UserInfo label=\"Mail:\" value={user.mail} />\n            <UserInfo label=\"Type:\" value={displayType(user.userType)} />\n        </Grid>\n        <Grid item lg={2} md={1} sm={false}/>\n    </Grid>\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport {authFetch} from \"../authFetch\";\n\nexport const userAPI = {\n\n    updateUser: function (userRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userRequest)\n        })\n    },\n\n    updatePersonalData: function (personalData) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/personalData`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(personalData)\n        })\n    },\n\n    updatePassword: function (passwordRequest) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/users/password`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(passwordRequest)\n        })\n    }\n}","import {Button, Card, Grid, Typography} from \"@material-ui/core\";\nimport {FormField} from \"../commons/formsCommons/FormField\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useEffect} from \"react\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userAPI} from \"../../utils/apis/UserAPI\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst EditPersonalInfoForm = () => {\n    const user = jwtUtils.getUser()\n    const defaultFormState = {\n        mail: user.mail,\n        firstName: user.firstName,\n        lastName: user.lastName\n    }\n\n    const { handleSubmit, control } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const onSubmit = ({firstName, lastName}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePersonalData({firstName, lastName}),\n            successSwalTitle: \"Successful change!\",\n            errorSwalTitle: \"We couldn't change your personal data!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit your personal data</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"mail\"\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Email\",\n                                disabled: true\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"firstName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"First Name\",\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"lastName\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Last Name\",\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nconst EditPasswordForm = () => {\n    const defaultFormState = {\n        oldPassword: \"\",\n        newPassword: \"\",\n        repeatedPassword: \"\"\n    }\n\n    const { handleSubmit, control, watch, trigger } = useForm({mode: \"onChange\", defaultValues: defaultFormState})\n\n    const newPasswordInput = watch(\"newPassword\")\n\n    useEffect(\n        () => {\n            if(newPasswordInput)\n                trigger(\"repeatedPassword\")\n        },\n        [newPasswordInput, trigger]\n    )\n\n    const onSubmit = ({oldPassword, newPassword}) =>\n        withSwal({\n            loadingTitle: \"Waiting for server response...\",\n            promise: () => userAPI.updatePassword({oldPassword: oldPassword, newPassword: newPassword}),\n            successSwalTitle: \"Successfully changed password!\",\n            errorSwalTitle: \"We couldn't change your password!\"\n        })\n\n    return <Card variant=\"outlined\" style={{paddingBottom: \"30px\", paddingTop: \"30px\"}}>\n        <div style={{width: \"80%\", margin: \"auto\"}}>\n            <form onSubmit={handleSubmit(onSubmit)} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"85%\"}}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" style={{marginBottom: \"20px\"}}>Edit password</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"oldPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Current password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"newPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"}\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"New password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormField\n                            control={control}\n                            name=\"repeatedPassword\"\n                            rules={{\n                                required: {value: true, message: \"Required field\"},\n                                pattern: {value: new RegExp(`^${newPasswordInput}$`), message: \"Passwords have to match\"},\n                            }}\n                            defaultValue=\"\"\n                            additionalTextFieldProps={{\n                                label: \"Repeat password\",\n                                type: \"password\"\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={false} sm={8} />\n                    <Grid item xs={12} sm={4}>\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>Save</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    </Card>\n}\n\nexport const SettingsPage = () => {\n    return <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <EditPersonalInfoForm />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <EditPasswordForm />\n            </Grid>\n        </Grid>\n    </>\n}","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid} from \"@material-ui/core\";\nimport {FilesPage} from \"./FilesPage\";\nimport {jwtUtils} from \"../../utils/jwt/jwtUtils\";\nimport {userMenuTabs, userTypes} from \"../../utils/Enums\";\nimport {ProfilePage} from \"./ProfilePage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction TabPanel({ children, value, tabName, ...other }) {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== tabName}\n            id={`tabpanel-${tabName}`}\n            aria-labelledby={`tab-${tabName}`}\n            style={{padding: \"1em\", color: \"primary\"}}\n            {...other}\n        >\n            {value === tabName && <Box>{children}</Box>}\n        </div>\n    );\n}\n\nfunction a11yProps(tabName) {\n    return {\n        id: `tab-${tabName}`,\n        'aria-controls': `tabpanel-${tabName}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    indicator: {\n        left: \"0px\"\n    }\n}));\n\nexport default function SettingsOverlay(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const state = props.location?.state\n    const [value, setValue] = React.useState(state?.subPage || userMenuTabs.PROFILE);\n    const user = jwtUtils.getUser();\n\n    const handleChange = (event, newValue) => setValue(newValue)\n\n    return user ? (<Grid container>\n        <Box clone order={{xs: 2, md: 1}}>\n            <Grid item xs={12} md={9} lg={10}>\n                <TabPanel value={value} tabName={userMenuTabs.PROFILE} dir={theme.direction}>\n                    <ProfilePage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.SETTINGS} dir={theme.direction}>\n                    <SettingsPage />\n                </TabPanel>\n                <TabPanel value={value} tabName={userMenuTabs.FILES} dir={theme.direction}>\n                    <FilesPage />\n                </TabPanel>\n            </Grid>\n        </Box>\n        <Box clone order={{xs: 1, md: 2}}>\n            <Grid item xs={12} md={3} lg={2}>\n                <Tabs\n                    value={value}\n                    orientation=\"vertical\"\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"settings tabs\"\n                >\n                    <Tab label=\"My Profile\" value={userMenuTabs.PROFILE} {...a11yProps(userMenuTabs.PROFILE)} />\n                    <Tab label=\"Settings\" value={userMenuTabs.SETTINGS} {...a11yProps(userMenuTabs.SETTINGS)} />\n                    {user?.userType === userTypes.JOB_SEEKER && <Tab label=\"Files\" value={userMenuTabs.FILES} {...a11yProps(userMenuTabs.FILES)} />}}\n                </Tabs>\n            </Grid>\n        </Box>\n        </Grid>) : <Redirect to=\"/\" />;\n}","import {recruitmentServiceBasicAPILink} from \"./APILinks\";\nimport Swal from \"sweetalert2\";\nimport {authFetch} from \"../authFetch\";\n\n\nexport const organizationsAPI = {\n    getHrPartnersByOrganization: function() {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/organizations/hrpartners`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            }\n        }).then(response => response.json())\n            .catch(() => {\n                Swal.fire({\n                    title: \"Error\",\n                    test: \"We weren't able to get your organizations' HR users\",\n                    icon: \"error\"\n                })\n            })\n\n    },\n\n    addHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(form)\n        })\n    },\n\n    deleteHrPartner(form) {\n        return authFetch(recruitmentServiceBasicAPILink + `/api/hrpartners/mail`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mail: form.mail\n            })\n        })\n    },\n\n}","import {Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {validateEmail} from \"../../utils/functions\";\nimport React, {useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        height: '97%'\n    }\n}))\n\nexport const PartnerForm = (props) => {\n\n    const classes = useStyles()\n\n    const defaultFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        mail: \"\"\n    }\n\n    const [users, setUsers] = useState([props.users])\n\n    const {handleSubmit, control, reset} = useForm({defaultValues:defaultFormState})\n\n    const onUserAdd = (data) => {\n        withSwal({\n            loadingTitle: \"Adding HR user\",\n            promise: () => organizationsAPI.addHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully added HR user!\",\n            successFunction: () => {\n                setUsers(users.concat(data))\n                reset()\n                if(props.onSubmit){\n                    props.onSubmit(data)\n                }\n                props.userAdded(data)\n            },\n            errorSwalTitle: \"We couldn't save this user for you\"\n        })\n\n    }\n\n    return <>\n        <form id=\"user-form\" name=\"user-form\" onSubmit={handleSubmit(onUserAdd)}/>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"firstName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.firstName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"lastName\"\n                    rules={{required: true}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <Controller\n                    control={control}\n                    name=\"mail\"\n                    rules={{required: true, validate: (mail) => !users.some(u => u.mail === mail) && validateEmail(mail)}}\n                    defaultValue={defaultFormState.lastName}\n                    render={({field}) =>\n                        <TextField\n                            {...field}\n                            label=\"e-mail address\"\n                            variant=\"outlined\"\n                            form=\"user-form\"\n                            fullWidth />\n                    }\n                />\n            </Grid>\n\n\n            <Grid item xs={12} sm={3}>\n                <Button\n                    className={classes.button}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    form=\"user-form\"\n                    fullWidth>Add HR user</Button>\n            </Grid>\n    </>\n}","import {Box, Card, CardContent, Divider, Typography, useTheme} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const OrganizationPartner = ({firstName, lastName, mail}) => {\n\n    const theme = useTheme()\n\n    return (\n        <Box m={2}>\n            <Card style={{backgroundColor: theme.palette.card.light}}>\n                <CardContent>\n                    <Box m={1}>\n                        <Typography>\n                            {firstName}\n                        </Typography>\n                    </Box>\n                    <Box m={1}>\n                        <Typography>\n                            {lastName}\n                        </Typography>\n                    </Box>\n                    <Divider />\n                    <Box m={1}>\n                        <Typography color=\"textSecondary\">\n                            {mail}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}","import {Box, Grid, IconButton} from \"@material-ui/core\";\nimport React from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {OrganizationPartner} from \"./OrganizationPartner\";\n\nexport const OrganizationPartnerList = ({onUserDelete, users}) =>\n    <Box mt={0} mb={0}>\n        <Grid container>\n            {users.map((user, idx) =>\n                <Grid key={idx} item xs={12} sm={6} md={4} lg={3}>\n                    <Grid container>\n                        <Grid item xs={11}>\n                            <OrganizationPartner key={idx} firstName={user.firstName} lastName={user.lastName}\n                                                 mail={user.mail}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Box mt={3}>\n                                <IconButton aria-label=\"delete\" onClick={() => onUserDelete(idx, user)}>\n                                    <ClearIcon fontSize=\"medium\"/>\n                                </IconButton>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>)}\n        </Grid>\n    </Box>","import {Grid} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {organizationsAPI} from \"../../utils/apis/OrganizationApi\";\nimport {PartnerForm} from \"./PartnerForm\";\nimport {withSwal} from \"../commons/formsCommons/WithSwal\";\nimport {OrganizationPartnerList} from \"./OrganizationPartnerList\";\n\nexport const OrganizationPartnersManagement = (props) => {\n\n    const [users, setUsers] = useState([])\n\n    function updateUsers(data) {\n        setUsers(data.map(el => el.user))\n    }\n\n    useEffect(() => {\n        organizationsAPI.getHrPartnersByOrganization()\n            .then(data => {\n                updateUsers(data)\n            })\n    }, [])\n\n\n    const onUserDelete = (idx, data) => {\n        withSwal({\n            loadingTitle: \"Deleting HR user\",\n            promise: () => organizationsAPI.deleteHrPartner(data),\n            successSwalTitle: \"Success\",\n            successSwalText: \"You've successfully deleted HR user!\",\n            successFunction: () => setUsers(users.slice(0, idx).concat(users.slice(idx+1, undefined))),\n            errorSwalTitle: \"We couldn't delete this user for you\"\n        })\n        if (props.onDelete) {\n            props.onDelete(data)\n        }\n    }\n\n    return <div style={{width: \"95%\", marginRight: \"auto\", marginLeft: \"auto\", paddingBottom: \"30px\"}}>\n        <Grid container spacing={2}>\n            <PartnerForm users={users} userAdded={(user) => setUsers(users.concat(user))}/>\n        </Grid>\n        <Grid item xs={12}>\n            <OrganizationPartnerList users={users} onUserDelete={onUserDelete} />\n        </Grid>\n    </div>\n}","import {Card, Typography} from '@material-ui/core';\n\nexport const SingleTestCase = ({ testCase }) => {\n\n    return (\n        <Card style={{margin: '1em 0', padding: '1em', height: '8vh'}}>\n            <Typography variant=\"body1\">\n                Test Data: {testCase?.testData} <br />\n                Expected Result: {testCase?.expectedResult}\n            </Typography>\n        </Card>\n    )\n}","import {Card, Typography, useTheme} from '@material-ui/core'\n\nexport const SingleResult = ({ result }) => {\n\n    const theme = useTheme()\n\n    console.log(result)\n\n    const getBackgroundColor = () => result?.err || !result?.passed ? theme.status.danger.light : theme.status.success.light\n\n    const getText = () => result?.err ? `Error: ${result.err}` : `Result: ${result.result}`\n\n    return (\n        <Card style={{backgroundColor: getBackgroundColor(), margin: '1em 0', padding: '1em', height: '8vh', alignItems: 'center', display: 'flex'}}>\n            <Typography variant=\"body1\">\n                {getText()}\n            </Typography>\n        </Card>\n    )\n}","import MonacoEditor from 'react-monaco-editor';\nimport {decodeBase64} from '../../../utils/hooks/Base64';\nimport {MarkdownViewer} from '../../commons/MarkdownViewer';\nimport {Card, Typography} from '@material-ui/core'\nimport { useState, useRef, useEffect } from 'react'\nimport {SingleTestCase} from './SingleTestCase'\nimport {SingleResult} from './SingleResult'\n\nexport const SingleTaskReview = ({ task }) => {\n    const { code, results, tests, description } = task\n\n    const decodedResults = JSON.parse(decodeBase64(decodeBase64(results)))\n    const decodedTestCases = JSON.parse(decodeBase64(tests))\n\n    const [height, setHeight] = useState(0)\n    const ref = useRef(null)\n\n    useEffect(() => {\n        setHeight(ref.current.clientHeight)\n    })\n\n    return (\n        <div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', width: \"100%\", height: \"40%\"}}>\n                <MonacoEditor\n                    value={decodeBase64(code)}\n                    theme=\"vs-dark\"\n                    language=\"plain-text\"\n                    width=\"100%\"\n                    height={`${height+2}px`}\n                    options={{readOnly: true}}\n                />\n                <Card style={{ padding: '1em', width: '100%' }} variant=\"outlined\" ref={ref}>\n                    <MarkdownViewer markdown={decodeBase64(description)} />\n                </Card>\n            </div>\n            <div style={{textAlign: 'left', display: 'flex', flexDirection: 'row', marginTop: '2em', justifyContent: 'space-between'}}>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Test Cases:</Typography>\n                    {decodedTestCases.map((testCase, idx) => (<SingleTestCase key={idx} testCase={testCase}/>))}\n                </Card>\n                <Card style={{ padding: '1em', width: \"40%\", maxHeight: '40vh', overflow: 'scroll' }} variant=\"outlined\">\n                    <Typography variant=\"h6\">Results:</Typography>\n                    {decodedResults.map((result, idx) => (<SingleResult key={idx} result={result} />))}\n                </Card>\n            </div>\n        </div>\n    )\n}","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel} from 'react-responsive-carousel';\nimport {SingleTaskReview} from './SingleTaskReview'\n\nexport const TasksCarousel = ({ tasks }) => {\n\n    return (\n        <div style={{ marginLeft: '5em'}}>\n            <Carousel\n                infiniteLoop\n            >\n                {tasks.map((task, idx) => <SingleTaskReview task={task} key={idx} />)}\n            </Carousel>\n        </div>\n    )\n}","import {useEffect, useState} from 'react'\nimport {tasksApi} from '../../../utils/apis/tasksAPI';\nimport {useDevPassword} from '../../../utils/hooks/useDevPassword'\nimport {NotesDrawer} from '../../notes/NotesDrawer';\nimport {TasksCarousel} from './TasksCarousel'\nimport Swal from 'sweetalert2'\nimport {useHistory} from 'react-router-dom'\nimport {Typography} from '@material-ui/core'\nimport CenteredCircularProgress from '../../commons/CenteredCircularProgress'\n\nexport const ReviewTask = ({ id: taskStageUUID }) => {\n\n    const { getEncodedDevPassword } = useDevPassword()\n    \n    const history = useHistory()\n\n    const [notes, setNotes] = useState([])\n    const [tasks, setTasks] = useState([])\n    const [reload, setReload] = useState(false)\n    const [isFetching, setIsFetching] = useState(true)\n\n    useEffect(() => {\n       tasksApi.getNotesWithTasksByTaskUUID(taskStageUUID, getEncodedDevPassword())\n            .then(data => {\n                setNotes(data?.notes || [])\n                setTasks(data?.tasks || [])\n                setIsFetching(false)\n            })\n            .catch( err => {\n                    setIsFetching(false)\n                    Swal.fire({\n                        title: \"You're not supposed to be here!\",\n                        text: \"We're sorry, but password you have provided was incorrect.\",\n                        icon: \"error\"\n                    }).then(() => {\n                        history.push('/')\n                    })\n                }   \n            )\n    }, [taskStageUUID, reload])\n\n    \n\n    return(\n        <div>\n            {\n                isFetching ? <CenteredCircularProgress size={100} /> : (\n                    <div>\n                        <NotesDrawer notes={notes} uuid={taskStageUUID} uuid_key=\"task_note\" reload={reload} setReload={setReload} />\n                        { tasks?.length > 0 && !isFetching ? <TasksCarousel tasks={tasks} /> : <Typography variant=\"h5\" style={{textAlign: 'center'}}> There are no tasks results to show! </Typography>}\n                    </div>\n                )\n            }\n        </div>\n    )\n}","import {useState} from \"react\";\n\nexport const FileUpload = ({handleChange}) => {\n\n    const [uploaded, setUploaded] = useState(false)\n\n    return (\n        <label style={{\n            border: `1px solid #ccc`,\n            display: 'inline-block',\n            padding: `6px 12px`,\n            cursor: 'pointer',\n            width: '80%'\n        }}>\n            <input type=\"file\" onChange={({target}) => {\n                setUploaded(true);\n                handleChange(target.files[0])\n            }} style={{display: 'none'}}/>\n            {!uploaded ? \"Upload File!\" : \"Done!\"}\n        </label>\n    )\n}","import {MarkdownEditor} from \"../../../commons/MarkdownEditor\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {FileUpload} from \"../../../commons/FileUpload\";\n\nexport const AddDescription = ({ handleChange }) => {\n\n    const textEditor = <h1>We're sorry but this feature hasn't been implemented yet!</h1>\n    const mdEditor = <MarkdownEditor handleChange={handleChange['md']} />\n    const fileEditor = <FileUpload handleChange={handleChange['file']} />\n\n    const [editor, setEditor] = useState(mdEditor)\n\n    const handleRadioChange = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setEditor(textEditor)\n                break;\n            case 'md':\n                setEditor(mdEditor)\n                break;\n            case 'file':\n                setEditor(fileEditor)\n                break;\n            default:\n                setEditor(null)\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Add description to your task</Typography>\n            <div style={{margin: '1em'}} />\n            <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '10px', marginBottom: '1em'}}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}} defaultValue=\"Markdown\">\n                    <FormControlLabel value=\"text\" control={<Radio/>} label=\"Text\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"md\" control={<Radio/>} label=\"Markdown\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            { editor }\n        </div>\n    )\n}","import {IconButton, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {AddCircleOutlined} from \"@material-ui/icons\";\n\nexport const Form = ({ addTestCase }) => {\n\n    const [testCase, setTestCase] = useState({})\n\n    const addTestCaseAndClearFields = () => {\n        addTestCase(testCase)\n        setTestCase({})\n    }\n\n    return (\n        <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', gap: '2em'}}>\n            <TextField\n                label=\"Input\"\n                variant=\"outlined\"\n                value={testCase?.input}\n                onChange={({ target }) => setTestCase({...testCase, input: target.value})}\n            />\n            <TextField\n                label=\"Expected Output\"\n                variant=\"outlined\"\n                value={testCase?.output}\n                onChange={({ target }) => setTestCase({...testCase, output: target.value})}\n            />\n            <IconButton onClick={() => {\n                addTestCaseAndClearFields(testCase)\n                setTestCase({})\n            }}>\n                <AddCircleOutlined fontSize=\"large\" color=\"primary\" />\n            </IconButton>\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {Form} from \"./Form\";\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const ManualTestsCases = ({ handleSubmit }) => {\n\n    const [testCases, setTestCases] = useState([])\n\n    useEffect(() => {\n        handleSubmit(testCases)\n    }, [testCases])\n\n    const handleAddTestCase = (testCase) => {\n        const preparedTestCase = {\n            testData: testCase.input,\n            expectedResult: testCase.output,\n            testCaseId: testCases.length === 0 ? 1 : testCases[testCases.length - 1].testCaseId + 1\n        }\n        setTestCases([\n            ...testCases,\n            preparedTestCase\n        ])\n    }\n\n    const handleDelete = (testCase) => {\n        setTestCases(\n            testCases.filter(test => test.testCaseId !== testCase.testCaseId)\n        )\n    }\n\n    return (\n        <div style={{maxHeight: '70vh', overflow: 'scroll'}}>\n            <Form addTestCase={(testCase) => handleAddTestCase(testCase)} />\n            <TableContainer component={Paper} style={{marginTop: '5px'}}>\n                <Table>\n                    <TableHead>\n                      <TableRow>\n                          <TableCell>Test Case Id</TableCell>\n                          <TableCell>Input</TableCell>\n                          <TableCell>Expected Output</TableCell>\n                          <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {testCases.map(testCase => (\n                            <TableRow key={testCase.testCaseId}>\n                                <TableCell align=\"left\">{testCase.testCaseId}.</TableCell>\n                                <TableCell align=\"left\">{testCase.testData}</TableCell>\n                                <TableCell align=\"left\">{testCase.expectedResult}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handleDelete(testCase)}>\n                                        <DeleteIcon fontSize=\"large\" color=\"primary\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}","import {FileUpload} from \"../../../commons/FileUpload\";\nimport {FormControlLabel, Radio, RadioGroup, Typography} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {ManualTestsCases} from \"./testcases/Manual\";\n\nexport const AddTests = ({ handleChange }) => {\n\n    const [view, setView] = useState(null)\n\n    const fileUploader = <FileUpload handleChange={handleChange['file']}/>\n    const manualView = <ManualTestsCases handleSubmit={handleChange['manual']} />\n\n    const handleRadioChange = ({target}) => {\n        switch (target.value) {\n            case 'manually':\n                setView(manualView)\n                break;\n            case 'file':\n                setView(fileUploader)\n                break;\n            default:\n                setView(null)\n                break;\n        }\n    }\n\n    return (\n        <div style={{minHeight: '60vh'}}>\n            <Typography variant=\"h6\">Add tests for your task</Typography>\n            <Typography variant=\"subtitle1\">Remember to set expected value as String, as our code checker will evaluate\n                result of code to String</Typography>\n            <div style={{margin: '1em'}}/>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexFlow: 'row wrap',\n                gap: '10px',\n                marginBottom: '1em'\n            }}>\n                <RadioGroup name=\"descriptionGroup\" onChange={handleRadioChange} style={{display: \"inline\"}}>\n                    <FormControlLabel value=\"manually\" control={<Radio/>} label=\"Manual\" labelPlacement=\"top\"/>\n                    <FormControlLabel value=\"file\" control={<Radio/>} label=\"File\" labelPlacement=\"top\"/>\n                </RadioGroup>\n            </div>\n            {view}\n        </div>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {AddDescription} from \"./description/AddDescription\";\nimport {convertFileToBase64} from \"../../../utils/apis/files\";\nimport {AddTests} from \"./tests/AddTests\";\nimport {tasksApi} from \"../../../utils/apis/tasksAPI\";\nimport {encodeBase64} from '../../../utils/hooks/Base64';\n\nlet task = {id: null}\n\nconst clearTask = () => task = {id: null}\n\nconst handleMarkdownChange = ({html, text}) => {\n    clearTask()\n    task['descriptionFileName'] = 'description.md'\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleTextChange = (text) => {\n    clearTask()\n    task['descriptionFileName'] = \"description.txt\"\n    task['descriptionBase64'] = window.btoa(text)\n}\n\nconst handleFileChangeDescription = async (value) => {\n    clearTask()\n\n    const file = await handleFileChange(value, 'descriptionBase64')\n    task['descriptionFileName'] = file.fileName\n}\n\nconst handleFileChangeTests = async (value) => {\n    delete task['testsBase64']\n    await handleFileChange(value, 'testsBase64')\n}\n\nconst handleFileChange = async (value, key) => {\n    const file = {\n        fileName: value.name,\n        fileBase64: await convertFileToBase64(value)\n    }\n\n    task[key] = file.fileBase64.substring(\n        file.fileBase64.indexOf(\"base64\") + 7\n    )\n    return file\n}\n\nconst basicSwal = {\n    title: 'Add task',\n    showCancelButton: true,\n    confirmButtonColor: '#41A317',\n    confirmButtonText: 'Next',\n    allowOutsideClick: false,\n    width: '70%'\n}\n\nconst MySwal = withReactContent(Swal)\n\nexport const createTask = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddDescription\n            handleChange={{'md': handleMarkdownChange, 'text': handleTextChange, 'file': handleFileChangeDescription}}/>\n    }).then(result => {\n        if (result.isConfirmed) {\n            createTests(setReload, credentials)\n        }\n    })\n}\n\n\nconst handleManualTestsChange = (testCases) => {\n    delete task['testsBase64']\n    task['testsBase64'] = encodeBase64(JSON.stringify(testCases))\n}\n\nconst createTests = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        html: <AddTests handleChange={{'file': handleFileChangeTests, 'manual': handleManualTestsChange}}/>\n    }).then(result => {\n        if(result.isConfirmed) {\n            createTimeLimit(setReload, credentials)\n        }\n    })\n}\n\nconst createTimeLimit = (setReload, credentials) => {\n    MySwal.fire({\n        ...basicSwal,\n        input: 'number',\n        text: 'Add time limit'\n    }).then(result => {\n        if(result.isConfirmed) {\n            task['timeLimit'] = Number(result.value)\n            create(setReload, credentials)\n        }\n    })\n}\n\nconst create = (setReload, credentials) => {\n    tasksApi.updateTasks(task, credentials, setReload)\n}","import {useEffect, useState} from \"react\";\nimport {Task} from \"./Task\";\nimport {Button, Drawer, List, ListItem} from \"@material-ui/core\";\nimport {AddCircleOutline} from \"@material-ui/icons\";\nimport {constants} from \"../../../utils/constants\";\nimport {createTask} from \"./createTask\";\nimport {useDevPassword} from \"../../../utils/hooks/useDevPassword\";\n\nexport const TasksList = ({ fetchTasks, organizationId }) => {\n\n    const [reload, setReload] = useState(false)\n\n    const {getEncodedDevPassword} = useDevPassword()\n\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        fetchTasks(organizationId, getEncodedDevPassword())\n            .then(data => {\n                setTasks(data)\n            })\n    }, [fetchTasks, organizationId, reload])\n\n    const addTask = () => {\n        createTask(setReload, { password: getEncodedDevPassword(), organizationId })\n    }\n\n    return (\n        <div>\n            <div style={{display: 'flex', flexFlow: 'row wrap', gap: '2em', marginRight: '5%'}}>\n                {tasks.map(task => <Task key={task?.id} task={task} tasksOperations={[]}/>)}\n            </div>\n            <Drawer\n                variant=\"permanent\"\n                style={{display: \"flex\", alignItems: \"center\"}}\n                anchor=\"right\"\n            >\n                <List style={{marginTop: `calc(${constants.navbar_height} + 1em)`}}>\n                    <ListItem>\n                        <Button onClick={addTask}>\n                            <AddCircleOutline fontSize=\"large\" color=\"action\"/>\n                        </Button>\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    )\n}","import {useState} from 'react'\nimport {Drawer, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {TasksList} from './tasks/crud/TasksList';\nimport {ApplicationsView} from './applications/ApplicationsView'\n\nexport const DevView = ({ fetchTasks, getApplications, id, mailInBase64 }) => {\n\n    const [view, setView] = useState('edit')\n\n    const getView = () => {\n        if (view === 'edit') {\n            return (\n                <TasksList\n                    fetchTasks={fetchTasks}\n                    organizationId={id}\n                />\n            )\n        } else if (view === 'assign') {\n            return (\n                <ApplicationsView\n                    isHR={false}\n                    isDev={true}\n                    getApplications={getApplications}\n                    mailInBase64={mailInBase64}\n                    organizationUUID={id}\n                />\n            )\n        } else return null\n    }\n\n    return (\n    <div>\n        <div style={{marginLeft: '10%'}}>\n            {getView()}\n        </div>\n        <Drawer\n            open\n            variant=\"permanent\"\n        >\n            <List style={{marginTop: '5em'}}>\n                <ListItem button onClick={() => setView('edit')}>\n                    <ListItemIcon>\n                        <EditIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Edit Tasks\" />\n                </ListItem>\n                <ListItem button onClick={() => setView('assign')}>\n                    <ListItemIcon>\n                        <AssignmentIcon size=\"large\" color=\"action\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Assign Task\" />\n                </ListItem>\n            </List>\n        </Drawer>\n    </div>\n    )\n}","import {LandingPage} from \"../components/LandingPage/LandingPage\";\nimport {Meeting} from \"../components/meeting/meetingTime/Meeting\";\nimport {ApplyForm} from \"../components/offers/applyForm/ApplyForm\";\nimport {OffersView} from \"../components/offers/list/OffersView\";\nimport {offersAPI} from \"./apis/OfferApi\";\nimport {withUserAuth} from \"../components/auth/withUserAuth\";\nimport {hrOfferButtons} from \"../components/offers/HrOfferButtons\";\nimport {theme} from \"./theme\";\nimport {ApplicationsView} from \"../components/applications/ApplicationsView\";\nimport {applicationsAPI} from \"./apis/applicationsAPI\";\nimport {OfferForm} from \"../components/offers/createForm/OfferForm\";\nimport {ManageProcess} from \"../components/process/manage/ManageProcess\";\nimport {LoginForm} from \"../components/auth/login/LoginForm\";\nimport {RegistrationRouting} from \"../components/auth/registration/RegistrationRouting\";\nimport {MultipleTasksWrapper} from \"../components/tasks/MultipleTasksWrapper\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {MeetingOrganizerWrapper} from \"../components/meeting/preparing/MeetingOrganizerWrapper\";\nimport HrOffersView from \"../components/offers/list/HrOffersView\";\nimport SettingsOverlay from \"../components/userMenu/SettingsOverlay\";\nimport {OrganizationPartnersManagement} from \"../components/organization/OrganizationPartnersManagement\";\nimport {WithDevPassword} from \"../components/tasks/WithDevPassword\";\nimport {ReviewTask} from \"../components/tasks/review/ReviewTask\";\nimport {Note} from '../components/notes/Note';\nimport {tasksApi} from './apis/tasksAPI'\nimport {DevView} from '../components/DevView'\n\nconst createRoute = (path, component, style={margin: \"1em\", marginTop: \"2em\"}) => {\n    return {\n        path,\n        style,\n        component\n    }\n}\n\nconst routes = ([reload, setReload]) => [\n    createRoute(\"/\", <div><LandingPage /><a href='https://www.freepik.com/vectors/people' style={{display:\"none\"}}>People vector created by pikisuperstar - www.freepik.com</a></div>),\n    createRoute(\"/interview/:interviewId/:companyId\", <Meeting />, {}),\n    createRoute(\"/interview/:interviewId/\", <Meeting />, {}),\n    createRoute(\"/offers/apply/:id\", <ApplyForm />),\n    createRoute(\"/offers\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/offers/:id\", <OffersView getOffers={() => offersAPI.getAllOffers(true)}/>),\n    createRoute(\"/hr/offers\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/hr/offers/view/:id\", withUserAuth(HrOffersView, [\"hr\"])),\n    createRoute(\"/user/applications\", withUserAuth(ApplicationsView, [\"job_seeker\"], {isHR: false, getApplications: () => applicationsAPI.getApplicationsByJobSeeker()})),\n    createRoute(\"/hr/offers/add\", withUserAuth(OfferForm, [\"hr\"], {onSubmit: (form) => offersAPI.create(form)})),\n    createRoute(\"/hr/offers/edit/:id\", withUserAuth(OfferForm, [\"hr\"], {onSubmit:(form) => offersAPI.update(form)})),\n    createRoute(\"/hr/process/manage/:id\", withUserAuth(ManageProcess, [\"hr\"])),\n    createRoute(\"/hr/applications/:id\", withUserAuth(ApplicationsView, [\"hr\"], {isHR: true, getApplications: (id) => applicationsAPI.getApplicationsByOfferId(id)})),\n    createRoute(\"/organization/users\", withUserAuth(OrganizationPartnersManagement, [\"organization\"])),\n    createRoute(\"/organization/offers\", withUserAuth(OffersView, [\"organization\"], {getOffers: () => offersAPI.getOffersFromOrganization(), buttons: hrOfferButtons(theme)})),\n    createRoute(\"/login\", <LoginForm reload={{reload, setReload}} />),\n    createRoute(\"/register\", <RegistrationRouting />),\n    createRoute(\"/tasks/assign/:id/:mailInBase64\", <WithDevPassword WrappedComponent={DevView} wrappedProps={{ fetchTasks: (id, password) => tasksApi.getTasksByOrganization(id, password), getApplications: (organizationId, devMail, devPassword) => applicationsAPI.getApplicationsForDev(organizationId, devMail, devPassword) }} createPassword={(id, password) => `${id}:${password}`} />),\n    createRoute('/task/:taskStageUUID', <MultipleTasksWrapper fetchTasks={(id) => tasksApi.getTasks(id)} />, {}),\n    createRoute('/meeting/organizer/:uuid', withUserAuth(MeetingOrganizerWrapper, [\"hr\"], {type: \"organizer\"}), {marginTop: \"2em\"}),\n    createRoute('/meeting/:type/:uuid', <MeetingOrganizerWrapper />, {marginTop: \"2em\"}),\n    createRoute(\"/settings\", <SettingsOverlay />),\n    createRoute(\"/tasks/review/:id\", <WithDevPassword WrappedComponent={ReviewTask} wrappedProps={{}} createPassword={(id, password) => `${password}:${id}`} />),\n    createRoute(\"/note\", <Note text=\"Note text as we can see\" tags={[\"Applied\", \"Some tag\", \"Some other tag\"]} />),\n    createRoute(\"*\", <div>Page</div>)\n]\n\nexport const getRoutes = ([reload, setReload]) => {\n    return routes([reload, setReload]).map((route, idx) => {\n        return (\n            <Route exact path={route.path} key={`${idx}`}>\n                <div style={route.style}>\n                    {route.component}\n                </div>\n            </Route>\n        )\n    })\n}","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch} from \"react-router-dom\";\nimport './App.css'\nimport {ThemeProvider} from '@material-ui/styles';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {theme} from \"./utils/theme\"\nimport {getRoutes} from \"./utils/routes\";\n\nfunction App() {\n\n    const [reload, setReload] = useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Navbar />\n          <Switch>\n              {getRoutes([reload, setReload])}\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}